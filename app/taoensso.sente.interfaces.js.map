{"version":3,"sources":["taoensso/sente/interfaces.cljc"],"mappings":"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","names":["taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$dyn","x__5350__auto__","m__5351__auto__","taoensso.sente.interfaces/sch-open?","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","taoensso$sente$interfaces$IServerChan$sch_close_BANG_$dyn","taoensso.sente.interfaces/sch-close!","taoensso$sente$interfaces$IServerChan$sch_send_BANG_$dyn","taoensso.sente.interfaces/sch-send!","taoensso.sente.interfaces/IServerChan","sch","websocket?","msg","taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$dyn","taoensso.sente.interfaces/ring-req->server-ch-resp","taoensso.sente.interfaces/IServerChanAdapter","sch-adapter","ring-req","callbacks-map","taoensso$sente$interfaces$IPacker$pack$dyn","taoensso.sente.interfaces/pack","taoensso$sente$interfaces$IPacker$unpack$dyn","taoensso.sente.interfaces/unpack","taoensso.sente.interfaces/IPacker","_","x"],"sourcesContent":["(ns taoensso.sente.interfaces\n  \"Alpha, subject to change.\n  Public interfaces / extension points.\"\n  (:require [taoensso.encore :as enc]))\n\n;;;; Server channels\n;; To work with Sente, a web server needs to provide implementations for\n;; the two protocols below. Please see the `taoensso.sente.server-adapters.*`\n;; namespaces for examples.\n;;\n;; Ref. https://github.com/ptaoussanis/sente/issues/102 for more info.\n\n(defprotocol IServerChan ; sch\n  ;; Wraps a web server's own async channel/comms interface to abstract away\n  ;; implementation differences.\n  (sch-open?  [sch] \"Returns true iff the channel is currently open.\")\n  (sch-close! [sch]\n    \"If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false.\")\n  (sch-send! [sch websocket? msg]\n    \"If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false.\"))\n\n(defprotocol IServerChanAdapter ; sch-adapter\n  ;; Wraps a web server's own ring-request->ring-response interface to\n  ;; abstract away implementation differences.\n  (ring-req->server-ch-resp [sch-adapter ring-req callbacks-map]\n    \"Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused.\"))\n\n;;;; Packers\n\n(defprotocol IPacker\n  \"Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.\"\n  (pack   [_ x])\n  (unpack [_ x]))\n"],"x_google_ignoreList":[0]}