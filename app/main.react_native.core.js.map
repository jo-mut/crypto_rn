{"version":3,"sources":["main/react_native/core.cljs"],"mappings":";AAMA,AAAKA,mCAAU,AAACC,+BAA0BC;AAE1C,AAAKC,8BAAK,AAACF,+BAA0B,AAAYG;AAEjD,AAAeC,sCACb,AAACJ,+BAA0B,AAAaG;AAE1C,+BAAA,uCAAAE,tEAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAAA,RACuBK;aADvB,AAAAH,4CAAAF,eAAA,pEACWI;AADX,AAAA,0FAEGN,oCACA,EAAI,OAASM,qBACX,oDAAA,yDAAA,2CAAA,xJAACE,8CAAMD,6JAAoBD,gBAC3BC;;AAEL,AAAKE,qCAAY,AAACb,+BAA0B,AAAkBG;AAE9D,AAAKW,8BAAK,AAACd,+BAA0B,AAAYG;AACjD,AAAKY,oCAAW,AAACf,+BAA0B,AAAiBG;AAE5D,AAAKa,2CAAkB,AAAChB,+BAA0B,AAAwBG;AAC1E,AAAKc,6CAAoB,AAACjB,+BAA0B,AAA0BG;AAC9E,AAAKe,oDACH,AAAClB,+BAA0B,AAAgCG;AAG7D,4CAAA,5CAAMgB;AAAN,AAEE,OAAO,AAAA,AAAQhB;;AAEjB,AAAKiB,oCACH,AAACC,kBACA;AAAA,AACE,+KAAA,2EAAA,nPAACC,0DAAQ,kDAAA,lDAAM,AAAkBnB;;AAEtC,AAAKoB,oCACH,AAACF,kBACA;AAAA,AACE,+KAAA,2EAAA,nPAACC,0DAAQ,kDAAA,lDAAM,AAAkBnB","names":["main.react-native.core/ion-icons","reagent.core/adapt-react-class","js/shadow.js.shim.module$react_native_vector_icons$Ionicons.default","main.react-native.core/view","js/shadow.js.shim.module$react_native","main.react-native.core/image-native","p__17374","map__17375","cljs.core/--destructure-map","cljs.core.get","main.react-native.core/image","source","props","cljs.core.assoc","main.react-native.core/scroll-view","main.react-native.core/text","main.react-native.core/text-input","main.react-native.core/touchable-opacity","main.react-native.core/touchable-highlight","main.react-native.core/touchable-without-feedback","main.react-native.core/hide-splash-screen","main.react-native.core/get-window","cljs.core/memoize","cljs.core.js__GT_clj","main.react-native.core/get-screen"],"sourcesContent":["(ns main.react-native.core\n  (:require [reagent.core :as reagent] \n            [\"react-native\" :as react-native]\n            [\"react-native-vector-icons/Ionicons\" :default ion-icons-class]))\n\n\n(def ion-icons (reagent/adapt-react-class ion-icons-class))\n\n(def view (reagent/adapt-react-class (.-View ^js react-native)))\n\n(def ^:private image-native\n  (reagent/adapt-react-class (.-Image ^js react-native)))\n\n(defn image\n  [{:keys [source] :as props}]\n  [image-native\n   (if (string? source)\n     (assoc props :source {:uri source})\n     props)])\n\n(def scroll-view (reagent/adapt-react-class (.-ScrollView ^js react-native)))\n\n(def text (reagent/adapt-react-class (.-Text ^js react-native)))\n(def text-input (reagent/adapt-react-class (.-TextInput ^js react-native)))\n\n(def touchable-opacity (reagent/adapt-react-class (.-TouchableOpacity ^js react-native)))\n(def touchable-highlight (reagent/adapt-react-class (.-TouchableHighlight ^js react-native)))\n(def touchable-without-feedback\n  (reagent/adapt-react-class (.-TouchableWithoutFeedback ^js react-native)))\n\n\n(defn hide-splash-screen\n  []\n  (.hide ^js (-> react-native .-NativeModules .-SplashScreen)))\n\n(def get-window\n  (memoize\n   (fn []\n     (js->clj (.get (.-Dimensions ^js react-native) \"window\") :keywordize-keys true))))\n\n(def get-screen\n  (memoize\n   (fn []\n     (js->clj (.get (.-Dimensions ^js react-native) \"screen\") :keywordize-keys true))))\n"]}