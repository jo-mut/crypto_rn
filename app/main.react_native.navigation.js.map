{"version":3,"sources":["main/react_native/navigation.cljs"],"mappings":";AAKA,mDAAA,nDAAMA,8GACHC;AADH,AAEE,OAAwBC,2EAAW,AAACC,qBAAQF;;AAE9C,kDAAA,lDAAMG,4GAAoBC,KAAKC;AAA/B,AAAsC,OAAwBJ,2EAAWG,KAAKC;;AAC9E,uDAAA,vDAAMC,sHAAyBF,KAAKC,KAAKE;AAAzC,AAA+C,OAAwBN,2EAAWG,KAAKC,KAAKE;;AAC5F,8DAAA,9DAAMC,oIAAgCC;AAAtC,AAA+C,OAAkCR,qFAAWQ;;AAE5F,wCAAA,xCAAMC,wFACHC;AADH,AAEE,OAAcV,iEAAW,AAACC,qBAAQS;;AAEpC,8CAAA,9CAAMC,oGACHC,MAAMC;AADT,AAEE,OAAmBb,sEAAWY,MAAM,AAACX,qBAAQY;;AAE/C,oCAAA,pCAAMC,gFACHX,KAAKC;AADR,AAEE,OAAWJ,8DAAWG,KAAK,AAACF,qBAAQG;;AAEtC,mCAAA,nCAAMW,8EACHF;AADH,AAEE,OAAUb,6DAAWa;;AAEvB,0CAAA,1CAAMG,4FACHH;AADH,AAEE,OAAgBb,mEAAW,AAACC,qBAAQY;;AAEtC,6CAAA,7CAAMI,kGACHJ;AADH,AAEE,OAAmBb,sEAAWa;;AAEhC,4CAAA,5CAAMK,gGACHL;AADH,AAEE,OAAcb,qEAAW,AAACC,qBAAQY;;AAEpC,sCAAA,tCAAMM,oFACHN;AADH,AAEE,OAAQb,+DAAW,AAACC,qBAAQY;;AAE9B,2CAAA,3CAAMO,8FACHC;AADH,AAEE,OAAYrB,mEAAW,AAACC,qBAAQoB;;AAElC,gDAAA,hDAAMC,wGACHT;AADH,AAEE,gGAAA,zFAAQ,AAAiBb,wEAAWa;AAApC,AAAA;;;AAEF,yDAAA,zDAAMU,0HACHf;AADH,AAEE,OAA8B,AAAiBR,8FAAYQ;;AAE7D,2DAAA,3DAAMgB,8HACHhB;AADH,AAEE,OACC,AAASR,0GACT,WAASyB;AAAT,AACE,IAAAC,WAAS,AAAYD;AAArB,AAAA,sFAAAC,+BAAAA,7GAAClB,wCAAAA,kDAAAA;;;AAEN,4DAAA,5DAAMmB,gIACHnB;AADH,AAEE,OAAiC,AAAiBR,iGAAYQ;;AAEhE,iEAAA,jEAAMoB,0IACHpB;AADH,AAEE,OACC,AAAiBR,qGACjB,WAASyB;AAAT,AACE,IAAAI,WAAS,AAACC,gDAAQ,AAAiBL;AAAnC,AAAA,sFAAAI,+BAAAA,7GAACrB,wCAAAA,kDAAAA;;;AAEN,oEAAA,pEAAMuB,gJACHvB;AADH,AAEE,OACC,AAAiBR,wGACjB,WAASyB;AAAT,AACE,IAAAO,WAAS,AAAiBP;AAA1B,AAAA,sFAAAO,+BAAAA,7GAACxB,wCAAAA,kDAAAA;;;AAEN,6CAAA,7CAAMyB,kGACHC,GAAGnC;AADN,AAEE,OAAeC,sEAAWkC,GAAG,AAACjC,qBAAQF;;AAExC,AAAKoC,yCAAU,6CAAA,7CAACC;AAEhB,iDAAA,jDAAMC;AAAN,AAEE,OAAA,8GAAA,AAAAC,gBAAqBH;;AAEvB,AAAO,AAAYnC,0EACZ,WAASuC;AAAT,AACE,oEAAA,2CAAA,4FAAA,0GAAA,9SAACC,sBAAOL,0JAA+B,AAAgBI,sGAChB,AAAoBA,wGACpB,AAAmBA;;AAEnE,8CAAA,9CAAME,oGACQC,MAAKC;AADnB,AAEE,QAAM,AAAGD,gCACP,AAAA,AAAI1C,gFAAiC0C,MAAKC","names":["main.react-native.navigation/set-default-options","opts","js/shadow.js.shim.module$react_native_navigation.Navigation","cljs.core/clj->js","main.react-native.navigation/register-component","arg1","arg2","main.react-native.navigation/lazy-register-component","arg3","main.react-native.navigation/set-lazy-component-registrator","handler","main.react-native.navigation/set-root","root","main.react-native.navigation/set-stack-root","stack","component","main.react-native.navigation/push","main.react-native.navigation/pop","main.react-native.navigation/show-modal","main.react-native.navigation/dismiss-modal","main.react-native.navigation/show-overlay","main.react-native.navigation/pop-to","main.react-native.navigation/pop-to-root","tab","main.react-native.navigation/dissmiss-overlay","main.react-native.navigation/reg-app-launched-listener","main.react-native.navigation/reg-button-pressed-listener","evn","G__10352","main.react-native.navigation/reg-modal-dismissed-listener","main.react-native.navigation/reg-component-did-appear-listener","G__10353","cljs.core.keyword","main.react-native.navigation/reg-component-did-disappear-listener","G__10354","main.react-native.navigation/merge-options","id","main.react-native.navigation/constants","cljs.core.atom","main.react-native.navigation/status-bar-height","cljs.core/deref","consts","cljs.core/reset!","main.react-native.navigation/bind-component","this","component-id"],"sourcesContent":["(ns main.react-native.navigation\n  (:refer-clojure :exclude [pop])\n  (:require\n    [\"react-native-navigation\" :refer (Navigation)]))\n\n(defn set-default-options\n  [opts]\n  (.setDefaultOptions ^js Navigation (clj->js opts)))\n\n(defn register-component [arg1 arg2 ] (.registerComponent ^js Navigation arg1 arg2))\n(defn lazy-register-component [arg1 arg2 arg3] (.registerComponent ^js Navigation arg1 arg2 arg3))\n(defn set-lazy-component-registrator [handler] (.setLazyComponentRegistrator ^js Navigation handler))\n\n(defn set-root\n  [root]\n  (.setRoot ^js Navigation (clj->js root)))\n\n(defn set-stack-root\n  [stack component]\n  (.setStackRoot ^js Navigation stack (clj->js component)))\n\n(defn push\n  [arg1 arg2]\n  (.push ^js Navigation arg1 (clj->js arg2)))\n\n(defn pop\n  [component]\n  (.pop ^js Navigation component))\n\n(defn show-modal\n  [component]\n  (.showModal ^js Navigation (clj->js component)))\n\n(defn dismiss-modal\n  [component]\n  (.dismissModal ^js Navigation component))\n\n(defn show-overlay\n  [component]\n  (.showOverlay Navigation (clj->js component)))\n\n(defn pop-to\n  [component]\n  (.popTo Navigation (clj->js component)))\n\n(defn pop-to-root\n  [tab]\n  (.popToRoot Navigation (clj->js tab)))\n\n(defn dissmiss-overlay\n  [component]\n  (.catch (.dismissOverlay Navigation component) #()))\n\n(defn reg-app-launched-listener\n  [handler]\n  (.registerAppLaunchedListener ^js (.events ^js Navigation) handler))\n\n(defn reg-button-pressed-listener\n  [handler]\n  (.registerNavigationButtonPressedListener\n   (.events Navigation)\n   (fn [^js evn]\n     (handler (.-buttonId evn)))))\n\n(defn reg-modal-dismissed-listener\n  [handler]\n  (.registerModalDismissedListener ^js (.events ^js Navigation) handler))\n\n(defn reg-component-did-appear-listener\n  [handler]\n  (.registerComponentDidAppearListener\n   ^js (.events ^js Navigation)\n   (fn [^js evn]\n     (handler (keyword (.-componentName evn))))))\n\n(defn reg-component-did-disappear-listener\n  [handler]\n  (.registerComponentDidDisappearListener\n   ^js (.events ^js Navigation)\n   (fn [^js evn]\n     (handler (.-componentName evn)))))\n\n(defn merge-options\n  [id opts]\n  (.mergeOptions Navigation id (clj->js opts)))\n\n(def constants (atom nil))\n\n(defn status-bar-height\n  []\n  (:status-bar-height @constants))\n\n(.then (.constants Navigation)\n       (fn [^js consts]\n         (reset! constants {:top-bar-height     (.-topBarHeight consts)\n                            :bottom-tabs-height (.-bottomTabsHeight consts)\n                            :status-bar-height  (.-statusBarHeight consts)})))\n\n(defn bind-component\n  [^js/Object this component-id]\n  (set! (. this -navigationEventListener)\n    (.. Navigation events (bindComponent this component-id))))\n"]}