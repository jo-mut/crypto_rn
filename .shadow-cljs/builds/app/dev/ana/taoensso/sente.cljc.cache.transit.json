["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(105),(0)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.105);\n}\n/**\n * Useful for identifying client/server mismatch\n */\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\n} else {\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\n});\n/**\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\n */\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\nif((!(cljs.core.vector_QMARK_(x)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\n} else {\nif(cljs.core.not((function (){var G__21444 = cljs.core.count(x);\nvar fexpr__21443 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\nreturn (fexpr__21443.cljs$core$IFn$_invoke$arity$1 ? fexpr__21443.cljs$core$IFn$_invoke$arity$1(G__21444) : fexpr__21443.call(null, G__21444));\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\n} else {\nvar vec__21445 = x;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21445,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21445,(1),null);\nif((!((ev_id instanceof cljs.core.Keyword)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\n} else {\nif(cljs.core.not(cljs.core.namespace(ev_id))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\n} else {\nreturn null;\n\n}\n}\n\n}\n}\n});\n/**\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n *   throws a validation exception.\n */\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\nvar temp__5804__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar errs = temp__5804__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\n} else {\nreturn null;\n}\n});\n/**\n * Valid [ev-id ?ev-data] form?\n */\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\nreturn (taoensso.sente.validate_event(x) == null);\n});\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\nvar temp__5802__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar errs = temp__5802__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\n} else {\nreturn x;\n}\n});\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\nvar and__5000__auto__ = cljs.core.map_QMARK_(x);\nif(and__5000__auto__){\nvar and__5000__auto____$1 = taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x);\nif(and__5000__auto____$1){\nvar map__21448 = x;\nvar map__21448__$1 = cljs.core.__destructure_map(map__21448);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21448__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21448__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21448__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21448__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (((cljs.core.ifn_QMARK_(send_fn)) && (((taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)))))));\n} else {\nreturn and__5000__auto____$1;\n}\n} else {\nreturn and__5000__auto__;\n}\n});\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\nvar and__5000__auto__ = cljs.core.map_QMARK_(x);\nif(and__5000__auto__){\nvar and__5000__auto____$1 = taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x);\nif(and__5000__auto____$1){\nvar map__21449 = x;\nvar map__21449__$1 = cljs.core.__destructure_map(map__21449);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (((cljs.core.ifn_QMARK_(send_fn)) && (((taoensso.encore.atom_QMARK_(connected_uids)) && (((cljs.core.map_QMARK_(ring_req)) && (((taoensso.encore.nblank_str_QMARK_(client_id)) && (((taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))))))))))))));\n} else {\nreturn and__5000__auto____$1;\n}\n} else {\nreturn and__5000__auto__;\n}\n});\n/**\n * All server `event-msg`s go through this\n */\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__21450){\nvar map__21451 = p__21450;\nvar map__21451__$1 = cljs.core.__destructure_map(map__21451);\nvar ev_msg = map__21451__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21451__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21451__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nvar vec__21452 = taoensso.sente.as_event(event);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21452,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21452,(1),null);\nvar valid_event = vec__21452;\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,189,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\n}),null)),null,-1842097303);\n} else {\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\n}\n});\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\nvar fexpr__21455 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\nreturn (fexpr__21455.cljs$core$IFn$_invoke$arity$1 ? fexpr__21455.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__21455.call(null, cb_reply_clj));\n});\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\n});\n/**\n * prefixed-pstr->[clj ?cb-uuid]\n */\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\nif(typeof prefixed_pstr === 'string'){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",203,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\n}\n\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\n}catch (e21459){var t = e21459;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,210,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\n}),null)),null,-1267567690);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\n}})();\nvar vec__21456 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21456,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21456,(1),null);\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,216,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\n}),null)),null,-1989534803);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\n});\n/**\n * clj->prefixed-pstr\n */\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\nvar G__21461 = arguments.length;\nswitch (G__21461) {\ncase 2:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,223,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\n}),null)),null,-1212337664);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,232,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\n}),null)),null,-1518241627);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$lang$maxFixedArity = 3);\n\n\n/**\n* @constructor\n * @implements {taoensso.sente.interfaces.IPacker}\n*/\ntaoensso.sente.EdnPacker = (function (){\n});\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\n}));\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\n}));\n\n(taoensso.sente.EdnPacker.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(taoensso.sente.EdnPacker.cljs$lang$type = true);\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\");\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__5287__auto__,writer__5288__auto__,opt__5289__auto__){\nreturn cljs.core._write(writer__5288__auto__,\"taoensso.sente/EdnPacker\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/EdnPacker.\n */\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\nreturn (new taoensso.sente.EdnPacker());\n});\n\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\nreturn taoensso.sente.default_edn_packer;\n} else {\nvar e = (function (){try{if((function (p1__21462_SHARP_){\nif((!((p1__21462_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__21462_SHARP_.taoensso$sente$interfaces$IPacker$)))){\nreturn true;\n} else {\nif((!p1__21462_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__21462_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__21462_SHARP_);\n}\n})(x)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21463){if((e21463 instanceof Error)){\nvar e = e21463;\nreturn e;\n} else {\nthrow e21463;\n\n}\n}})();\nif((e == null)){\nreturn x;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",245,\"((fn* [p1__21462#] (satisfies? interfaces/IPacker p1__21462#)) x)\",x,e,null);\n}\n}\n});\ntaoensso.sente.next_idx_BANG_ = (taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0 ? taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0() : taoensso.encore.idx_fn.call(null, ));\n\n\ntaoensso.sente.bad_origin_QMARK_ = (function taoensso$sente$bad_origin_QMARK_(allowed_origins,p__21466){\nvar map__21467 = p__21466;\nvar map__21467__$1 = cljs.core.__destructure_map(map__21467);\nvar ring_req = map__21467__$1;\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21467__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar origin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(headers,\"origin\");\nvar referer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(headers,\"referer\",\"\");\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(allowed_origins,new cljs.core.Keyword(null,\"all\",\"all\",892129742))){\nreturn false;\n} else {\nif(cljs.core.contains_QMARK_(cljs.core.set(allowed_origins),origin)){\nreturn false;\n} else {\nif(cljs.core.truth_(taoensso.encore.rsome((function (p1__21465_SHARP_){\nreturn clojure.string.starts_with_QMARK_(referer,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__21465_SHARP_),\"/\"].join(''));\n}),allowed_origins))){\nreturn false;\n} else {\nreturn true;\n\n}\n}\n}\n});\n/**\n * Takes a web server adapter[1] and returns a map with keys:\n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n *  :send-fn ; (fn [user-id ev] for server>user push.\n *  :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n *  :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n * \n *   Common options:\n *  :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n *  :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n *                     ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n *  :send-buf-ms-ajax  ; [2]\n *  :send-buf-ms-ws    ; [2]\n *  :packer            ; :edn (default), or an IPacker implementation.\n *  :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n * \n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n *    You must have the necessary web-server dependency in your project.clj and\n *    the necessary entry in your namespace's `ns` form.\n * \n *   [2] Optimization to allow transparent batching of rapidly-triggered\n *    server>user pushes. This is esp. important for Ajax clients which use a\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n *    after send call (larger values => larger batch windows).\n */\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___22190 = arguments.length;\nvar i__5727__auto___22191 = (0);\nwhile(true){\nif((i__5727__auto___22191 < len__5726__auto___22190)){\nargs__5732__auto__.push((arguments[i__5727__auto___22191]));\n\nvar G__22192 = (i__5727__auto___22191 + (1));\ni__5727__auto___22191 = G__22192;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__21471){\nvar vec__21472 = p__21471;\nvar map__21475 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21472,(0),null);\nvar map__21475__$1 = cljs.core.__destructure_map(map__21475);\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\nvar allowed_origins = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"allowed-origins\",\"allowed-origins\",1477851683),new cljs.core.Keyword(null,\"all\",\"all\",892129742));\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),(function (ring_req){\nvar or__5002__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar or__5002__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__5002__auto____$1)){\nreturn or__5002__auto____$1;\n} else {\nvar or__5002__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\nif(cljs.core.truth_(or__5002__auto____$2)){\nreturn or__5002__auto____$2;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\n}\n}\n}\n}));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\nvar bad_origin_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"bad-origin-fn\",\"bad-origin-fn\",1385595727),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized origin\"], null);\n}));\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),(function (ring_req){\nreturn null;\n}));\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),(function (ring_req){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\n}));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\nvar bad_csrf_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__21475__$1,new cljs.core.Keyword(null,\"bad-csrf-fn\",\"bad-csrf-fn\",16619032),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Bad CSRF token\"], null);\n}));\nnew cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21476){if((e21476 instanceof Error)){\nvar e = e21476;\nreturn e;\n} else {\nthrow e21476;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",345,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e,null);\n}\n})(),(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21477){if((e21477 instanceof Error)){\nvar e = e21477;\nreturn e;\n} else {\nthrow e21477;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",345,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e,null);\n}\n})()], null);\n\nvar e_22193 = (function (){try{if((function (p1__21468_SHARP_){\nif((!((p1__21468_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__21468_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\nreturn true;\n} else {\nif((!p1__21468_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__21468_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__21468_SHARP_);\n}\n})(web_server_ch_adapter)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21478){if((e21478 instanceof Error)){\nvar e_22193 = e21478;\nreturn e_22193;\n} else {\nthrow e21478;\n\n}\n}})();\nif((e_22193 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",346,\"((fn* [p1__21468#] (satisfies? interfaces/IServerChanAdapter p1__21468#)) web-server-ch-adapter)\",web_server_ch_adapter,e_22193,null);\n}\n\nvar max_ms_22194 = taoensso.sente.default_client_side_ajax_timeout_ms;\nif((lp_timeout_ms >= max_ms_22194)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_22194)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_22194], null));\n} else {\n}\n\nvar allowed_origins__$1 = (cljs.core.truth_((function (x){\nvar or__5002__auto__ = cljs.core.set_QMARK_(x);\nif(or__5002__auto__){\nreturn or__5002__auto__;\n} else {\nvar fexpr__21480 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),null], null), null);\nreturn (fexpr__21480.cljs$core$IFn$_invoke$arity$1 ? fexpr__21480.cljs$core$IFn$_invoke$arity$1(x) : fexpr__21480.call(null, x));\n}\n})(allowed_origins))?allowed_origins:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",355,\"([:or set? #{:all}] allowed-origins)\",allowed_origins,null,null));\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\nvar user_id_fn__$1 = (function (ring_req,client_id){\nvar or__5002__auto__ = (function (){var G__21481 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__21481) : user_id_fn.call(null, G__21481));\n})();\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\n}\n});\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\nvar upd_conn_BANG_ = (function() {\nvar G__22195 = null;\nvar G__22195__3 = (function (conn_type,uid,client_id){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar vec__21482 = _QMARK_v;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21482,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21482,(1),null);\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\n}));\n});\nvar G__22195__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\n}));\n});\nG__22195 = function(conn_type,uid,client_id,new__QMARK_sch){\nswitch(arguments.length){\ncase 3:\nreturn G__22195__3.call(this,conn_type,uid,client_id);\ncase 4:\nreturn G__22195__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__22195.cljs$core$IFn$_invoke$arity$3 = G__22195__3;\nG__22195.cljs$core$IFn$_invoke$arity$4 = G__22195__4;\nreturn G__22195;\n})()\n;\nvar connect_uid_BANG_ = (function (conn_type,uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21485){if((e21485 instanceof Error)){\nvar e = e21485;\nreturn e;\n} else {\nthrow e21485;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",391,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__21486){\nvar map__21487 = p__21486;\nvar map__21487__$1 = cljs.core.__destructure_map(map__21487);\nvar old_m = map__21487__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21487__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21487__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21487__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar new_m = (function (){var G__21488 = conn_type;\nvar G__21488__$1 = (((G__21488 instanceof cljs.core.Keyword))?G__21488.fqn:null);\nswitch (G__21488__$1) {\ncase \"ws\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ncase \"ajax\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__21488__$1)].join('')));\n\n}\n})();\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_connected_QMARK_;\n});\nvar upd_connected_uid_BANG_ = (function (uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21489){if((e21489 instanceof Error)){\nvar e = e21489;\nreturn e;\n} else {\nthrow e21489;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",408,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__21490){\nvar map__21491 = p__21490;\nvar map__21491__$1 = cljs.core.__destructure_map(map__21491);\nvar old_m = map__21491__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21491__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21491__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21491__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_disconnected_QMARK_;\n});\nvar send_fn = (function() { \nvar G__22215__delegate = function (user_id,ev,p__21492){\nvar vec__21493 = p__21492;\nvar map__21496 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21493,(0),null);\nvar map__21496__$1 = cljs.core.__destructure_map(map__21496);\nvar opts = map__21496__$1;\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21496__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar uid_22222 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\nvar __22223 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,434,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_22222,ev], null);\n}),null)),null,1663452276);\nvar __22224__$1 = (cljs.core.truth_(uid_22222)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\nvar __22225__$2 = taoensso.sente.assert_event(ev);\nvar ev_uuid_22226 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\nvar flush_buffer_BANG__22227 = (function (conn_type){\nvar temp__5804__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),(function (m){\nvar vec__21497 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_22222);\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21497,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21497,(1),null);\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_22226)){\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_22222),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_22222));\n} else {\nreturn taoensso.encore.swapped(m,null);\n}\n}));\nif(cljs.core.truth_(temp__5804__auto__)){\nvar pulled = temp__5804__auto__;\nvar vec__21500 = pulled;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21500,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21500,(1),null);\nif(cljs.core.vector_QMARK_(buffered_evs)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",461,\"(vector? buffered-evs)\",buffered_evs,null,null);\n}\n\nif(cljs.core.set_QMARK_(ev_uuids)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",462,\"(set? ev-uuids)\",ev_uuids,null,null);\n}\n\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,465,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\n}),null)),null,-1493988807);\n\nvar G__21503 = conn_type;\nvar G__21503__$1 = (((G__21503 instanceof cljs.core.Keyword))?G__21503.fqn:null);\nswitch (G__21503__$1) {\ncase \"ws\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_22222,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null, conns_,uid_22222,buffered_evs_ppstr,upd_conn_BANG_));\n\nbreak;\ncase \"ajax\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_22222,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null, conns_,uid_22222,buffered_evs_ppstr));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__21503__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,474,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_22222], null);\n}),null)),null,-106467350);\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__22227(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__22227(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\n}\n\nvar seq__21504_22234 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_22222], null))));\nvar chunk__21505_22235 = null;\nvar count__21506_22236 = (0);\nvar i__21507_22237 = (0);\nwhile(true){\nif((i__21507_22237 < count__21506_22236)){\nvar vec__21514_22239 = chunk__21505_22235.cljs$core$IIndexed$_nth$arity$2(null, i__21507_22237);\nvar _QMARK_sch_22240 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21514_22239,(0),null);\nvar _udt_22241 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21514_22239,(1),null);\nvar temp__5804__auto___22242 = _QMARK_sch_22240;\nif(cljs.core.truth_(temp__5804__auto___22242)){\nvar sch_22243 = temp__5804__auto___22242;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_22243);\n} else {\n}\n\n\nvar G__22244 = seq__21504_22234;\nvar G__22245 = chunk__21505_22235;\nvar G__22246 = count__21506_22236;\nvar G__22247 = (i__21507_22237 + (1));\nseq__21504_22234 = G__22244;\nchunk__21505_22235 = G__22245;\ncount__21506_22236 = G__22246;\ni__21507_22237 = G__22247;\ncontinue;\n} else {\nvar temp__5804__auto___22248 = cljs.core.seq(seq__21504_22234);\nif(temp__5804__auto___22248){\nvar seq__21504_22249__$1 = temp__5804__auto___22248;\nif(cljs.core.chunked_seq_QMARK_(seq__21504_22249__$1)){\nvar c__5525__auto___22250 = cljs.core.chunk_first(seq__21504_22249__$1);\nvar G__22251 = cljs.core.chunk_rest(seq__21504_22249__$1);\nvar G__22252 = c__5525__auto___22250;\nvar G__22253 = cljs.core.count(c__5525__auto___22250);\nvar G__22254 = (0);\nseq__21504_22234 = G__22251;\nchunk__21505_22235 = G__22252;\ncount__21506_22236 = G__22253;\ni__21507_22237 = G__22254;\ncontinue;\n} else {\nvar vec__21517_22255 = cljs.core.first(seq__21504_22249__$1);\nvar _QMARK_sch_22256 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21517_22255,(0),null);\nvar _udt_22257 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21517_22255,(1),null);\nvar temp__5804__auto___22258__$1 = _QMARK_sch_22256;\nif(cljs.core.truth_(temp__5804__auto___22258__$1)){\nvar sch_22259 = temp__5804__auto___22258__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_22259);\n} else {\n}\n\n\nvar G__22260 = cljs.core.next(seq__21504_22249__$1);\nvar G__22261 = null;\nvar G__22262 = (0);\nvar G__22263 = (0);\nseq__21504_22234 = G__22260;\nchunk__21505_22235 = G__22261;\ncount__21506_22236 = G__22262;\ni__21507_22237 = G__22263;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__21520_22264 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_22222], null))));\nvar chunk__21521_22265 = null;\nvar count__21522_22266 = (0);\nvar i__21523_22267 = (0);\nwhile(true){\nif((i__21523_22267 < count__21522_22266)){\nvar vec__21530_22268 = chunk__21521_22265.cljs$core$IIndexed$_nth$arity$2(null, i__21523_22267);\nvar _QMARK_sch_22269 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21530_22268,(0),null);\nvar _udt_22270 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21530_22268,(1),null);\nvar temp__5804__auto___22271 = _QMARK_sch_22269;\nif(cljs.core.truth_(temp__5804__auto___22271)){\nvar sch_22273 = temp__5804__auto___22271;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_22273);\n} else {\n}\n\n\nvar G__22274 = seq__21520_22264;\nvar G__22275 = chunk__21521_22265;\nvar G__22276 = count__21522_22266;\nvar G__22277 = (i__21523_22267 + (1));\nseq__21520_22264 = G__22274;\nchunk__21521_22265 = G__22275;\ncount__21522_22266 = G__22276;\ni__21523_22267 = G__22277;\ncontinue;\n} else {\nvar temp__5804__auto___22278 = cljs.core.seq(seq__21520_22264);\nif(temp__5804__auto___22278){\nvar seq__21520_22279__$1 = temp__5804__auto___22278;\nif(cljs.core.chunked_seq_QMARK_(seq__21520_22279__$1)){\nvar c__5525__auto___22280 = cljs.core.chunk_first(seq__21520_22279__$1);\nvar G__22281 = cljs.core.chunk_rest(seq__21520_22279__$1);\nvar G__22282 = c__5525__auto___22280;\nvar G__22283 = cljs.core.count(c__5525__auto___22280);\nvar G__22284 = (0);\nseq__21520_22264 = G__22281;\nchunk__21521_22265 = G__22282;\ncount__21522_22266 = G__22283;\ni__21523_22267 = G__22284;\ncontinue;\n} else {\nvar vec__21533_22285 = cljs.core.first(seq__21520_22279__$1);\nvar _QMARK_sch_22286 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533_22285,(0),null);\nvar _udt_22287 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21533_22285,(1),null);\nvar temp__5804__auto___22288__$1 = _QMARK_sch_22286;\nif(cljs.core.truth_(temp__5804__auto___22288__$1)){\nvar sch_22289 = temp__5804__auto___22288__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_22289);\n} else {\n}\n\n\nvar G__22290 = cljs.core.next(seq__21520_22279__$1);\nvar G__22291 = null;\nvar G__22292 = (0);\nvar G__22293 = (0);\nseq__21520_22264 = G__22290;\nchunk__21521_22265 = G__22291;\ncount__21522_22266 = G__22292;\ni__21523_22267 = G__22293;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nvar seq__21536_22294 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\nvar chunk__21537_22295 = null;\nvar count__21538_22296 = (0);\nvar i__21539_22297 = (0);\nwhile(true){\nif((i__21539_22297 < count__21538_22296)){\nvar conn_type_22298 = chunk__21537_22295.cljs$core$IIndexed$_nth$arity$2(null, i__21539_22297);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_22298,uid_22222], null),((function (seq__21536_22294,chunk__21537_22295,count__21538_22296,i__21539_22297,conn_type_22298,uid_22222,__22223,__22224__$1,__22225__$2,ev_uuid_22226,flush_buffer_BANG__22227,vec__21493,map__21496,map__21496__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__21472,map__21475,map__21475__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_22226])], null);\n} else {\nvar vec__21546 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21546,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21546,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_22226)], null);\n}\n});})(seq__21536_22294,chunk__21537_22295,count__21538_22296,i__21539_22297,conn_type_22298,uid_22222,__22223,__22224__$1,__22225__$2,ev_uuid_22226,flush_buffer_BANG__22227,vec__21493,map__21496,map__21496__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__21472,map__21475,map__21475__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar G__22299 = seq__21536_22294;\nvar G__22300 = chunk__21537_22295;\nvar G__22301 = count__21538_22296;\nvar G__22302 = (i__21539_22297 + (1));\nseq__21536_22294 = G__22299;\nchunk__21537_22295 = G__22300;\ncount__21538_22296 = G__22301;\ni__21539_22297 = G__22302;\ncontinue;\n} else {\nvar temp__5804__auto___22303 = cljs.core.seq(seq__21536_22294);\nif(temp__5804__auto___22303){\nvar seq__21536_22305__$1 = temp__5804__auto___22303;\nif(cljs.core.chunked_seq_QMARK_(seq__21536_22305__$1)){\nvar c__5525__auto___22306 = cljs.core.chunk_first(seq__21536_22305__$1);\nvar G__22307 = cljs.core.chunk_rest(seq__21536_22305__$1);\nvar G__22308 = c__5525__auto___22306;\nvar G__22309 = cljs.core.count(c__5525__auto___22306);\nvar G__22310 = (0);\nseq__21536_22294 = G__22307;\nchunk__21537_22295 = G__22308;\ncount__21538_22296 = G__22309;\ni__21539_22297 = G__22310;\ncontinue;\n} else {\nvar conn_type_22311 = cljs.core.first(seq__21536_22305__$1);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_22311,uid_22222], null),((function (seq__21536_22294,chunk__21537_22295,count__21538_22296,i__21539_22297,conn_type_22311,seq__21536_22305__$1,temp__5804__auto___22303,uid_22222,__22223,__22224__$1,__22225__$2,ev_uuid_22226,flush_buffer_BANG__22227,vec__21493,map__21496,map__21496__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__21472,map__21475,map__21475__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_22226])], null);\n} else {\nvar vec__21549 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21549,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21549,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_22226)], null);\n}\n});})(seq__21536_22294,chunk__21537_22295,count__21538_22296,i__21539_22297,conn_type_22311,seq__21536_22305__$1,temp__5804__auto___22303,uid_22222,__22223,__22224__$1,__22225__$2,ev_uuid_22226,flush_buffer_BANG__22227,vec__21493,map__21496,map__21496__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__21472,map__21475,map__21475__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar G__22312 = cljs.core.next(seq__21536_22305__$1);\nvar G__22313 = null;\nvar G__22314 = (0);\nvar G__22315 = (0);\nseq__21536_22294 = G__22312;\nchunk__21537_22295 = G__22313;\ncount__21538_22296 = G__22314;\ni__21539_22297 = G__22315;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__22227(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__22227(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\nvar ws_timeout_22316 = cljs.core.async.timeout(send_buf_ms_ws);\nvar ajax_timeout_22317 = cljs.core.async.timeout(send_buf_ms_ajax);\nvar c__12937__auto___22318 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21556){\nvar state_val_21557 = (state_21556[(1)]);\nif((state_val_21557 === (1))){\nvar state_21556__$1 = state_21556;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21556__$1,(2),ws_timeout_22316);\n} else {\nif((state_val_21557 === (2))){\nvar inst_21553 = (state_21556[(2)]);\nvar inst_21554 = flush_buffer_BANG__22227(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar state_21556__$1 = (function (){var statearr_21558 = state_21556;\n(statearr_21558[(7)] = inst_21553);\n\nreturn statearr_21558;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21556__$1,inst_21554);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21559 = [null,null,null,null,null,null,null,null];\n(statearr_21559[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21559[(1)] = (1));\n\nreturn statearr_21559;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21556){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21556);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21560){var ex__12842__auto__ = e21560;\nvar statearr_21561_22324 = state_21556;\n(statearr_21561_22324[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21556[(4)]))){\nvar statearr_21562_22325 = state_21556;\n(statearr_21562_22325[(1)] = cljs.core.first((state_21556[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22326 = state_21556;\nstate_21556 = G__22326;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21556){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21556);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21563 = f__12938__auto__();\n(statearr_21563[(6)] = c__12937__auto___22318);\n\nreturn statearr_21563;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\n\nvar c__12937__auto___22327 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21568){\nvar state_val_21569 = (state_21568[(1)]);\nif((state_val_21569 === (1))){\nvar state_21568__$1 = state_21568;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21568__$1,(2),ajax_timeout_22317);\n} else {\nif((state_val_21569 === (2))){\nvar inst_21565 = (state_21568[(2)]);\nvar inst_21566 = flush_buffer_BANG__22227(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar state_21568__$1 = (function (){var statearr_21570 = state_21568;\n(statearr_21570[(7)] = inst_21565);\n\nreturn statearr_21570;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21568__$1,inst_21566);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21571 = [null,null,null,null,null,null,null,null];\n(statearr_21571[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21571[(1)] = (1));\n\nreturn statearr_21571;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21568){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21568);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21572){var ex__12842__auto__ = e21572;\nvar statearr_21573_22329 = state_21568;\n(statearr_21573_22329[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21568[(4)]))){\nvar statearr_21574_22330 = state_21568;\n(statearr_21574_22330[(1)] = cljs.core.first((state_21568[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22331 = state_21568;\nstate_21568 = G__22331;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21568){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21568);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21575 = f__12938__auto__();\n(statearr_21575[(6)] = c__12937__auto___22327);\n\nreturn statearr_21575;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\n}\n}\n\nreturn null;\n};\nvar G__22215 = function (user_id,ev,var_args){\nvar p__21492 = null;\nif (arguments.length > 2) {\nvar G__22336__i = 0, G__22336__a = new Array(arguments.length -  2);\nwhile (G__22336__i < G__22336__a.length) {G__22336__a[G__22336__i] = arguments[G__22336__i + 2]; ++G__22336__i;}\n  p__21492 = new cljs.core.IndexedSeq(G__22336__a,0,null);\n} \nreturn G__22215__delegate.call(this,user_id,ev,p__21492);};\nG__22215.cljs$lang$maxFixedArity = 2;\nG__22215.cljs$lang$applyTo = (function (arglist__22337){\nvar user_id = cljs.core.first(arglist__22337);\narglist__22337 = cljs.core.next(arglist__22337);\nvar ev = cljs.core.first(arglist__22337);\nvar p__21492 = cljs.core.rest(arglist__22337);\nreturn G__22215__delegate(user_id,ev,p__21492);\n});\nG__22215.cljs$core$IFn$_invoke$arity$variadic = G__22215__delegate;\nreturn G__22215;\n})()\n;\nvar bad_csrf_QMARK_ = (function (ring_req){\nif((csrf_token_fn == null)){\nreturn false;\n} else {\nvar temp__5802__auto__ = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null, ring_req));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar reference_csrf_token = temp__5802__auto__;\nvar csrf_token_from_client = (function (){var or__5002__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar or__5002__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-csrf-token\"], null));\nif(cljs.core.truth_(or__5002__auto____$1)){\nreturn or__5002__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-xsrf-token\"], null));\n}\n}\n})();\nreturn cljs.core.not(taoensso.encore.const_str_EQ_(reference_csrf_token,csrf_token_from_client));\n} else {\nreturn true;\n}\n}\n});\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_], null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),(function (ring_req){\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null, ring_req));\n} else {\nif(taoensso.sente.bad_origin_QMARK_(allowed_origins__$1,ring_req)){\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null, ring_req));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.not(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: (not websocket?)\"));\n}\n\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar vec__21576 = taoensso.sente.unpack(packer__$1,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21576,(0),null);\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21576,(1),null);\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nreturn (function (resp_clj){\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,571,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\n}),null)),null,1305067240);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\n} else {\nreturn null;\n}\n});\n})();\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\n\nif(cljs.core.truth_(has_cb_QMARK_)){\nvar temp__5804__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5804__auto__)){\nvar ms = temp__5804__auto__;\nvar c__12937__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21584){\nvar state_val_21585 = (state_21584[(1)]);\nif((state_val_21585 === (1))){\nvar inst_21579 = cljs.core.async.timeout(ms);\nvar state_21584__$1 = state_21584;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21584__$1,(2),inst_21579);\n} else {\nif((state_val_21585 === (2))){\nvar inst_21581 = (state_21584[(2)]);\nvar inst_21582 = reply_fn(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar state_21584__$1 = (function (){var statearr_21586 = state_21584;\n(statearr_21586[(7)] = inst_21581);\n\nreturn statearr_21586;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21584__$1,inst_21582);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21587 = [null,null,null,null,null,null,null,null];\n(statearr_21587[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21587[(1)] = (1));\n\nreturn statearr_21587;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21584){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21584);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21588){var ex__12842__auto__ = e21588;\nvar statearr_21589_22351 = state_21584;\n(statearr_21589_22351[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21584[(4)]))){\nvar statearr_21590_22352 = state_21584;\n(statearr_21590_22352[(1)] = cljs.core.first((state_21584[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22353 = state_21584;\nstate_21584 = G__22353;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21584){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21584);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21591 = f__12938__auto__();\n(statearr_21591[(6)] = c__12937__auto__);\n\nreturn statearr_21591;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\nreturn c__12937__auto__;\n} else {\nreturn null;\n}\n} else {\nreturn reply_fn(new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337));\n}\n})], null));\n\n}\n}\n}),new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),(function (ring_req){\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar uid = user_id_fn__$1(ring_req,client_id);\nvar receive_event_msg_BANG_ = (function() {\nvar taoensso$sente$self = null;\nvar taoensso$sente$self__1 = (function (event){\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\n});\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\n});\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\nswitch(arguments.length){\ncase 1:\nreturn taoensso$sente$self__1.call(this,event);\ncase 2:\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\nreturn taoensso$sente$self;\n})()\n;\nvar send_handshake_BANG_ = (function (server_ch,websocket_QMARK_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,615,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\n}),null)),null,-2025798118);\n\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null, ring_req));\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null,_QMARK_handshake_data], null)], null));\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\n});\nif(clojure.string.blank_QMARK_(client_id)){\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,628,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\n}),null)),null,1852704357);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\n} else {\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null, ring_req));\n} else {\nif(taoensso.sente.bad_origin_QMARK_(allowed_origins__$1,ring_req)){\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null, ring_req));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.truth_(websocket_QMARK_)){\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,644,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,-236542019);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\n\nvar temp__5804__auto__ = ws_kalive_ms;\nif(cljs.core.truth_(temp__5804__auto__)){\nvar ms = temp__5804__auto__;\nvar c__12937__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21628){\nvar state_val_21629 = (state_21628[(1)]);\nif((state_val_21629 === (7))){\nvar inst_21624 = (state_21628[(2)]);\nvar state_21628__$1 = state_21628;\nvar statearr_21630_22360 = state_21628__$1;\n(statearr_21630_22360[(2)] = inst_21624);\n\n(statearr_21630_22360[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (1))){\nvar inst_21592 = udt_open;\nvar inst_21593 = inst_21592;\nvar state_21628__$1 = (function (){var statearr_21631 = state_21628;\n(statearr_21631[(7)] = inst_21593);\n\nreturn statearr_21631;\n})();\nvar statearr_21632_22361 = state_21628__$1;\n(statearr_21632_22361[(2)] = null);\n\n(statearr_21632_22361[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (4))){\nvar inst_21602 = (state_21628[(8)]);\nvar inst_21597 = (state_21628[(2)]);\nvar inst_21598 = cljs.core.deref(conns_);\nvar inst_21599 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21600 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\nvar inst_21601 = (new cljs.core.PersistentVector(null,3,(5),inst_21599,inst_21600,null));\nvar inst_21602__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_21598,inst_21601);\nvar state_21628__$1 = (function (){var statearr_21633 = state_21628;\n(statearr_21633[(8)] = inst_21602__$1);\n\n(statearr_21633[(9)] = inst_21597);\n\nreturn statearr_21633;\n})();\nif(cljs.core.truth_(inst_21602__$1)){\nvar statearr_21634_22362 = state_21628__$1;\n(statearr_21634_22362[(1)] = (5));\n\n} else {\nvar statearr_21635_22363 = state_21628__$1;\n(statearr_21635_22363[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (13))){\nvar inst_21608 = (state_21628[(10)]);\nvar inst_21617 = (state_21628[(2)]);\nvar inst_21593 = inst_21608;\nvar state_21628__$1 = (function (){var statearr_21636 = state_21628;\n(statearr_21636[(11)] = inst_21617);\n\n(statearr_21636[(7)] = inst_21593);\n\nreturn statearr_21636;\n})();\nvar statearr_21637_22364 = state_21628__$1;\n(statearr_21637_22364[(2)] = null);\n\n(statearr_21637_22364[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (6))){\nvar state_21628__$1 = state_21628;\nvar statearr_21638_22365 = state_21628__$1;\n(statearr_21638_22365[(2)] = null);\n\n(statearr_21638_22365[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (3))){\nvar inst_21626 = (state_21628[(2)]);\nvar state_21628__$1 = state_21628;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21628__$1,inst_21626);\n} else {\nif((state_val_21629 === (12))){\nvar state_21628__$1 = state_21628;\nvar statearr_21639_22366 = state_21628__$1;\n(statearr_21639_22366[(2)] = null);\n\n(statearr_21639_22366[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (2))){\nvar inst_21595 = cljs.core.async.timeout(ms);\nvar state_21628__$1 = state_21628;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21628__$1,(4),inst_21595);\n} else {\nif((state_val_21629 === (11))){\nvar inst_21613 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\nvar inst_21614 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_21613);\nvar state_21628__$1 = state_21628;\nvar statearr_21640_22367 = state_21628__$1;\n(statearr_21640_22367[(2)] = inst_21614);\n\n(statearr_21640_22367[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (9))){\nvar state_21628__$1 = state_21628;\nvar statearr_21641_22368 = state_21628__$1;\n(statearr_21641_22368[(2)] = null);\n\n(statearr_21641_22368[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (5))){\nvar inst_21602 = (state_21628[(8)]);\nvar inst_21607 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_21602,(0),null);\nvar inst_21608 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_21602,(1),null);\nvar inst_21609 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\nvar state_21628__$1 = (function (){var statearr_21642 = state_21628;\n(statearr_21642[(12)] = inst_21607);\n\n(statearr_21642[(10)] = inst_21608);\n\nreturn statearr_21642;\n})();\nif(cljs.core.truth_(inst_21609)){\nvar statearr_21643_22369 = state_21628__$1;\n(statearr_21643_22369[(1)] = (8));\n\n} else {\nvar statearr_21644_22370 = state_21628__$1;\n(statearr_21644_22370[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (10))){\nvar inst_21621 = (state_21628[(2)]);\nvar state_21628__$1 = state_21628;\nvar statearr_21645_22371 = state_21628__$1;\n(statearr_21645_22371[(2)] = inst_21621);\n\n(statearr_21645_22371[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21629 === (8))){\nvar inst_21608 = (state_21628[(10)]);\nvar inst_21593 = (state_21628[(7)]);\nvar inst_21611 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_21608,inst_21593);\nvar state_21628__$1 = state_21628;\nif(inst_21611){\nvar statearr_21646_22372 = state_21628__$1;\n(statearr_21646_22372[(1)] = (11));\n\n} else {\nvar statearr_21647_22373 = state_21628__$1;\n(statearr_21647_22373[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21648 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_21648[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21648[(1)] = (1));\n\nreturn statearr_21648;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21628){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21628);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21649){var ex__12842__auto__ = e21649;\nvar statearr_21650_22374 = state_21628;\n(statearr_21650_22374[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21628[(4)]))){\nvar statearr_21651_22375 = state_21628;\n(statearr_21651_22375[(1)] = cljs.core.first((state_21628[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22376 = state_21628;\nstate_21628 = G__22376;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21628){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21628);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21652 = f__12938__auto__();\n(statearr_21652[(6)] = c__12937__auto__);\n\nreturn statearr_21652;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\nreturn c__12937__auto__;\n} else {\nreturn null;\n}\n} else {\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,673,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,-211353884);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar handshake_QMARK_ = (function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\n}\n})();\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nif(cljs.core.truth_(handshake_QMARK_)){\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\n} else {\nvar temp__5804__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5804__auto__)){\nvar ms = temp__5804__auto__;\nvar c__12937__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21678){\nvar state_val_21679 = (state_21678[(1)]);\nif((state_val_21679 === (1))){\nvar inst_21653 = cljs.core.async.timeout(ms);\nvar state_21678__$1 = state_21678;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21678__$1,(2),inst_21653);\n} else {\nif((state_val_21679 === (2))){\nvar inst_21660 = (state_21678[(7)]);\nvar inst_21655 = (state_21678[(2)]);\nvar inst_21656 = cljs.core.deref(conns_);\nvar inst_21657 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21658 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\nvar inst_21659 = (new cljs.core.PersistentVector(null,3,(5),inst_21657,inst_21658,null));\nvar inst_21660__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_21656,inst_21659);\nvar state_21678__$1 = (function (){var statearr_21680 = state_21678;\n(statearr_21680[(8)] = inst_21655);\n\n(statearr_21680[(7)] = inst_21660__$1);\n\nreturn statearr_21680;\n})();\nif(cljs.core.truth_(inst_21660__$1)){\nvar statearr_21681_22377 = state_21678__$1;\n(statearr_21681_22377[(1)] = (3));\n\n} else {\nvar statearr_21682_22378 = state_21678__$1;\n(statearr_21682_22378[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21679 === (3))){\nvar inst_21660 = (state_21678[(7)]);\nvar inst_21665 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_21660,(0),null);\nvar inst_21666 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_21660,(1),null);\nvar inst_21667 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_21666,udt_open);\nvar state_21678__$1 = (function (){var statearr_21683 = state_21678;\n(statearr_21683[(9)] = inst_21665);\n\nreturn statearr_21683;\n})();\nif(inst_21667){\nvar statearr_21684_22379 = state_21678__$1;\n(statearr_21684_22379[(1)] = (6));\n\n} else {\nvar statearr_21685_22380 = state_21678__$1;\n(statearr_21685_22380[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21679 === (4))){\nvar state_21678__$1 = state_21678;\nvar statearr_21686_22381 = state_21678__$1;\n(statearr_21686_22381[(2)] = null);\n\n(statearr_21686_22381[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21679 === (5))){\nvar inst_21676 = (state_21678[(2)]);\nvar state_21678__$1 = state_21678;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21678__$1,inst_21676);\n} else {\nif((state_val_21679 === (6))){\nvar inst_21669 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar inst_21670 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_21669);\nvar state_21678__$1 = state_21678;\nvar statearr_21687_22382 = state_21678__$1;\n(statearr_21687_22382[(2)] = inst_21670);\n\n(statearr_21687_22382[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21679 === (7))){\nvar state_21678__$1 = state_21678;\nvar statearr_21688_22383 = state_21678__$1;\n(statearr_21688_22383[(2)] = null);\n\n(statearr_21688_22383[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21679 === (8))){\nvar inst_21673 = (state_21678[(2)]);\nvar state_21678__$1 = state_21678;\nvar statearr_21689_22384 = state_21678__$1;\n(statearr_21689_22384[(2)] = inst_21673);\n\n(statearr_21689_22384[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21690 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_21690[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21690[(1)] = (1));\n\nreturn statearr_21690;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21678){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21678);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21691){var ex__12842__auto__ = e21691;\nvar statearr_21692_22385 = state_21678;\n(statearr_21692_22385[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21678[(4)]))){\nvar statearr_21693_22386 = state_21678;\n(statearr_21693_22386[(1)] = cljs.core.first((state_21678[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22387 = state_21678;\nstate_21678 = G__22387;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21678){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21678);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21694 = f__12938__auto__();\n(statearr_21694[(6)] = c__12937__auto__);\n\nreturn statearr_21694;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\nreturn c__12937__auto__;\n} else {\nreturn null;\n}\n}\n}\n}),new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),(function (server_ch,websocket_QMARK_,req_ppstr){\nif(cljs.core.truth_(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: websocket?\"));\n}\n\nupd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\n\nvar vec__21695 = taoensso.sente.unpack(packer__$1,req_ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21695,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21695,(1),null);\nreturn receive_event_msg_BANG_(clj,(cljs.core.truth_(_QMARK_cb_uuid)?(function taoensso$sente$reply_fn(resp_clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,703,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\n}),null)),null,1733343948);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\n}):null));\n}),new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),(function (server_ch,websocket_QMARK_,_status){\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,712,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\n}),null)),null,-1223461110);\nvar updated_conn = upd_conn_BANG_(conn_type,uid,client_id,null);\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar c__12937__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21749){\nvar state_val_21750 = (state_21749[(1)]);\nif((state_val_21750 === (7))){\nvar state_21749__$1 = state_21749;\nvar statearr_21751_22388 = state_21749__$1;\n(statearr_21751_22388[(2)] = null);\n\n(statearr_21751_22388[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (1))){\nvar inst_21698 = cljs.core.async.timeout((5000));\nvar state_21749__$1 = state_21749;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21749__$1,(2),inst_21698);\n} else {\nif((state_val_21750 === (4))){\nvar state_21749__$1 = state_21749;\nvar statearr_21752_22389 = state_21749__$1;\n(statearr_21752_22389[(2)] = null);\n\n(statearr_21752_22389[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (13))){\nvar state_21749__$1 = state_21749;\nvar statearr_21753_22390 = state_21749__$1;\n(statearr_21753_22390[(2)] = null);\n\n(statearr_21753_22390[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (6))){\nvar inst_21726 = (state_21749[(7)]);\nvar inst_21708 = (state_21749[(8)]);\nvar inst_21710 = (state_21749[(9)]);\nvar inst_21709 = (state_21749[(10)]);\nvar inst_21721 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21722 = [conn_type,uid,client_id];\nvar inst_21723 = (new cljs.core.PersistentVector(null,3,(5),inst_21721,inst_21722,null));\nvar inst_21725 = (function (){var vec__21701 = inst_21708;\nvar __QMARK_sch = inst_21709;\nvar udt_t1 = inst_21710;\nreturn (function (p__21724){\nvar vec__21754 = p__21724;\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21754,(0),null);\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21754,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\n} else {\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_sch,udt_t1__$1], null),false);\n}\n});\n})();\nvar inst_21726__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_21723,inst_21725);\nvar state_21749__$1 = (function (){var statearr_21757 = state_21749;\n(statearr_21757[(7)] = inst_21726__$1);\n\nreturn statearr_21757;\n})();\nif(cljs.core.truth_(inst_21726__$1)){\nvar statearr_21758_22391 = state_21749__$1;\n(statearr_21758_22391[(1)] = (9));\n\n} else {\nvar statearr_21759_22392 = state_21749__$1;\n(statearr_21759_22392[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (3))){\nvar inst_21708 = (state_21749[(8)]);\nvar inst_21710 = (state_21749[(9)]);\nvar inst_21709 = (state_21749[(10)]);\nvar inst_21713 = (function (){var vec__21701 = inst_21708;\nvar __QMARK_sch = inst_21709;\nvar udt_t1 = inst_21710;\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\n});\n})();\nvar inst_21714 = (new cljs.core.Delay(inst_21713,null));\nvar inst_21715 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,726,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_21714,null,-520308840);\nvar state_21749__$1 = state_21749;\nvar statearr_21760_22393 = state_21749__$1;\n(statearr_21760_22393[(2)] = inst_21715);\n\n(statearr_21760_22393[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (12))){\nvar inst_21735 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21736 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\nvar inst_21737 = (new cljs.core.PersistentVector(null,2,(5),inst_21735,inst_21736,null));\nvar inst_21738 = receive_event_msg_BANG_(inst_21737);\nvar state_21749__$1 = state_21749;\nvar statearr_21761_22394 = state_21749__$1;\n(statearr_21761_22394[(2)] = inst_21738);\n\n(statearr_21761_22394[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (2))){\nvar inst_21708 = (state_21749[(8)]);\nvar inst_21700 = (state_21749[(2)]);\nvar inst_21704 = cljs.core.deref(conns_);\nvar inst_21705 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21706 = [conn_type,uid,client_id];\nvar inst_21707 = (new cljs.core.PersistentVector(null,3,(5),inst_21705,inst_21706,null));\nvar inst_21708__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_21704,inst_21707);\nvar inst_21709 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_21708__$1,(0),null);\nvar inst_21710 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_21708__$1,(1),null);\nvar inst_21711 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\nvar state_21749__$1 = (function (){var statearr_21762 = state_21749;\n(statearr_21762[(11)] = inst_21700);\n\n(statearr_21762[(8)] = inst_21708__$1);\n\n(statearr_21762[(9)] = inst_21710);\n\n(statearr_21762[(10)] = inst_21709);\n\nreturn statearr_21762;\n})();\nif(cljs.core.truth_(inst_21711)){\nvar statearr_21763_22395 = state_21749__$1;\n(statearr_21763_22395[(1)] = (3));\n\n} else {\nvar statearr_21764_22396 = state_21749__$1;\n(statearr_21764_22396[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (11))){\nvar inst_21744 = (state_21749[(2)]);\nvar state_21749__$1 = state_21749;\nvar statearr_21765_22397 = state_21749__$1;\n(statearr_21765_22397[(2)] = inst_21744);\n\n(statearr_21765_22397[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (9))){\nvar inst_21726 = (state_21749[(7)]);\nvar inst_21708 = (state_21749[(8)]);\nvar inst_21710 = (state_21749[(9)]);\nvar inst_21709 = (state_21749[(10)]);\nvar inst_21728 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21729 = [conn_type,uid];\nvar inst_21730 = (new cljs.core.PersistentVector(null,2,(5),inst_21728,inst_21729,null));\nvar inst_21731 = (function (){var vec__21701 = inst_21708;\nvar __QMARK_sch = inst_21709;\nvar udt_t1 = inst_21710;\nvar disconnect_QMARK_ = inst_21726;\nreturn (function (_QMARK_m){\nif(cljs.core.empty_QMARK_(_QMARK_m)){\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\n} else {\nreturn _QMARK_m;\n}\n});\n})();\nvar inst_21732 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_21730,inst_21731);\nvar inst_21733 = upd_connected_uid_BANG_(uid);\nvar state_21749__$1 = (function (){var statearr_21766 = state_21749;\n(statearr_21766[(12)] = inst_21732);\n\nreturn statearr_21766;\n})();\nif(cljs.core.truth_(inst_21733)){\nvar statearr_21767_22398 = state_21749__$1;\n(statearr_21767_22398[(1)] = (12));\n\n} else {\nvar statearr_21768_22399 = state_21749__$1;\n(statearr_21768_22399[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (5))){\nvar inst_21710 = (state_21749[(9)]);\nvar inst_21718 = (state_21749[(2)]);\nvar inst_21719 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_21710,udt_close);\nvar state_21749__$1 = (function (){var statearr_21769 = state_21749;\n(statearr_21769[(13)] = inst_21718);\n\nreturn statearr_21769;\n})();\nif(inst_21719){\nvar statearr_21770_22400 = state_21749__$1;\n(statearr_21770_22400[(1)] = (6));\n\n} else {\nvar statearr_21771_22401 = state_21749__$1;\n(statearr_21771_22401[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (14))){\nvar inst_21741 = (state_21749[(2)]);\nvar state_21749__$1 = state_21749;\nvar statearr_21772_22402 = state_21749__$1;\n(statearr_21772_22402[(2)] = inst_21741);\n\n(statearr_21772_22402[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (10))){\nvar state_21749__$1 = state_21749;\nvar statearr_21773_22403 = state_21749__$1;\n(statearr_21773_22403[(2)] = null);\n\n(statearr_21773_22403[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21750 === (8))){\nvar inst_21747 = (state_21749[(2)]);\nvar state_21749__$1 = state_21749;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21749__$1,inst_21747);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21774 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_21774[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21774[(1)] = (1));\n\nreturn statearr_21774;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21749){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21749);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21775){var ex__12842__auto__ = e21775;\nvar statearr_21776_22404 = state_21749;\n(statearr_21776_22404[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21749[(4)]))){\nvar statearr_21777_22405 = state_21749;\n(statearr_21777_22405[(1)] = cljs.core.first((state_21749[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22406 = state_21749;\nstate_21749 = G__22406;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21749){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21749);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21778 = f__12938__auto__();\n(statearr_21778[(6)] = c__12937__auto__);\n\nreturn statearr_21778;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\nreturn c__12937__auto__;\n}),new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),(function (server_ch,websocket_QMARK_,error){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,748,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\n}),null)),null,1574031957);\n})], null));\n\n}\n}\n}\n})], null);\n}));\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq21469){\nvar G__21470 = cljs.core.first(seq21469);\nvar seq21469__$1 = cljs.core.next(seq21469);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__21470,seq21469__$1);\n}));\n\n/**\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,754,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,-1631681578);\n\nvar seq__21779 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\nvar chunk__21780 = null;\nvar count__21781 = (0);\nvar i__21782 = (0);\nwhile(true){\nif((i__21782 < count__21781)){\nvar vec__21795 = chunk__21780.cljs$core$IIndexed$_nth$arity$2(null, i__21782);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21795,(0),null);\nvar vec__21798 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21795,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21798,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21798,(1),null);\nvar temp__5804__auto___22407 = _QMARK_sch;\nif(cljs.core.truth_(temp__5804__auto___22407)){\nvar sch_22408 = temp__5804__auto___22407;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null, new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_22408,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__22409 = seq__21779;\nvar G__22410 = chunk__21780;\nvar G__22411 = count__21781;\nvar G__22412 = (i__21782 + (1));\nseq__21779 = G__22409;\nchunk__21780 = G__22410;\ncount__21781 = G__22411;\ni__21782 = G__22412;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__21779);\nif(temp__5804__auto__){\nvar seq__21779__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21779__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21779__$1);\nvar G__22413 = cljs.core.chunk_rest(seq__21779__$1);\nvar G__22414 = c__5525__auto__;\nvar G__22415 = cljs.core.count(c__5525__auto__);\nvar G__22416 = (0);\nseq__21779 = G__22413;\nchunk__21780 = G__22414;\ncount__21781 = G__22415;\ni__21782 = G__22416;\ncontinue;\n} else {\nvar vec__21801 = cljs.core.first(seq__21779__$1);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21801,(0),null);\nvar vec__21804 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21801,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21804,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21804,(1),null);\nvar temp__5804__auto___22417__$1 = _QMARK_sch;\nif(cljs.core.truth_(temp__5804__auto___22417__$1)){\nvar sch_22418 = temp__5804__auto___22417__$1;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null, new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_22418,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__22419 = cljs.core.next(seq__21779__$1);\nvar G__22420 = null;\nvar G__22421 = (0);\nvar G__22422 = (0);\nseq__21779 = G__22419;\nchunk__21780 = G__22420;\ncount__21781 = G__22421;\ni__21782 = G__22422;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n *   Allows some time for possible Ajax poller reconnects.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,764,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,536892981);\n\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\nreturn null;\n} else {\nvar c__12937__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21853){\nvar state_val_21854 = (state_21853[(1)]);\nif((state_val_21854 === (7))){\nvar inst_21815 = (state_21853[(7)]);\nvar inst_21808 = (state_21853[(8)]);\nvar inst_21809 = (state_21853[(9)]);\nvar inst_21825 = (function (){var n = inst_21808;\nvar client_ids_satisfied = inst_21809;\nvar _QMARK_pulled = inst_21815;\nreturn (function (s,client_id,p__21824){\nvar vec__21855 = p__21824;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21855,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21855,(1),null);\nvar sent_QMARK_ = (function (){var temp__5804__auto__ = _QMARK_sch;\nif(cljs.core.truth_(temp__5804__auto__)){\nvar sch = temp__5804__auto__;\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(sent_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\n} else {\nreturn s;\n}\n});\n})();\nvar inst_21826 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_21827 = cljs.core.reduce_kv(inst_21825,inst_21826,inst_21815);\nvar state_21853__$1 = state_21853;\nvar statearr_21858_22423 = state_21853__$1;\n(statearr_21858_22423[(2)] = inst_21827);\n\n(statearr_21858_22423[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (1))){\nvar inst_21807 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_21808 = (0);\nvar inst_21809 = inst_21807;\nvar state_21853__$1 = (function (){var statearr_21859 = state_21853;\n(statearr_21859[(8)] = inst_21808);\n\n(statearr_21859[(9)] = inst_21809);\n\nreturn statearr_21859;\n})();\nvar statearr_21860_22424 = state_21853__$1;\n(statearr_21860_22424[(2)] = null);\n\n(statearr_21860_22424[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (4))){\nvar state_21853__$1 = state_21853;\nvar statearr_21861_22425 = state_21853__$1;\n(statearr_21861_22425[(2)] = true);\n\n(statearr_21861_22425[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (15))){\nvar inst_21846 = (state_21853[(2)]);\nvar state_21853__$1 = state_21853;\nvar statearr_21862_22426 = state_21853__$1;\n(statearr_21862_22426[(2)] = inst_21846);\n\n(statearr_21862_22426[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (13))){\nvar inst_21832 = (state_21853[(10)]);\nvar inst_21837 = cljs.core.rand_int(inst_21832);\nvar inst_21838 = (inst_21832 + inst_21837);\nvar inst_21839 = cljs.core.async.timeout(inst_21838);\nvar state_21853__$1 = state_21853;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21853__$1,(16),inst_21839);\n} else {\nif((state_val_21854 === (6))){\nvar inst_21815 = (state_21853[(7)]);\nvar inst_21822 = (state_21853[(2)]);\nvar state_21853__$1 = (function (){var statearr_21863 = state_21853;\n(statearr_21863[(11)] = inst_21822);\n\nreturn statearr_21863;\n})();\nif(cljs.core.truth_(inst_21815)){\nvar statearr_21864_22427 = state_21853__$1;\n(statearr_21864_22427[(1)] = (7));\n\n} else {\nvar statearr_21865_22428 = state_21853__$1;\n(statearr_21865_22428[(1)] = (8));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (3))){\nvar inst_21851 = (state_21853[(2)]);\nvar state_21853__$1 = state_21853;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21853__$1,inst_21851);\n} else {\nif((state_val_21854 === (12))){\nvar inst_21849 = (state_21853[(2)]);\nvar state_21853__$1 = state_21853;\nvar statearr_21866_22429 = state_21853__$1;\n(statearr_21866_22429[(2)] = inst_21849);\n\n(statearr_21866_22429[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (2))){\nvar inst_21815 = (state_21853[(7)]);\nvar inst_21808 = (state_21853[(8)]);\nvar inst_21809 = (state_21853[(9)]);\nvar inst_21811 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21812 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\nvar inst_21813 = (new cljs.core.PersistentVector(null,2,(5),inst_21811,inst_21812,null));\nvar inst_21814 = (function (){var n = inst_21808;\nvar client_ids_satisfied = inst_21809;\nreturn (function (m){\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\nif(cljs.core.empty_QMARK_(ks_to_pull)){\nreturn taoensso.encore.swapped(m,null);\n} else {\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m__$1,k){\nvar vec__21867 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21867,(0),null);\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21867,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\n}),m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\n}\n});\n})();\nvar inst_21815__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_21813,inst_21814);\nvar inst_21816 = (function (){var n = inst_21808;\nvar client_ids_satisfied = inst_21809;\nvar _QMARK_pulled = inst_21815__$1;\nreturn (function (x){\nvar or__5002__auto__ = (x == null);\nif(or__5002__auto__){\nreturn or__5002__auto__;\n} else {\nreturn taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_)(x);\n}\n});\n})();\nvar inst_21817 = inst_21816(inst_21815__$1);\nvar state_21853__$1 = (function (){var statearr_21870 = state_21853;\n(statearr_21870[(7)] = inst_21815__$1);\n\nreturn statearr_21870;\n})();\nif(cljs.core.truth_(inst_21817)){\nvar statearr_21871_22430 = state_21853__$1;\n(statearr_21871_22430[(1)] = (4));\n\n} else {\nvar statearr_21872_22431 = state_21853__$1;\n(statearr_21872_22431[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (11))){\nvar state_21853__$1 = state_21853;\nvar statearr_21873_22432 = state_21853__$1;\n(statearr_21873_22432[(2)] = null);\n\n(statearr_21873_22432[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (9))){\nvar inst_21832 = (state_21853[(10)]);\nvar inst_21808 = (state_21853[(8)]);\nvar inst_21809 = (state_21853[(9)]);\nvar inst_21830 = (state_21853[(2)]);\nvar inst_21831 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_21809,inst_21830);\nvar inst_21832__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_21808);\nvar state_21853__$1 = (function (){var statearr_21874 = state_21853;\n(statearr_21874[(10)] = inst_21832__$1);\n\n(statearr_21874[(12)] = inst_21831);\n\nreturn statearr_21874;\n})();\nif(cljs.core.truth_(inst_21832__$1)){\nvar statearr_21875_22433 = state_21853__$1;\n(statearr_21875_22433[(1)] = (10));\n\n} else {\nvar statearr_21876_22434 = state_21853__$1;\n(statearr_21876_22434[(1)] = (11));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (5))){\nvar inst_21815 = (state_21853[(7)]);\nvar inst_21820 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",791,\"([:or nil? map?] ?pulled)\",inst_21815,null,null);\nvar state_21853__$1 = state_21853;\nvar statearr_21877_22435 = state_21853__$1;\n(statearr_21877_22435[(2)] = inst_21820);\n\n(statearr_21877_22435[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (14))){\nvar state_21853__$1 = state_21853;\nvar statearr_21878_22436 = state_21853__$1;\n(statearr_21878_22436[(2)] = null);\n\n(statearr_21878_22436[(1)] = (15));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (16))){\nvar inst_21831 = (state_21853[(12)]);\nvar inst_21808 = (state_21853[(8)]);\nvar inst_21841 = (state_21853[(2)]);\nvar inst_21842 = (inst_21808 + (1));\nvar inst_21808__$1 = inst_21842;\nvar inst_21809 = inst_21831;\nvar state_21853__$1 = (function (){var statearr_21879 = state_21853;\n(statearr_21879[(13)] = inst_21841);\n\n(statearr_21879[(8)] = inst_21808__$1);\n\n(statearr_21879[(9)] = inst_21809);\n\nreturn statearr_21879;\n})();\nvar statearr_21880_22437 = state_21853__$1;\n(statearr_21880_22437[(2)] = null);\n\n(statearr_21880_22437[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (10))){\nvar inst_21831 = (state_21853[(12)]);\nvar inst_21834 = cljs.core.complement(inst_21831);\nvar inst_21835 = taoensso.encore.rsome(inst_21834,client_ids_unsatisfied);\nvar state_21853__$1 = state_21853;\nif(cljs.core.truth_(inst_21835)){\nvar statearr_21881_22438 = state_21853__$1;\n(statearr_21881_22438[(1)] = (13));\n\n} else {\nvar statearr_21882_22439 = state_21853__$1;\n(statearr_21882_22439[(1)] = (14));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21854 === (8))){\nvar state_21853__$1 = state_21853;\nvar statearr_21883_22440 = state_21853__$1;\n(statearr_21883_22440[(2)] = null);\n\n(statearr_21883_22440[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto__ = null;\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto____0 = (function (){\nvar statearr_21884 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_21884[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto__);\n\n(statearr_21884[(1)] = (1));\n\nreturn statearr_21884;\n});\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto____1 = (function (state_21853){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21853);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21885){var ex__12842__auto__ = e21885;\nvar statearr_21886_22441 = state_21853;\n(statearr_21886_22441[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21853[(4)]))){\nvar statearr_21887_22442 = state_21853;\n(statearr_21887_22442[(1)] = cljs.core.first((state_21853[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22443 = state_21853;\nstate_21853 = G__22443;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto__ = function(state_21853){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto____1.call(this,state_21853);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto____0;\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto____1;\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21888 = f__12938__auto__();\n(statearr_21888[(6)] = c__12937__auto__);\n\nreturn statearr_21888;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\nreturn c__12937__auto__;\n}\n});\n/**\n * Alias of `taoensso.encore/ajax-lite`\n */\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\n\n/**\n * @interface\n */\ntaoensso.sente.IChSocket = function(){};\n\nvar taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_22444 = (function (chsk){\nvar x__5350__auto__ = (((chsk == null))?null:chsk);\nvar m__5351__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__5350__auto__)]);\nif((!((m__5351__auto__ == null)))){\nreturn (m__5351__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5351__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__5351__auto__.call(null, chsk));\n} else {\nvar m__5349__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\nif((!((m__5349__auto__ == null)))){\nreturn (m__5349__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5349__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__5349__auto__.call(null, chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_22444(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_22445 = (function (chsk,reason){\nvar x__5350__auto__ = (((chsk == null))?null:chsk);\nvar m__5351__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__5350__auto__)]);\nif((!((m__5351__auto__ == null)))){\nreturn (m__5351__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5351__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__5351__auto__.call(null, chsk,reason));\n} else {\nvar m__5349__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\nif((!((m__5349__auto__ == null)))){\nreturn (m__5349__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5349__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__5349__auto__.call(null, chsk,reason));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_22445(chsk,reason);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_22446 = (function (chsk){\nvar x__5350__auto__ = (((chsk == null))?null:chsk);\nvar m__5351__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__5350__auto__)]);\nif((!((m__5351__auto__ == null)))){\nreturn (m__5351__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5351__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__5351__auto__.call(null, chsk));\n} else {\nvar m__5349__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\nif((!((m__5349__auto__ == null)))){\nreturn (m__5349__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5349__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__5349__auto__.call(null, chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_22446(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_22447 = (function (chsk,ev,opts){\nvar x__5350__auto__ = (((chsk == null))?null:chsk);\nvar m__5351__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__5350__auto__)]);\nif((!((m__5351__auto__ == null)))){\nreturn (m__5351__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5351__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__5351__auto__.call(null, chsk,ev,opts));\n} else {\nvar m__5349__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\nif((!((m__5349__auto__ == null)))){\nreturn (m__5349__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5349__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__5349__auto__.call(null, chsk,ev,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_22447(chsk,ev,opts);\n}\n});\n\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\n});\n\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\n});\n\n/**\n * Useful for reauthenticating after login/logout, etc.\n */\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\n});\n\n/**\n * Deprecated\n */\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\n/**\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\n */\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\nvar G__21890 = arguments.length;\nswitch (G__21890) {\ncase 2:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,841,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\n}),null)),null,1088169870);\n\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4);\n\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,846,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\n}),null)),null,970292406);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)) : _QMARK_cb_fn.call(null, new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)));\n} else {\n}\n\nreturn false;\n});\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\ntaoensso.sente.assert_event(x);\n\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\n}\n\nif((((_QMARK_cb == null)) || (((cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))))){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\n}\n});\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\nvar temp__5804__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5804__auto__)){\nvar cb_uuid = temp__5804__auto__;\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),(function (_QMARK_f){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\n}));\n} else {\nreturn null;\n}\n});\n/**\n * Atomically swaps the value of chk's :state_ atom.\n */\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\nvar vec__21891 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null, old_state));\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\n}));\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21891,(0),null);\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21891,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\n\nreturn output;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\nvar e_22449 = (function (){try{if(cljs.core.map_QMARK_(state)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21894){if((e21894 instanceof Error)){\nvar e_22449 = e21894;\nreturn e_22449;\n} else {\nthrow e21894;\n\n}\n}})();\nif((e_22449 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",893,\"(map? state)\",state,e_22449,null);\n}\n\nvar e_22450 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__21896 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__21896) : taoensso.truss.impl.set_STAR_.call(null, G__21896));\n})(),x);\n})(reason)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21895){if((e21895 instanceof Error)){\nvar e_22450 = e21895;\nreturn e_22450;\n} else {\nthrow e21895;\n\n}\n}})();\nif((e_22450 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",894,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_22450,null);\n}\n\nif(cljs.core.truth_((function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}\n})())){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\n} else {\nreturn state;\n}\n});\n/**\n * Experimental, undocumented. Allows a core.async channel to be provided\n *   instead of a cb-fn. The channel will receive values of form\n *   [<event-id>.cb <reply>].\n */\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\nreturn _QMARK_cb;\n} else {\nvar e_22451 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21897){if((e21897 instanceof Error)){\nvar e_22451 = e21897;\nreturn e_22451;\n} else {\nthrow e21897;\n\n}\n}})();\nif((e_22451 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",915,\"(enc/chan? ?cb)\",_QMARK_cb,e_22451,null);\n}\n\ntaoensso.sente.assert_event(ev);\n\nvar vec__21898 = ev;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21898,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21898,(1),null);\nvar cb_ch = _QMARK_cb;\nreturn (function (reply){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\n});\n}\n});\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,926,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\n}),null)),null,976611400);\n\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",927,\"(vector? clj)\",clj,null,null));\nvar seq__21901 = cljs.core.seq(buffered_evs);\nvar chunk__21902 = null;\nvar count__21903 = (0);\nvar i__21904 = (0);\nwhile(true){\nif((i__21904 < count__21903)){\nvar ev = chunk__21902.cljs$core$IIndexed$_nth$arity$2(null, i__21904);\ntaoensso.sente.assert_event(ev);\n\nvar vec__21911_22452 = ev;\nvar id_22453 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21911_22452,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_22453),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__22454 = seq__21901;\nvar G__22455 = chunk__21902;\nvar G__22456 = count__21903;\nvar G__22457 = (i__21904 + (1));\nseq__21901 = G__22454;\nchunk__21902 = G__22455;\ncount__21903 = G__22456;\ni__21904 = G__22457;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__21901);\nif(temp__5804__auto__){\nvar seq__21901__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21901__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21901__$1);\nvar G__22458 = cljs.core.chunk_rest(seq__21901__$1);\nvar G__22459 = c__5525__auto__;\nvar G__22460 = cljs.core.count(c__5525__auto__);\nvar G__22461 = (0);\nseq__21901 = G__22458;\nchunk__21902 = G__22459;\ncount__21903 = G__22460;\ni__21904 = G__22461;\ncontinue;\n} else {\nvar ev = cljs.core.first(seq__21901__$1);\ntaoensso.sente.assert_event(ev);\n\nvar vec__21914_22462 = ev;\nvar id_22463 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21914_22462,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_22463),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__22464 = cljs.core.next(seq__21901__$1);\nvar G__22465 = null;\nvar G__22466 = (0);\nvar G__22467 = (0);\nseq__21901 = G__22464;\nchunk__21902 = G__22465;\ncount__21903 = G__22466;\ni__21904 = G__22467;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\nvar and__5000__auto__ = cljs.core.vector_QMARK_(x);\nif(and__5000__auto__){\nvar vec__21917 = x;\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21917,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\n} else {\nreturn and__5000__auto__;\n}\n});\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\nvar e_22468 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__21922 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__21922) : taoensso.truss.impl.set_STAR_.call(null, G__21922));\n})(),x);\n})(chsk_type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21921){if((e21921 instanceof Error)){\nvar e_22468 = e21921;\nreturn e_22468;\n} else {\nthrow e21921;\n\n}\n}})();\nif((e_22468 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",941,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_22468,null);\n}\n\nvar e_22469 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21923){if((e21923 instanceof Error)){\nvar e_22469 = e21923;\nreturn e_22469;\n} else {\nthrow e21923;\n\n}\n}})();\nif((e_22469 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",942,\"(handshake? clj)\",clj,e_22469,null);\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,943,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\n}),null)),null,392633847);\n\nvar vec__21924 = clj;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21924,(0),null);\nvar vec__21927 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21924,(1),null);\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21927,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21927,(1),null);\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21927,(2),null);\nvar map__21930 = chsk;\nvar map__21930__$1 = cljs.core.__destructure_map(map__21930);\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21930__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21930__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\nvar new_state = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,null,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\ntaoensso.sente.assert_event(handshake_ev);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk,(function (p1__21920_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__21920_SHARP_,new_state], 0));\n}));\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\n\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\n});\n/**\n * nnil iff the websocket npm library[1] is available.\n *   Easiest way to install:\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n * \n *   [1] Ref. https://www.npmjs.com/package/websocket\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\n */\ntaoensso.sente._QMARK_node_npm_websocket_ = (function (){var make_package_name = (function (prefix){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\"socket\"].join('');\n});\nvar require_fn = (((typeof require !== 'undefined'))?require:cljs.core.constantly(new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)));\nreturn (new cljs.core.Delay((function (){\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\ntry{var G__21932 = make_package_name(\"web\");\nreturn (require_fn.cljs$core$IFn$_invoke$arity$1 ? require_fn.cljs$core$IFn$_invoke$arity$1(G__21932) : require_fn.call(null, G__21932));\n}catch (e21931){var e = e21931;\nreturn null;\n}} else {\nreturn null;\n}\n}),null));\n})();\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.ws_kalive_ms = ws_kalive_ms;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.retry_count_ = retry_count_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.cbs_waiting_ = cbs_waiting_;\nthis.socket_ = socket_;\nthis.udt_last_comms_ = udt_last_comms_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5300__auto__,k__5301__auto__){\nvar self__ = this;\nvar this__5300__auto____$1 = this;\nreturn this__5300__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__5301__auto__,null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5302__auto__,k21939,else__5303__auto__){\nvar self__ = this;\nvar this__5302__auto____$1 = this;\nvar G__21943 = k21939;\nvar G__21943__$1 = (((G__21943 instanceof cljs.core.Keyword))?G__21943.fqn:null);\nswitch (G__21943__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"ws-kalive-ms\":\nreturn self__.ws_kalive_ms;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"retry-count_\":\nreturn self__.retry_count_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"cbs-waiting_\":\nreturn self__.cbs_waiting_;\n\nbreak;\ncase \"socket_\":\nreturn self__.socket_;\n\nbreak;\ncase \"udt-last-comms_\":\nreturn self__.udt_last_comms_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k21939,else__5303__auto__);\n\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5320__auto__,f__5321__auto__,init__5322__auto__){\nvar self__ = this;\nvar this__5320__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5323__auto__,p__21944){\nvar vec__21945 = p__21944;\nvar k__5324__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21945,(0),null);\nvar v__5325__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21945,(1),null);\nreturn (f__5321__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5321__auto__.cljs$core$IFn$_invoke$arity$3(ret__5323__auto__,k__5324__auto__,v__5325__auto__) : f__5321__auto__.call(null, ret__5323__auto__,k__5324__auto__,v__5325__auto__));\n}),init__5322__auto__,this__5320__auto____$1);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5315__auto__,writer__5316__auto__,opts__5317__auto__){\nvar self__ = this;\nvar this__5315__auto____$1 = this;\nvar pr_pair__5318__auto__ = (function (keyval__5319__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5316__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5317__auto__,keyval__5319__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5316__auto__,pr_pair__5318__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__5317__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__21938){\nvar self__ = this;\nvar G__21938__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__21938__$1,14,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5298__auto__){\nvar self__ = this;\nvar this__5298__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5295__auto__){\nvar self__ = this;\nvar this__5295__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5304__auto__){\nvar self__ = this;\nvar this__5304__auto____$1 = this;\nreturn (14 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5296__auto__){\nvar self__ = this;\nvar this__5296__auto____$1 = this;\nvar h__5111__auto__ = self__.__hash;\nif((!((h__5111__auto__ == null)))){\nreturn h__5111__auto__;\n} else {\nvar h__5111__auto____$1 = (function (coll__5297__auto__){\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__5297__auto__));\n})(this__5296__auto____$1);\n(self__.__hash = h__5111__auto____$1);\n\nreturn h__5111__auto____$1;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this21940,other21941){\nvar self__ = this;\nvar this21940__$1 = this;\nreturn (((!((other21941 == null)))) && ((((this21940__$1.constructor === other21941.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.client_id,other21941.client_id)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.chs,other21941.chs)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.params,other21941.params)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.packer,other21941.packer)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.url,other21941.url)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.ws_kalive_ms,other21941.ws_kalive_ms)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.state_,other21941.state_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.instance_handle_,other21941.instance_handle_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.retry_count_,other21941.retry_count_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.ever_opened_QMARK__,other21941.ever_opened_QMARK__)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.backoff_ms_fn,other21941.backoff_ms_fn)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.cbs_waiting_,other21941.cbs_waiting_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.socket_,other21941.socket_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.udt_last_comms_,other21941.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21940__$1.__extmap,other21941.__extmap)))))))))))))))))))))))))))))))));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5310__auto__,k__5311__auto__){\nvar self__ = this;\nvar this__5310__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__5311__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5310__auto____$1),self__.__meta),k__5311__auto__);\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5311__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5307__auto__,k21939){\nvar self__ = this;\nvar this__5307__auto____$1 = this;\nvar G__21948 = k21939;\nvar G__21948__$1 = (((G__21948 instanceof cljs.core.Keyword))?G__21948.fqn:null);\nswitch (G__21948__$1) {\ncase \"client-id\":\ncase \"chs\":\ncase \"params\":\ncase \"packer\":\ncase \"url\":\ncase \"ws-kalive-ms\":\ncase \"state_\":\ncase \"instance-handle_\":\ncase \"retry-count_\":\ncase \"ever-opened?_\":\ncase \"backoff-ms-fn\":\ncase \"cbs-waiting_\":\ncase \"socket_\":\ncase \"udt-last-comms_\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k21939);\n\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5308__auto__,k__5309__auto__,G__21938){\nvar self__ = this;\nvar this__5308__auto____$1 = this;\nvar pred__21949 = cljs.core.keyword_identical_QMARK_;\nvar expr__21950 = k__5309__auto__;\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(G__21938,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__21938,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__21938,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__21938,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__21938,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__21938,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,G__21938,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__21938,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__21938,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__21938,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__21938,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__21938,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__21938,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__21949.cljs$core$IFn$_invoke$arity$2 ? pred__21949.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__21950) : pred__21949.call(null, new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__21950)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__21938,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5309__auto__,G__21938),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5313__auto__){\nvar self__ = this;\nvar this__5313__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5299__auto__,G__21938){\nvar self__ = this;\nvar this__5299__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__21938,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5305__auto__,entry__5306__auto__){\nvar self__ = this;\nvar this__5305__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5306__auto__)){\nreturn this__5305__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry__5306__auto__,(0)),cljs.core._nth(entry__5306__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5305__auto____$1,entry__5306__auto__);\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__21933_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__21933_SHARP_,reason);\n}));\n\nvar temp__5804__auto__ = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar s = temp__5804__auto__;\nreturn s.close((1000),\"CLOSE_NORMAL\");\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null, new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null, );\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__21952 = opts;\nvar map__21952__$1 = cljs.core.__destructure_map(map__21952);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21952__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21952__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21952__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\nvar temp__5804__auto___22472 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5804__auto___22472)){\nvar cb_uuid_22473 = temp__5804__auto___22472;\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_22473], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21953){if((e21953 instanceof Error)){\nvar e = e21953;\nreturn e;\n} else {\nthrow e21953;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1032,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n})());\n\nvar temp__5804__auto___22474__$1 = _QMARK_timeout_ms;\nif(cljs.core.truth_(temp__5804__auto___22474__$1)){\nvar timeout_ms_22475 = temp__5804__auto___22474__$1;\nvar c__12937__auto___22476 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_21964){\nvar state_val_21965 = (state_21964[(1)]);\nif((state_val_21965 === (1))){\nvar inst_21954 = cljs.core.async.timeout(timeout_ms_22475);\nvar state_21964__$1 = state_21964;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21964__$1,(2),inst_21954);\n} else {\nif((state_val_21965 === (2))){\nvar inst_21957 = (state_21964[(7)]);\nvar inst_21956 = (state_21964[(2)]);\nvar inst_21957__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\nvar state_21964__$1 = (function (){var statearr_21966 = state_21964;\n(statearr_21966[(8)] = inst_21956);\n\n(statearr_21966[(7)] = inst_21957__$1);\n\nreturn statearr_21966;\n})();\nif(cljs.core.truth_(inst_21957__$1)){\nvar statearr_21967_22477 = state_21964__$1;\n(statearr_21967_22477[(1)] = (3));\n\n} else {\nvar statearr_21968_22478 = state_21964__$1;\n(statearr_21968_22478[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21965 === (3))){\nvar inst_21957 = (state_21964[(7)]);\nvar inst_21959 = (inst_21957.cljs$core$IFn$_invoke$arity$1 ? inst_21957.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : inst_21957.call(null, new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\nvar state_21964__$1 = state_21964;\nvar statearr_21969_22479 = state_21964__$1;\n(statearr_21969_22479[(2)] = inst_21959);\n\n(statearr_21969_22479[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21965 === (4))){\nvar state_21964__$1 = state_21964;\nvar statearr_21970_22480 = state_21964__$1;\n(statearr_21970_22480[(2)] = null);\n\n(statearr_21970_22480[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21965 === (5))){\nvar inst_21962 = (state_21964[(2)]);\nvar state_21964__$1 = state_21964;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21964__$1,inst_21962);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_21971 = [null,null,null,null,null,null,null,null,null];\n(statearr_21971[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_21971[(1)] = (1));\n\nreturn statearr_21971;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_21964){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_21964);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e21972){var ex__12842__auto__ = e21972;\nvar statearr_21973_22481 = state_21964;\n(statearr_21973_22481[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_21964[(4)]))){\nvar statearr_21974_22482 = state_21964;\n(statearr_21974_22482[(1)] = cljs.core.first((state_21964[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22483 = state_21964;\nstate_21964 = G__22483;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_21964){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_21964);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_21975 = f__12938__auto__();\n(statearr_21975[(6)] = c__12937__auto___22476);\n\nreturn statearr_21975;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\n} else {\n}\n} else {\n}\n\ntry{cljs.core.deref(self__.socket_).send(ppstr);\n\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}catch (e21976){var e = e21976;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1044,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Chsk send error\"], null);\n}),null)),null,-1654028540);\n\nvar temp__5804__auto___22484 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5804__auto___22484)){\nvar cb_uuid_22485 = temp__5804__auto___22484;\nvar cb_fn_STAR__22486 = (function (){var or__5002__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_22485);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar e__$1 = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e21977){if((e21977 instanceof Error)){\nvar e__$1 = e21977;\nreturn e__$1;\n} else {\nthrow e21977;\n\n}\n}})();\nif((e__$1 == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1047,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e__$1,null);\n}\n}\n})();\n(cb_fn_STAR__22486.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__22486.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : cb_fn_STAR__22486.call(null, new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\n}\n\nreturn false;\n}}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5804__auto__ = (function (){var or__5002__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar or__5002__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\nif(cljs.core.truth_(or__5002__auto____$1)){\nreturn or__5002__auto____$1;\n} else {\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\n}\n}\n})();\nif(cljs.core.truth_(temp__5804__auto__)){\nvar WebSocket = temp__5804__auto__;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar connect_fn = (function taoensso$sente$connect_fn(){\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null, retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1069,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,856034015);\n\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__21934_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21934_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nvar _QMARK_socket = (function (){try{return (new WebSocket(taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0)))));\n}catch (e21978){var e = e21978;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1084,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"WebSocket error\"], null);\n}),null)),null,335853294);\n\nreturn null;\n}})();\nif(cljs.core.not(_QMARK_socket)){\nreturn retry_fn();\n} else {\nreturn cljs.core.reset_BANG_(self__.socket_,(function (){var G__21979 = _QMARK_socket;\n(G__21979[\"onerror\"] = (function (ws_ev){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1094,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\n}catch (e21980){var _ = e21980;\nreturn ws_ev;\n}})()], null);\n}),null)),null,1003730518);\n\nvar last_ws_error = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null);\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__21935_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21935_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),last_ws_error);\n}));\n}));\n\n(G__21979[\"onmessage\"] = (function (ws_ev){\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\nvar vec__21981 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21981,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21981,(1),null);\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nvar or__5002__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\n})()\n:null);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar or__5002__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__5002__auto____$1)){\nreturn or__5002__auto____$1;\n} else {\nvar temp__5802__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5802__auto__)){\nvar cb_uuid = temp__5802__auto__;\nvar temp__5802__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar cb_fn = temp__5802__auto____$1;\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null, clj));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1130,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\n}),null)),null,880186431);\n}\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n}));\n\n(G__21979[\"onclose\"] = (function (ws_ev){\nvar clean_QMARK_ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\");\nvar code = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\");\nvar reason = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\");\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),clean_QMARK_,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null);\nif(cljs.core.truth_(clean_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1152,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\n}),null)),null,1023680673);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__21936_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21936_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__21937_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__21937_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n\nreturn retry_fn();\n}\n}));\n\nreturn G__21979;\n})());\n}\n} else {\nreturn null;\n}\n});\nvar temp__5804__auto___22487__$1 = self__.ws_kalive_ms;\nif(cljs.core.truth_(temp__5804__auto___22487__$1)){\nvar ms_22488 = temp__5804__auto___22487__$1;\nvar c__12937__auto___22489 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_22011){\nvar state_val_22012 = (state_22011[(1)]);\nif((state_val_22012 === (7))){\nvar inst_22007 = (state_22011[(2)]);\nvar state_22011__$1 = state_22011;\nvar statearr_22013_22490 = state_22011__$1;\n(statearr_22013_22490[(2)] = inst_22007);\n\n(statearr_22013_22490[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (1))){\nvar state_22011__$1 = state_22011;\nvar statearr_22014_22491 = state_22011__$1;\n(statearr_22014_22491[(2)] = null);\n\n(statearr_22014_22491[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (4))){\nvar inst_21988 = (state_22011[(2)]);\nvar inst_21989 = have_handle_QMARK_();\nvar state_22011__$1 = (function (){var statearr_22015 = state_22011;\n(statearr_22015[(7)] = inst_21988);\n\nreturn statearr_22015;\n})();\nif(inst_21989){\nvar statearr_22016_22492 = state_22011__$1;\n(statearr_22016_22492[(1)] = (5));\n\n} else {\nvar statearr_22017_22493 = state_22011__$1;\n(statearr_22017_22493[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (6))){\nvar state_22011__$1 = state_22011;\nvar statearr_22018_22494 = state_22011__$1;\n(statearr_22018_22494[(2)] = null);\n\n(statearr_22018_22494[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (3))){\nvar inst_22009 = (state_22011[(2)]);\nvar state_22011__$1 = state_22011;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_22011__$1,inst_22009);\n} else {\nif((state_val_22012 === (2))){\nvar inst_21985 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_21986 = cljs.core.async.timeout(ms_22488);\nvar state_22011__$1 = (function (){var statearr_22019 = state_22011;\n(statearr_22019[(8)] = inst_21985);\n\nreturn statearr_22019;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_22011__$1,(4),inst_21986);\n} else {\nif((state_val_22012 === (9))){\nvar state_22011__$1 = state_22011;\nvar statearr_22020_22495 = state_22011__$1;\n(statearr_22020_22495[(2)] = null);\n\n(statearr_22020_22495[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (5))){\nvar inst_21985 = (state_22011[(8)]);\nvar inst_21991 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_21992 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_21985,inst_21991);\nvar state_22011__$1 = state_22011;\nif(inst_21992){\nvar statearr_22021_22496 = state_22011__$1;\n(statearr_22021_22496[(1)] = (8));\n\n} else {\nvar statearr_22022_22497 = state_22011__$1;\n(statearr_22022_22497[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (10))){\nvar inst_22003 = (state_22011[(2)]);\nvar state_22011__$1 = (function (){var statearr_22023 = state_22011;\n(statearr_22023[(9)] = inst_22003);\n\nreturn statearr_22023;\n})();\nvar statearr_22024_22498 = state_22011__$1;\n(statearr_22024_22498[(2)] = null);\n\n(statearr_22024_22498[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22012 === (8))){\nvar inst_21994 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_21995 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\nvar inst_21996 = (new cljs.core.PersistentVector(null,1,(5),inst_21994,inst_21995,null));\nvar inst_21997 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\nvar inst_21998 = [true];\nvar inst_21999 = cljs.core.PersistentHashMap.fromArrays(inst_21997,inst_21998);\nvar inst_22000 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null, inst_21996,inst_21999);\nvar state_22011__$1 = state_22011;\nvar statearr_22025_22499 = state_22011__$1;\n(statearr_22025_22499[(2)] = inst_22000);\n\n(statearr_22025_22499[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__12839__auto__ = null;\nvar taoensso$sente$state_machine__12839__auto____0 = (function (){\nvar statearr_22026 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_22026[(0)] = taoensso$sente$state_machine__12839__auto__);\n\n(statearr_22026[(1)] = (1));\n\nreturn statearr_22026;\n});\nvar taoensso$sente$state_machine__12839__auto____1 = (function (state_22011){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_22011);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e22027){var ex__12842__auto__ = e22027;\nvar statearr_22028_22500 = state_22011;\n(statearr_22028_22500[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_22011[(4)]))){\nvar statearr_22029_22501 = state_22011;\n(statearr_22029_22501[(1)] = cljs.core.first((state_22011[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22502 = state_22011;\nstate_22011 = G__22502;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__12839__auto__ = function(state_22011){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__12839__auto____1.call(this,state_22011);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__12839__auto____0;\ntaoensso$sente$state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__12839__auto____1;\nreturn taoensso$sente$state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_22030 = f__12938__auto__();\n(statearr_22030[(6)] = c__12937__auto___22489);\n\nreturn statearr_22030;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\n} else {\n}\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nconnect_fn();\n\nreturn chsk__$1;\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChWebSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__5346__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__5346__auto__,writer__5347__auto__){\nreturn cljs.core._write(writer__5347__auto__,\"taoensso.sente/ChWebSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChWebSocket.\n */\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__21942){\nvar extmap__5342__auto__ = (function (){var G__22031 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21942,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\nif(cljs.core.record_QMARK_(G__21942)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__22031);\n} else {\nreturn G__22031;\n}\n})();\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__21942),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__21942),null,cljs.core.not_empty(extmap__5342__auto__),null));\n});\n\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n/**\n * We must set *some* client-side timeout otherwise an unpredictable (and\n *   probably too short) browser default will be used. Must be > server's\n *   :lp-timeout-ms.\n */\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.ajax_opts = ajax_opts;\nthis.curr_xhr_ = curr_xhr_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5300__auto__,k__5301__auto__){\nvar self__ = this;\nvar this__5300__auto____$1 = this;\nreturn this__5300__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__5301__auto__,null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5302__auto__,k22039,else__5303__auto__){\nvar self__ = this;\nvar this__5302__auto____$1 = this;\nvar G__22043 = k22039;\nvar G__22043__$1 = (((G__22043 instanceof cljs.core.Keyword))?G__22043.fqn:null);\nswitch (G__22043__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"ajax-opts\":\nreturn self__.ajax_opts;\n\nbreak;\ncase \"curr-xhr_\":\nreturn self__.curr_xhr_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k22039,else__5303__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5320__auto__,f__5321__auto__,init__5322__auto__){\nvar self__ = this;\nvar this__5320__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5323__auto__,p__22044){\nvar vec__22045 = p__22044;\nvar k__5324__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22045,(0),null);\nvar v__5325__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22045,(1),null);\nreturn (f__5321__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5321__auto__.cljs$core$IFn$_invoke$arity$3(ret__5323__auto__,k__5324__auto__,v__5325__auto__) : f__5321__auto__.call(null, ret__5323__auto__,k__5324__auto__,v__5325__auto__));\n}),init__5322__auto__,this__5320__auto____$1);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5315__auto__,writer__5316__auto__,opts__5317__auto__){\nvar self__ = this;\nvar this__5315__auto____$1 = this;\nvar pr_pair__5318__auto__ = (function (keyval__5319__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5316__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5317__auto__,keyval__5319__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5316__auto__,pr_pair__5318__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__5317__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__22038){\nvar self__ = this;\nvar G__22038__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__22038__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5298__auto__){\nvar self__ = this;\nvar this__5298__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5295__auto__){\nvar self__ = this;\nvar this__5295__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5304__auto__){\nvar self__ = this;\nvar this__5304__auto____$1 = this;\nreturn (11 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5296__auto__){\nvar self__ = this;\nvar this__5296__auto____$1 = this;\nvar h__5111__auto__ = self__.__hash;\nif((!((h__5111__auto__ == null)))){\nreturn h__5111__auto__;\n} else {\nvar h__5111__auto____$1 = (function (coll__5297__auto__){\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__5297__auto__));\n})(this__5296__auto____$1);\n(self__.__hash = h__5111__auto____$1);\n\nreturn h__5111__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this22040,other22041){\nvar self__ = this;\nvar this22040__$1 = this;\nreturn (((!((other22041 == null)))) && ((((this22040__$1.constructor === other22041.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.client_id,other22041.client_id)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.chs,other22041.chs)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.params,other22041.params)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.packer,other22041.packer)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.url,other22041.url)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.state_,other22041.state_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.instance_handle_,other22041.instance_handle_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.ever_opened_QMARK__,other22041.ever_opened_QMARK__)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.backoff_ms_fn,other22041.backoff_ms_fn)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.ajax_opts,other22041.ajax_opts)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.curr_xhr_,other22041.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22040__$1.__extmap,other22041.__extmap)))))))))))))))))))))))))));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5310__auto__,k__5311__auto__){\nvar self__ = this;\nvar this__5310__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__5311__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5310__auto____$1),self__.__meta),k__5311__auto__);\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5311__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5307__auto__,k22039){\nvar self__ = this;\nvar this__5307__auto____$1 = this;\nvar G__22048 = k22039;\nvar G__22048__$1 = (((G__22048 instanceof cljs.core.Keyword))?G__22048.fqn:null);\nswitch (G__22048__$1) {\ncase \"client-id\":\ncase \"chs\":\ncase \"params\":\ncase \"packer\":\ncase \"url\":\ncase \"state_\":\ncase \"instance-handle_\":\ncase \"ever-opened?_\":\ncase \"backoff-ms-fn\":\ncase \"ajax-opts\":\ncase \"curr-xhr_\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k22039);\n\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5308__auto__,k__5309__auto__,G__22038){\nvar self__ = this;\nvar this__5308__auto____$1 = this;\nvar pred__22049 = cljs.core.keyword_identical_QMARK_;\nvar expr__22050 = k__5309__auto__;\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(G__22038,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__22038,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__22038,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__22038,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__22038,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__22038,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__22038,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__22038,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__22038,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__22038,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22049.cljs$core$IFn$_invoke$arity$2 ? pred__22049.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__22050) : pred__22049.call(null, new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__22050)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__22038,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5309__auto__,G__22038),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5313__auto__){\nvar self__ = this;\nvar this__5313__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5299__auto__,G__22038){\nvar self__ = this;\nvar this__5299__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__22038,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5305__auto__,entry__5306__auto__){\nvar self__ = this;\nvar this__5305__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5306__auto__)){\nreturn this__5305__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry__5306__auto__,(0)),cljs.core._nth(entry__5306__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5305__auto____$1,entry__5306__auto__);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__22032_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__22032_SHARP_,reason);\n}));\n\nvar temp__5804__auto__ = cljs.core.deref(self__.curr_xhr_);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar x = temp__5804__auto__;\nreturn x.abort();\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null, new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null, );\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__22052 = opts;\nvar map__22052__$1 = cljs.core.__destructure_map(map__22052);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22052__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22052__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22052__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\nvar G__22053_22505 = self__.url;\nvar G__22054_22506 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__5002__auto__ = _QMARK_timeout_ms;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar or__5002__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__5002__auto____$1)){\nreturn or__5002__auto____$1;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\n})()], null)], 0));\nvar G__22055_22507 = (function taoensso$sente$ajax_cb(p__22056){\nvar map__22057 = p__22056;\nvar map__22057__$1 = cljs.core.__destructure_map(map__22057);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22057__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22057__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : _QMARK_cb_fn.call(null, new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\n} else {\nreturn null;\n}\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__22033_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__22033_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : _QMARK_cb_fn.call(null, new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\nreturn null;\n}\n}\n} else {\nvar content = _QMARK_content;\nvar resp_ppstr = content;\nvar vec__22058 = taoensso.sente.unpack(self__.packer,resp_ppstr);\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22058,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22058,(1),null);\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null, resp_clj));\n} else {\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1273,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\n}),null)),null,-516786185);\n} else {\n}\n}\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__22034_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__22034_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n}\n});\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__22053_22505,G__22054_22506,G__22055_22507) : taoensso.sente.ajax_lite.call(null, G__22053_22505,G__22054_22506,G__22055_22507));\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar poll_fn = (function taoensso$sente$poll_fn(retry_count){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1283,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\n}),null)),null,-1371497460);\n\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = (retry_count + (1));\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null, retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1291,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,1482848996);\n\ngoog.global.setTimeout((function (){\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\n}),backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__22035_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__22035_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__22061 = self__.url;\nvar G__22062 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0)),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0))], null)], 0));\nvar G__22063 = (function taoensso$sente$poll_fn_$_ajax_cb(p__22064){\nvar map__22065 = p__22064;\nvar map__22065__$1 = cljs.core.__destructure_map(map__22065);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22065__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22065__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nreturn taoensso$sente$poll_fn((0));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__22036_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__22036_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nreturn retry_fn();\n\n}\n} else {\nvar content = _QMARK_content;\nvar ppstr = content;\nvar vec__22066 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22066,(0),null);\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\nif(handshake_QMARK_){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__22037_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__22037_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n\ntaoensso$sente$poll_fn((0));\n\nif(handshake_QMARK_){\nreturn null;\n} else {\nvar or__5002__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__22061,G__22062,G__22063) : taoensso.sente.ajax_lite.call(null, G__22061,G__22062,G__22063));\n})());\n} else {\nreturn null;\n}\n});\npoll_fn((0));\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAjaxSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__5346__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__5346__auto__,writer__5347__auto__){\nreturn cljs.core._write(writer__5347__auto__,\"taoensso.sente/ChAjaxSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAjaxSocket.\n */\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__22042){\nvar extmap__5342__auto__ = (function (){var G__22069 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__22042,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\nif(cljs.core.record_QMARK_(G__22042)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__22069);\n} else {\nreturn G__22069;\n}\n})();\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__22042),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__22042),null,cljs.core.not_empty(extmap__5342__auto__),null));\n});\n\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\nthis.ws_chsk_opts = ws_chsk_opts;\nthis.ajax_chsk_opts = ajax_chsk_opts;\nthis.state_ = state_;\nthis.impl_ = impl_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5300__auto__,k__5301__auto__){\nvar self__ = this;\nvar this__5300__auto____$1 = this;\nreturn this__5300__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__5301__auto__,null);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5302__auto__,k22071,else__5303__auto__){\nvar self__ = this;\nvar this__5302__auto____$1 = this;\nvar G__22075 = k22071;\nvar G__22075__$1 = (((G__22075 instanceof cljs.core.Keyword))?G__22075.fqn:null);\nswitch (G__22075__$1) {\ncase \"ws-chsk-opts\":\nreturn self__.ws_chsk_opts;\n\nbreak;\ncase \"ajax-chsk-opts\":\nreturn self__.ajax_chsk_opts;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"impl_\":\nreturn self__.impl_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k22071,else__5303__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5320__auto__,f__5321__auto__,init__5322__auto__){\nvar self__ = this;\nvar this__5320__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5323__auto__,p__22076){\nvar vec__22077 = p__22076;\nvar k__5324__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22077,(0),null);\nvar v__5325__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22077,(1),null);\nreturn (f__5321__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5321__auto__.cljs$core$IFn$_invoke$arity$3(ret__5323__auto__,k__5324__auto__,v__5325__auto__) : f__5321__auto__.call(null, ret__5323__auto__,k__5324__auto__,v__5325__auto__));\n}),init__5322__auto__,this__5320__auto____$1);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5315__auto__,writer__5316__auto__,opts__5317__auto__){\nvar self__ = this;\nvar this__5315__auto____$1 = this;\nvar pr_pair__5318__auto__ = (function (keyval__5319__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5316__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5317__auto__,keyval__5319__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5316__auto__,pr_pair__5318__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__5317__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__22070){\nvar self__ = this;\nvar G__22070__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__22070__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5298__auto__){\nvar self__ = this;\nvar this__5298__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5295__auto__){\nvar self__ = this;\nvar this__5295__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5304__auto__){\nvar self__ = this;\nvar this__5304__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5296__auto__){\nvar self__ = this;\nvar this__5296__auto____$1 = this;\nvar h__5111__auto__ = self__.__hash;\nif((!((h__5111__auto__ == null)))){\nreturn h__5111__auto__;\n} else {\nvar h__5111__auto____$1 = (function (coll__5297__auto__){\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__5297__auto__));\n})(this__5296__auto____$1);\n(self__.__hash = h__5111__auto____$1);\n\nreturn h__5111__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this22072,other22073){\nvar self__ = this;\nvar this22072__$1 = this;\nreturn (((!((other22073 == null)))) && ((((this22072__$1.constructor === other22073.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22072__$1.ws_chsk_opts,other22073.ws_chsk_opts)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22072__$1.ajax_chsk_opts,other22073.ajax_chsk_opts)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22072__$1.state_,other22073.state_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22072__$1.impl_,other22073.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this22072__$1.__extmap,other22073.__extmap)))))))))))));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5310__auto__,k__5311__auto__){\nvar self__ = this;\nvar this__5310__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__5311__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5310__auto____$1),self__.__meta),k__5311__auto__);\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5311__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5307__auto__,k22071){\nvar self__ = this;\nvar this__5307__auto____$1 = this;\nvar G__22080 = k22071;\nvar G__22080__$1 = (((G__22080 instanceof cljs.core.Keyword))?G__22080.fqn:null);\nswitch (G__22080__$1) {\ncase \"ws-chsk-opts\":\ncase \"ajax-chsk-opts\":\ncase \"state_\":\ncase \"impl_\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k22071);\n\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5308__auto__,k__5309__auto__,G__22070){\nvar self__ = this;\nvar this__5308__auto____$1 = this;\nvar pred__22081 = cljs.core.keyword_identical_QMARK_;\nvar expr__22082 = k__5309__auto__;\nif(cljs.core.truth_((pred__22081.cljs$core$IFn$_invoke$arity$2 ? pred__22081.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__22082) : pred__22081.call(null, new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__22082)))){\nreturn (new taoensso.sente.ChAutoSocket(G__22070,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22081.cljs$core$IFn$_invoke$arity$2 ? pred__22081.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__22082) : pred__22081.call(null, new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__22082)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__22070,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22081.cljs$core$IFn$_invoke$arity$2 ? pred__22081.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__22082) : pred__22081.call(null, new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__22082)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__22070,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__22081.cljs$core$IFn$_invoke$arity$2 ? pred__22081.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__22082) : pred__22081.call(null, new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__22082)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__22070,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5309__auto__,G__22070),null));\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5313__auto__){\nvar self__ = this;\nvar this__5313__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5299__auto__,G__22070){\nvar self__ = this;\nvar this__5299__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__22070,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5305__auto__,entry__5306__auto__){\nvar self__ = this;\nvar this__5305__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5306__auto__)){\nreturn this__5305__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth(entry__5306__auto__,(0)),cljs.core._nth(entry__5306__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5305__auto____$1,entry__5306__auto__);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5804__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar impl = temp__5804__auto__;\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5804__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar impl = temp__5804__auto__;\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null, );\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5802__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar impl = temp__5802__auto__;\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\n} else {\nvar map__22084 = opts;\nvar map__22084__$1 = cljs.core.__destructure_map(map__22084);\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22084__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ajax_conn_BANG_ = (function (){\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\n\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null, );\n});\nvar ws_conn_BANG_ = (function (){\nvar downgraded_QMARK___22510 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),(function (_,___$1,old_state,new_state){\nvar temp__5804__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar impl = temp__5804__auto__;\nvar temp__5804__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\nif(cljs.core.truth_(temp__5804__auto____$1)){\nvar ever_opened_QMARK__ = temp__5804__auto____$1;\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\nreturn null;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___22510,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1424,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\n}),null)),null,1060532229);\n\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\n\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null, );\n});\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__5002__auto__ = ws_conn_BANG_();\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn ajax_conn_BANG_();\n}\n})());\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAutoSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__5346__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__5346__auto__,writer__5347__auto__){\nreturn cljs.core._write(writer__5347__auto__,\"taoensso.sente/ChAutoSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAutoSocket.\n */\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__22074){\nvar extmap__5342__auto__ = (function (){var G__22085 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__22074,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\nif(cljs.core.record_QMARK_(G__22074)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__22085);\n} else {\nreturn G__22085;\n}\n})();\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__22074),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__22074),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__22074),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__22074),null,cljs.core.not_empty(extmap__5342__auto__),null));\n});\n\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\nvar protocol__$1 = (function (){var G__22086 = protocol;\nvar G__22086__$1 = (((G__22086 instanceof cljs.core.Keyword))?G__22086.fqn:null);\nswitch (G__22086__$1) {\ncase \"http\":\nreturn \"http:\";\n\nbreak;\ncase \"https\":\nreturn \"https:\";\n\nbreak;\ndefault:\nreturn protocol;\n\n}\n})();\nvar protocol__$2 = (function (){var e = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__22088 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__22088) : taoensso.truss.impl.set_STAR_.call(null, G__22088));\n})(),x);\n})(protocol__$1)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e22087){if((e22087 instanceof Error)){\nvar e = e22087;\nreturn e;\n} else {\nthrow e22087;\n\n}\n}})();\nif((e == null)){\nreturn protocol__$1;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1444,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\n}\n})();\nvar protocol__$3 = (function (){var G__22089 = type;\nvar G__22089__$1 = (((G__22089 instanceof cljs.core.Keyword))?G__22089.fqn:null);\nswitch (G__22089__$1) {\ncase \"ajax\":\nreturn protocol__$2;\n\nbreak;\ncase \"ws\":\nvar G__22090 = protocol__$2;\nswitch (G__22090) {\ncase \"https:\":\nreturn \"wss:\";\n\nbreak;\ncase \"http:\":\nreturn \"ws:\";\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__22090)].join('')));\n\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__22089__$1)].join('')));\n\n}\n})();\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\n});\n/**\n * Returns nil on failure, or a map with keys:\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\n * \n *   Common options:\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n *     :protocol       ; Server protocol, e/o #{:http :https}.\n *     :host           ; Server host (defaults to current page's host).\n *     :port           ; Server port (defaults to current page's port).\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\n *                     ; for application-level auth, etc.).\n *     :packer         ; :edn (default), or an IPacker implementation.\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\n */\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___22514 = arguments.length;\nvar i__5727__auto___22515 = (0);\nwhile(true){\nif((i__5727__auto___22515 < len__5726__auto___22514)){\nargs__5732__auto__.push((arguments[i__5727__auto___22515]));\n\nvar G__22516 = (i__5727__auto___22515 + (1));\ni__5727__auto___22515 = G__22516;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,_QMARK_csrf_token,p__22094){\nvar vec__22095 = p__22094;\nvar map__22098 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22095,(0),null);\nvar map__22098__$1 = cljs.core.__destructure_map(map__22098);\nvar opts = map__22098__$1;\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22098__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\n}\n})());\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22098__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22098__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\nvar port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22098__$1,new cljs.core.Keyword(null,\"port\",\"port\",1534937262));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22098__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22098__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22095,(1),null);\nvar e_22517 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__22100 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__22100) : taoensso.truss.impl.set_STAR_.call(null, G__22100));\n})(),x);\n})(type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e22099){if((e22099 instanceof Error)){\nvar e_22517 = e22099;\nreturn e_22517;\n} else {\nthrow e22099;\n\n}\n}})();\nif((e_22517 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1487,\"([:in #{:ws :ajax :auto}] type)\",type,e_22517,null);\n}\n\nvar e_22518 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e22101){if((e22101 instanceof Error)){\nvar e_22518 = e22101;\nreturn e_22518;\n} else {\nthrow e22101;\n\n}\n}})();\nif((e_22518 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1488,\"(enc/nblank-str? client-id)\",client_id,e_22518,null);\n}\n\nif((!((_deprecated_more_opts == null)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1490,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\n}),null)),null,461476580);\n} else {\n}\n\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1491,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\n}),null)),null,339205465);\n} else {\n}\n\nif((((!(typeof _QMARK_csrf_token === 'string'))) || (clojure.string.blank_QMARK_(_QMARK_csrf_token)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1494,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"], null);\n}),null)),null,-1603465352);\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar vec__22102 = (function (){var win_loc = taoensso.encore.get_win_loc();\nvar path__$1 = (function (){var or__5002__auto__ = path;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nvar temp__5802__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar f = temp__5802__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)) : f.call(null, path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443))),(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)) : f.call(null, path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)))], null);\n} else {\nvar protocol__$1 = (function (){var or__5002__auto__ = protocol;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nvar or__5002__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\nif(cljs.core.truth_(or__5002__auto____$1)){\nreturn or__5002__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\n}\n}\n})();\nvar host__$1 = (function (){var G__22105 = (function (){var or__5002__auto__ = host;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nif(cljs.core.truth_(port)){\nreturn clojure.string.replace_first(G__22105,/(:\\d+)?$/,[\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''));\n} else {\nreturn G__22105;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\n}\n})();\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22102,(0),null);\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22102,(1),null);\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\n})));\n} else {\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\n}\n})()], null);\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__22106 = type;\nvar G__22106__$1 = (((G__22106 instanceof cljs.core.Keyword))?G__22106.fqn:null);\nswitch (G__22106__$1) {\ncase \"ws\":\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"ajax\":\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"auto\":\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__22106__$1)].join('')));\n\n}\n})());\nvar temp__5802__auto__ = _QMARK_chsk;\nif(cljs.core.truth_(temp__5802__auto__)){\nvar chsk = temp__5802__auto__;\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nvar vec__22107 = taoensso.sente.as_event(ev);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22107,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22107,(1),null);\nvar ev__$1 = vec__22107;\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\n})));\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1583,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\n}),null)),null,-231744881);\n}\n}));\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq22091){\nvar G__22092 = cljs.core.first(seq22091);\nvar seq22091__$1 = cljs.core.next(seq22091);\nvar G__22093 = cljs.core.first(seq22091__$1);\nvar seq22091__$2 = cljs.core.next(seq22091__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22092,G__22093,seq22091__$2);\n}));\n\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\nvar map__22110 = opts;\nvar map__22110__$1 = cljs.core.__destructure_map(map__22110);\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22110__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22110__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22110__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar execute1 = (function (f){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null, ));\n});\nvar c__12937__auto___22520 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__12938__auto__ = (function (){var switch__12838__auto__ = (function (state_22141){\nvar state_val_22142 = (state_22141[(1)]);\nif((state_val_22142 === (7))){\nvar inst_22127 = (state_22141[(7)]);\nvar inst_22127__$1 = (state_22141[(2)]);\nvar state_22141__$1 = (function (){var statearr_22143 = state_22141;\n(statearr_22143[(7)] = inst_22127__$1);\n\nreturn statearr_22143;\n})();\nif(cljs.core.truth_(inst_22127__$1)){\nvar statearr_22144_22521 = state_22141__$1;\n(statearr_22144_22521[(1)] = (8));\n\n} else {\nvar statearr_22145_22522 = state_22141__$1;\n(statearr_22145_22522[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (1))){\nvar state_22141__$1 = state_22141;\nvar statearr_22146_22523 = state_22141__$1;\n(statearr_22146_22523[(2)] = null);\n\n(statearr_22146_22523[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (4))){\nvar inst_22119 = (state_22141[(8)]);\nvar inst_22122 = (state_22141[(9)]);\nvar inst_22121 = (state_22141[(10)]);\nvar inst_22119__$1 = (state_22141[(2)]);\nvar inst_22120 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_22119__$1,(0),null);\nvar inst_22121__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_22119__$1,(1),null);\nvar inst_22122__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_22121__$1,ch_ctrl);\nvar state_22141__$1 = (function (){var statearr_22147 = state_22141;\n(statearr_22147[(8)] = inst_22119__$1);\n\n(statearr_22147[(9)] = inst_22122__$1);\n\n(statearr_22147[(10)] = inst_22121__$1);\n\n(statearr_22147[(11)] = inst_22120);\n\nreturn statearr_22147;\n})();\nif(inst_22122__$1){\nvar statearr_22148_22524 = state_22141__$1;\n(statearr_22148_22524[(1)] = (5));\n\n} else {\nvar statearr_22149_22525 = state_22141__$1;\n(statearr_22149_22525[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (6))){\nvar inst_22120 = (state_22141[(11)]);\nvar inst_22125 = (inst_22120 == null);\nvar state_22141__$1 = state_22141;\nvar statearr_22150_22526 = state_22141__$1;\n(statearr_22150_22526[(2)] = inst_22125);\n\n(statearr_22150_22526[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (3))){\nvar inst_22139 = (state_22141[(2)]);\nvar state_22141__$1 = state_22141;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_22141__$1,inst_22139);\n} else {\nif((state_val_22142 === (2))){\nvar inst_22115 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_22116 = [ch_recv,ch_ctrl];\nvar inst_22117 = (new cljs.core.PersistentVector(null,2,(5),inst_22115,inst_22116,null));\nvar state_22141__$1 = state_22141;\nreturn cljs.core.async.ioc_alts_BANG_(state_22141__$1,(4),inst_22117);\n} else {\nif((state_val_22142 === (9))){\nvar inst_22119 = (state_22141[(8)]);\nvar inst_22127 = (state_22141[(7)]);\nvar inst_22121 = (state_22141[(10)]);\nvar inst_22120 = (state_22141[(11)]);\nvar inst_22131 = cljs.core.__destructure_map(inst_22120);\nvar inst_22132 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_22131,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar inst_22133 = (function (){var vec__22112 = inst_22119;\nvar v = inst_22120;\nvar p = inst_22121;\nvar stop_QMARK_ = inst_22127;\nvar map__22130 = inst_22131;\nvar event_msg = inst_22131;\nvar event = inst_22132;\nreturn (function (){\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1610,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\n}),null)),null,1855411467);\n} else {\n}\n\nvar G__22153 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e22154){if((e22154 instanceof Error)){\nvar e = e22154;\nreturn e;\n} else {\nthrow e22154;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1613,\"(server-event-msg? event-msg)\",event_msg,e,null);\n}\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e22155){if((e22155 instanceof Error)){\nvar e = e22155;\nreturn e;\n} else {\nthrow e22155;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1614,\"(client-event-msg? event-msg)\",event_msg,e,null);\n}\n})());\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__22153) : event_msg_handler.call(null, G__22153));\n}catch (e22151){if((e22151 instanceof Error)){\nvar e1 = e22151;\ntry{var temp__5802__auto__ = error_handler;\nif(cljs.core.truth_(temp__5802__auto__)){\nvar eh = temp__5802__auto__;\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null, e1,event_msg));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1619,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\n}),null)),null,-2107445809);\n}\n}catch (e22152){if((e22152 instanceof Error)){\nvar e2 = e22152;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1620,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\n}),null)),null,-587919982);\n} else {\nthrow e22152;\n\n}\n}} else {\nthrow e22151;\n\n}\n}});\n})();\nvar inst_22134 = execute1(inst_22133);\nvar state_22141__$1 = (function (){var statearr_22156 = state_22141;\n(statearr_22156[(12)] = inst_22134);\n\nreturn statearr_22156;\n})();\nvar statearr_22157_22527 = state_22141__$1;\n(statearr_22157_22527[(2)] = null);\n\n(statearr_22157_22527[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (5))){\nvar inst_22122 = (state_22141[(9)]);\nvar state_22141__$1 = state_22141;\nvar statearr_22158_22528 = state_22141__$1;\n(statearr_22158_22528[(2)] = inst_22122);\n\n(statearr_22158_22528[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (10))){\nvar inst_22137 = (state_22141[(2)]);\nvar state_22141__$1 = state_22141;\nvar statearr_22159_22529 = state_22141__$1;\n(statearr_22159_22529[(2)] = inst_22137);\n\n(statearr_22159_22529[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_22142 === (8))){\nvar state_22141__$1 = state_22141;\nvar statearr_22160_22530 = state_22141__$1;\n(statearr_22160_22530[(2)] = null);\n\n(statearr_22160_22530[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto__ = null;\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto____0 = (function (){\nvar statearr_22161 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_22161[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto__);\n\n(statearr_22161[(1)] = (1));\n\nreturn statearr_22161;\n});\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto____1 = (function (state_22141){\nwhile(true){\nvar ret_value__12840__auto__ = (function (){try{while(true){\nvar result__12841__auto__ = switch__12838__auto__(state_22141);\nif(cljs.core.keyword_identical_QMARK_(result__12841__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__12841__auto__;\n}\nbreak;\n}\n}catch (e22162){var ex__12842__auto__ = e22162;\nvar statearr_22163_22531 = state_22141;\n(statearr_22163_22531[(2)] = ex__12842__auto__);\n\n\nif(cljs.core.seq((state_22141[(4)]))){\nvar statearr_22164_22532 = state_22141;\n(statearr_22164_22532[(1)] = cljs.core.first((state_22141[(4)])));\n\n} else {\nthrow ex__12842__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__12840__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__22533 = state_22141;\nstate_22141 = G__22533;\ncontinue;\n} else {\nreturn ret_value__12840__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto__ = function(state_22141){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto____1.call(this,state_22141);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto____0;\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto____1;\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__12839__auto__;\n})()\n})();\nvar state__12939__auto__ = (function (){var statearr_22165 = f__12938__auto__();\n(statearr_22165[(6)] = c__12937__auto___22520);\n\nreturn statearr_22165;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__12939__auto__);\n}));\n\n\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\nreturn cljs.core.async.close_BANG_(ch_ctrl);\n});\n});\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n * \n *   Or for simple automatic future-based threading of every request, enable\n *   the `:simple-auto-threading?` opt (disabled by default).\n */\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___22534 = arguments.length;\nvar i__5727__auto___22535 = (0);\nwhile(true){\nif((i__5727__auto___22535 < len__5726__auto___22534)){\nargs__5732__auto__.push((arguments[i__5727__auto___22535]));\n\nvar G__22536 = (i__5727__auto___22535 + (1));\ni__5727__auto___22535 = G__22536;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__22169){\nvar vec__22170 = p__22169;\nvar map__22173 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22170,(0),null);\nvar map__22173__$1 = cljs.core.__destructure_map(map__22173);\nvar opts = map__22173__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22173__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22173__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22173__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq22166){\nvar G__22167 = cljs.core.first(seq22166);\nvar seq22166__$1 = cljs.core.next(seq22166);\nvar G__22168 = cljs.core.first(seq22166__$1);\nvar seq22166__$2 = cljs.core.next(seq22166__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22167,G__22168,seq22166__$2);\n}));\n\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n */\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___22537 = arguments.length;\nvar i__5727__auto___22538 = (0);\nwhile(true){\nif((i__5727__auto___22538 < len__5726__auto___22537)){\nargs__5732__auto__.push((arguments[i__5727__auto___22538]));\n\nvar G__22539 = (i__5727__auto___22538 + (1));\ni__5727__auto___22538 = G__22539;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__22177){\nvar vec__22178 = p__22177;\nvar map__22181 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22178,(0),null);\nvar map__22181__$1 = cljs.core.__destructure_map(map__22181);\nvar opts = map__22181__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22181__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22181__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq22174){\nvar G__22175 = cljs.core.first(seq22174);\nvar seq22174__$1 = cljs.core.next(seq22174);\nvar G__22176 = cljs.core.first(seq22174__$1);\nvar seq22174__$2 = cljs.core.next(seq22174__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22175,G__22176,seq22174__$2);\n}));\n\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\n/**\n * Platform-specific alias for `make-channel-socket-server!` or\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\n * docstring for details.\n */\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\n/**\n * Platform-specific alias for `start-server-chsk-router!` or\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\n *   docstring for details.\n */\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\n/**\n * DEPRECATED: Please use `start-chsk-router!` instead\n */\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\nvar G__22182 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\nvar G__22183 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__22182,G__22183) : event_handler.call(null, G__22182,G__22183));\n}));\n});\n\n/**\n * DEPRECATED. Please use `timbre/set-level!` instead\n */\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\n\n/**\n * DEPRECATED: Please use `ajax-lite` instead\n */\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\n\n/**\n * DEPRECATED\n */\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__22184,websocket_QMARK_){\nvar map__22185 = p__22184;\nvar map__22185__$1 = cljs.core.__destructure_map(map__22185);\nvar location__$1 = map__22185__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22185__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22185__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22185__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5002__auto__ = path;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn pathname;\n}\n})())].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$shadow.js.shim.module$react"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^H","~$have!","^J","~$have?","^J","~$debugf","^F","~$tracef","^F","~$infof","^F","~$errorf","^F"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^D","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^F","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^14","~$goog","^15","^11","^11","^13","^13","~$enc","^J","^F","^F","~$str","~$clojure.string","^18","^18","^J","^J"],"~:seen",["^S",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^13","~$>!","^13","~$put!","^13","~$chan","^13","~$format","^J","~$swap-in!","^J","~$reset-in!","^J","~$swapped","^J"],"^1;",["^ ","^H","^H","^[","^F","^12","^13","^14","^14","^13","^13","^D","^D","^16","^J","^F","^F","~$asyncm","^H","^J","^J","~$sente-macros","^D"],"~:form",["~#list",["~$ns","^D","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1H",["^1:",["^18","~:as","^17"],["^13","^1J","^12","~:refer",["^1H",["^1=","^1>","^1?","^1@"]]],["^J","^1J","^16","^1K",["^1H",["^1A","^1B","^1C","^1D"]],"~:refer-macros",["^1H",["^I","^L","^M"]]],["^F","^1J","^[","^1L",["^1H",["^O","^N","^P","^E","^Q"]]],["^11","^1J","^10"]]],["^1H",["^1;",["^H","^1J","^1E","^1K",["^1H",["^G","^K"]]],["^D","^1J","^1F","^1K",["^1H",["^C"]]]]]]],"~:flags",["^ ","^1:",["^S",[]],"^1;",["^S",[]]],"~:js-deps",[],"~:deps",["^15","^14","^18","^13","^J","^F","^11"]],"^X","^D","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1728556199837,"^V",["^ ","^H","^H","^[","^F","^10","^11","^12","^13","^14","^14","^15","^15","^11","^11","^13","^13","^D","^D","^16","^J","^F","^F","^1E","^H","^17","^18","^18","^18","^J","^J","^1F","^D"],"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 105 0])\n  (enc/assert-min-encore-version  2.105))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :connected-uids\n                :ring-req :client-id\n                :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn- bad-origin?\n  [allowed-origins {:as ring-req :keys [headers]}]\n  (let [origin  (get headers \"origin\")\n        referer (get headers \"referer\" \"\")]\n    (cond\n      (do        (=   allowed-origins :all))   false\n      (contains? (set allowed-origins) origin) false\n      (enc/rsome #(str/starts-with? referer (str % \"/\")) allowed-origins) false\n      :else true)))\n\n(comment\n  ;; good (pass)\n  (bad-origin? :all                 {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com/\"}})\n\n  ;; bad (fail)\n  (bad-origin? #{\"http://site.com\"} {:headers nil})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://attacker.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://attacker.com/\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com.attacker.com/\"}}))\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n    :allowed-origins   ; e.g. #{\\\"http://site.com\\\" ...}, defaults to :all. ; Alpha\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn bad-csrf-fn bad-origin-fn csrf-token-fn handshake-data-fn packer allowed-origins]\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn    (fn [ring-req] (get-in ring-req [:session :uid]))\n              bad-csrf-fn   (fn [_ring-req] {:status 403 :body \"Bad CSRF token\"})\n              bad-origin-fn (fn [_ring-req] {:status 403 :body \"Unauthorized origin\"})\n              csrf-token-fn (fn [ring-req]\n                              (or (:anti-forgery-token ring-req)\n                                  (get-in ring-req [:session :csrf-token])\n                                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                                  (get-in ring-req [:session \"__anti-forgery-token\"])\n                                  #_:sente/no-reference-csrf-token\n                                  ))\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn\n              allowed-origins :all}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n   (when (>= lp-timeout-ms max-ms)\n     (throw\n       (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n         {:lp-timeout-ms lp-timeout-ms\n          :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [allowed-origins (have [:or set? #{:all}] allowed-origins)\n        packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and      (contains? old-any uid)\n                                     (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                    (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                         \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped (dissoc m uid)\n                                        (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        bad-csrf?\n        (fn [ring-req]\n          (if (nil? csrf-token-fn) ; Provides a way to disable CSRF check\n            false\n            (if-let [reference-csrf-token (csrf-token-fn ring-req)]\n              (let [csrf-token-from-client\n                    (or\n                      (get-in ring-req [:params    :csrf-token])\n                      (get-in ring-req [:headers \"x-csrf-token\"])\n                      (get-in ring-req [:headers \"x-xsrf-token\"]))]\n\n                (not\n                  (enc/const-str=\n                    reference-csrf-token\n                    csrf-token-from-client)))\n\n              true ; By default fail if no CSRF token\n              )))\n\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (cond\n         (bad-csrf?   ring-req)\n         (bad-csrf-fn ring-req)\n\n         (bad-origin? allowed-origins ring-req)\n         (bad-origin-fn               ring-req)\n\n         :else\n         (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n           {:on-open\n            (fn [server-ch websocket?]\n              (assert (not websocket?))\n              (let [params        (get ring-req :params)\n                    ppstr         (get params   :ppstr)\n                    client-id     (get params   :client-id)\n                    [clj has-cb?] (unpack packer ppstr)\n                    reply-fn\n                    (let [replied?_ (atom false)]\n                      (fn [resp-clj] ; Any clj form\n                        (when (compare-and-set! replied?_ false true)\n                          (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                          (interfaces/sch-send! server-ch websocket?\n                            (pack packer resp-clj)))))]\n\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {;; Note that the client-id is provided here just for the\n                     ;; user's convenience. non-lp-POSTs don't actually need a\n                     ;; client-id for Sente's own implementation:\n                     :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                     :ring-req  ring-req\n                     :event     clj\n                     :uid       (user-id-fn ring-req client-id)\n                     :?reply-fn (when has-cb? reply-fn)}))\n\n                (if has-cb?\n                  (when-let [ms lp-timeout-ms]\n                    (go\n                      (<! (async/timeout ms))\n                      (reply-fn :chsk/timeout)))\n                  (reply-fn :chsk/dummy-cb-200))))})))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid nil]]\n                       [:chsk/handshake [uid nil ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (cond\n\n           (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           (bad-csrf?   ring-req)\n           (bad-csrf-fn ring-req)\n\n           (bad-origin? allowed-origins ring-req)\n           (bad-origin-fn               ring-req)\n\n           :else\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped [_sch udt-t1] false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n#?(:cljs\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts])))\n\n#?(:cljs\n   (do\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)))\n\n#?(:cljs\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts))))\n\n#?(:cljs\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false))\n\n#?(:cljs\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n             (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n             (str \"cb should be nil, an ifn, or a channel: \" (type ?cb)))))\n\n#?(:cljs\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n                 (fn [?f] (swapped :swap/dissoc ?f))))))\n\n#?(:cljs\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output)))))\n\n#?(:cljs\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n           (dissoc :udt-next-reconnect)\n           (assoc\n             :open? false\n             :last-close {:udt (enc/now-udt) :reason reason}))\n       state)))\n\n#?(:cljs\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply])))))))\n\n#?(:cljs\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev)))))\n\n#?(:cljs\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n          (let [[x1] x] (= x1 :chsk/handshake)))))\n\n#?(:cljs\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid _ ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid nil ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled)))\n\n#?(:clj\n   (defmacro ^:private elide-require\n    \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n     (let [make-package-name (fn [prefix] (str prefix \"socket\"))\n           require-fn (if (exists? js/require)\n                        js/require\n                        (constantly :no-op))]\n       (delay ; Eager eval causes issues with React Native, Ref. #247,\n         (elide-require\n           (when (and node-target? (exists? js/require))\n             (try\n               (require-fn (make-package-name \"web\"))\n               ;; In particular, catch 'UnableToResolveError'\n               (catch :default e\n                 ;; (errorf e \"Unable to load npm websocket lib\")\n                 nil))))))))\n\n#?(:cljs\n   (defrecord ChWebSocket\n     ;; WebSocket-only IChSocket implementation\n     ;; Handles (re)connections, cbs, etc.\n\n     [client-id chs params packer url ws-kalive-ms\n      state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n      instance-handle_ retry-count_ ever-opened?_\n      backoff-ms-fn ; (fn [nattempt]) -> msecs\n      cbs-waiting_ ; {<cb-uuid> <fn> ...}\n      socket_\n      udt-last-comms_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [s @socket_] (.close s 1000 \"CLOSE_NORMAL\")))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n                 ppstr (pack packer ev ?cb-uuid)]\n\n             (when-let [cb-uuid ?cb-uuid]\n               (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n               (when-let [timeout-ms ?timeout-ms]\n                 (go\n                   (<! (async/timeout timeout-ms))\n                   (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                     (cb-fn* :chsk/timeout)))))\n\n             (try\n               (.send @socket_ ppstr)\n               (reset! udt-last-comms_ (enc/now-udt))\n               :apparent-success\n               (catch :default e\n                 (errorf e \"Chsk send error\")\n                 (when-let [cb-uuid ?cb-uuid]\n                   (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                    (have ?cb-fn))]\n                     (cb-fn* :chsk/error)))\n                 false))))))\n\n     (-chsk-connect! [chsk]\n       (when-let [WebSocket\n                  (or\n                    (enc/oget goog/global    \"WebSocket\")\n                    (enc/oget goog/global \"MozWebSocket\")\n                    (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n         (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n               have-handle? (fn [] (= @instance-handle_ instance-handle))\n               connect-fn\n               (fn connect-fn []\n                 (when (have-handle?)\n                   (let [retry-fn\n                         (fn [] ; Backoff then recur\n                           (when (have-handle?)\n                             (let [retry-count* (swap! retry-count_ inc)\n                                   backoff-ms (backoff-ms-fn retry-count*)\n                                   udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                               (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                 retry-count* backoff-ms)\n                               (.setTimeout goog/global connect-fn backoff-ms)\n                               (swap-chsk-state! chsk\n                                 #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                         ?socket\n                         (try\n                           (WebSocket.\n                             (enc/merge-url-with-query-string url\n                               (merge params ; 1st (don't clobber impl.):\n                                 {:client-id client-id\n                                  :csrf-token (:csrf-token @state_)})))\n\n                           (catch :default e\n                             (errorf e \"WebSocket error\")\n                             nil))]\n\n                     (if-not ?socket\n                       (retry-fn) ; Couldn't even get a socket\n\n                       (reset! socket_\n                         (doto ?socket\n                           (aset \"onerror\"\n                             (fn [ws-ev]\n                               (errorf ; ^:meta {:raw-console? true}\n                                 \"WebSocket error: %s\"\n                                 (try\n                                   (js->clj ws-ev)\n                                   (catch :default _ ws-ev)))\n\n                               (let [last-ws-error {:udt (enc/now-udt), :ev ws-ev}]\n                                 (swap-chsk-state! chsk\n                                   #(assoc % :last-ws-error last-ws-error)))))\n\n                           (aset \"onmessage\" ; Nb receives both push & cb evs!\n                             (fn [ws-ev]\n                               (let [ppstr (enc/oget ws-ev \"data\")\n\n                                     ;; `clj` may/not satisfy `event?` since\n                                     ;; we also receive cb replies here. This\n                                     ;; is why we prefix pstrs to indicate\n                                     ;; whether they're wrapped or not\n                                     [clj ?cb-uuid] (unpack packer ppstr)]\n\n                                 (reset! udt-last-comms_ (enc/now-udt))\n\n                                 (or\n                                   (when (handshake? clj)\n                                     (receive-handshake! :ws chsk clj)\n                                     (reset! retry-count_ 0)\n                                     :handshake)\n\n                                   (when (= clj :chsk/ws-ping)\n                                     (put! (:<server chs) [:chsk/ws-ping])\n                                     :noop)\n\n                                   (if-let [cb-uuid ?cb-uuid]\n                                     (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                                      cb-uuid)]\n                                       (cb-fn clj)\n                                       (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                                     (let [buffered-evs clj]\n                                       (receive-buffered-evs! chs buffered-evs)))))))\n\n                           ;; Fires repeatedly (on each connection attempt) while\n                           ;; server is down:\n                           (aset \"onclose\"\n                             (fn [ws-ev]\n                               (let [clean? (enc/oget ws-ev \"wasClean\")\n                                     code   (enc/oget ws-ev \"code\")\n                                     reason (enc/oget ws-ev \"reason\")\n                                     last-ws-close\n                                     {:udt    (enc/now-udt)\n                                      :ev     ws-ev\n                                      :clean? clean?\n                                      :code   code\n                                      :reason reason}]\n\n                                 ;; Firefox calls \"onclose\" while unloading,\n                                 ;; Ref. http://goo.gl/G5BYbn:\n                                 (if clean?\n                                   (do\n                                     (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                                     (swap-chsk-state! chsk\n                                       #(assoc % :last-ws-close last-ws-close)))\n                                   (do\n                                     (swap-chsk-state! chsk\n                                       #(assoc (chsk-state->closed % :unexpected)\n                                          :last-ws-close last-ws-close))\n                                     (retry-fn))))))))))))]\n\n           (when-let [ms ws-kalive-ms]\n             (go-loop []\n               (let [udt-t0 @udt-last-comms_]\n                 (<! (async/timeout ms))\n                 (when (have-handle?)\n                   (let [udt-t1 @udt-last-comms_]\n                     (when (= udt-t0 udt-t1)\n                       ;; Ref. issue #259:\n                       ;; We've seen no send/recv activity on this\n                       ;; conn w/in our kalive window so send a ping\n                       ;; ->server (should auto-close conn if it's\n                       ;; gone dead). The server generally sends pings so\n                       ;; this should be rare. Mostly here to help clients\n                       ;; identify conns that were suddenly dropped.\n\n                       (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n                   (recur)))))\n\n           (reset! retry-count_ 0)\n           (connect-fn)\n           chsk)))))\n\n#?(:cljs\n   (defn- new-ChWebSocket [opts csrf-token]\n     (map->ChWebSocket\n       (merge\n         {:state_ (atom {:type :ws :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :retry-count_     (atom 0)\n          :ever-opened?_    (atom false)\n          :cbs-waiting_     (atom {})\n          :socket_          (atom nil)\n          :udt-last-comms_  (atom nil)}\n         opts))))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n     ;; Ajax-only IChSocket implementation\n     ;; Handles (re)polling, etc.\n\n     [client-id chs params packer url state_\n      instance-handle_ ever-opened?_\n      backoff-ms-fn\n      ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge\n                    (:headers ajax-opts) ; 1st (don't clobber impl.)\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                    retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))\n\n                          :headers\n                          (merge\n                            (:headers ajax-opts) ; 1st (don't clobber impl.)\n                            {:X-CSRF-Token (:csrf-token @state_)})})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts csrf-token]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n     ;; Dynamic WebSocket/Ajax IChSocket implementation\n     ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n     [ws-chsk-opts ajax-chsk-opts state_\n      impl_ ; ChWebSocket or ChAjaxSocket\n      ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n               ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts (:csrf-token @state_))))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts (:csrf-token @state_))))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts csrf-token]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false :csrf-token csrf-token})\n          :impl_  (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path)))))\n\n#?(:cljs\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path ?csrf-token &\n      [{:keys [type protocol host port params recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (when (or (not (string? ?csrf-token)) (str/blank? ?csrf-token))\n       (warnf \"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.:\n                 win-loc  (enc/get-win-loc)\n                 path     (or path (:pathname win-loc))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host     (cond-> (or host (:host win-loc))\n                                port (str/replace-first #\"(:\\d+)?$\" (str \":\" port)))]\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws   (new-ChWebSocket    ws-chsk-opts ?csrf-token)\n               :ajax (new-ChAjaxSocket ajax-chsk-opts ?csrf-token)\n               :auto (new-ChAutoSocket auto-chsk-opts ?csrf-token)))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\")))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                       (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^S",["~:cljs"]],"~:used-var-namespaces",["^S",["~$cljs.core.async.impl.dispatch","^14","~$js","^15","^11","^13","^D","^F","~$cljs.core.async.impl.ioc-helpers","^18","^J","~$taoensso.truss.impl"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__21444","fexpr__21443","cljs.core/count","vec__21445","cljs.core.nth","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5804__auto__","errs","cljs.core.ex_info","taoensso.sente/event?","taoensso.sente/as-event","temp__5802__auto__","taoensso.sente/client-event-msg?","and__5000__auto__","cljs.core/map?","taoensso.encore/ks>=","map__21448","cljs.core/--destructure-map","cljs.core.get","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__21449","connected-uids","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__21450","map__21451","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__21452","ev-?data","valid-event","ev-msg*","cljs.core.merge","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_","taoensso.sente/cb-error?","cb-reply-clj","fexpr__21455","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__21456","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs","clj","e21459","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__21461","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","cljs.core/PROTOCOL_SENTINEL","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn","s","taoensso.encore.read_edn","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","p1__21462#","taoensso.truss.impl/-dummy-error","e21463","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","p__21466","map__21467","taoensso.sente/bad-origin?","allowed-origins","headers","origin","referer","cljs.core/contains?","cljs.core/set","p1__21465#","taoensso.encore/rsome","clojure.string/starts-with?","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__21471","vec__21472","map__21475","seq21469","G__21470","cljs.core/first","cljs.core/next","self__5711__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","bad-csrf-fn","bad-origin-fn","csrf-token-fn","handshake-data-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms","cljs.core.get_in","_ring-req","or__5002__auto__","e21476","e21477","taoensso.encore/pos-int?","p1__21468#","e21478","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","fexpr__21480","cljs.core/set?","cljs.core.async.chan","G__21481","cljs.core.assoc","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_","?v","vec__21482","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e21485","newly-connected?","p__21486","map__21487","ws","ajax","any","old-m","new-m","G__21488","cljs.core.conj","old-any","new-any","upd-connected-uid!","e21489","newly-disconnected?","p__21490","map__21491","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj","p__21492","vec__21493","map__21496","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str","flush-buffer!","pulled","m","vec__21497","ev-uuids","cljs.core.dissoc","vec__21500","buffered-evs","buffered-evs-ppstr","taoensso.sente.pack","G__21503","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__21504","cljs.core/seq","chunk__21505","count__21506","i__21507","vec__21514","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__21517","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__21520","chunk__21521","count__21522","i__21523","vec__21530","vec__21533","seq__21536","chunk__21537","count__21538","i__21539","vec__21546","vec__21549","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__12937__auto__","cljs.core.async.impl.dispatch/run","f__12938__auto__","switch__12838__auto__","state_21556","state_val_21557","cljs.core.async.impl.ioc-helpers/take!","inst_21553","inst_21554","statearr-21558","cljs.core.async.impl.ioc-helpers/return-chan","statearr-21559","state-machine__12839__auto__","ret-value__12840__auto__","result__12841__auto__","cljs.core/keyword-identical?","ex__12842__auto__","e21560","statearr-21561","statearr-21562","state__12939__auto__","statearr-21563","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_21568","state_val_21569","inst_21565","inst_21566","statearr-21570","statearr-21571","e21572","statearr-21573","statearr-21574","statearr-21575","bad-csrf?","reference-csrf-token","csrf-token-from-client","taoensso.encore/const-str=","ev-msg-const","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__21576","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_21584","state_val_21585","inst_21579","inst_21581","inst_21582","statearr-21586","statearr-21587","e21588","statearr-21589","statearr-21590","statearr-21591","sch-uuid","receive-event-msg!","taoensso$sente$self","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","udt-open","state_21628","state_val_21629","inst_21624","statearr-21630","inst_21592","inst_21593","statearr-21631","statearr-21632","inst_21602","inst_21597","inst_21598","inst_21599","cljs.core/PersistentVector","inst_21600","inst_21601","statearr-21633","statearr-21634","statearr-21635","inst_21608","inst_21617","statearr-21636","statearr-21637","statearr-21638","inst_21626","statearr-21639","inst_21595","inst_21613","inst_21614","statearr-21640","statearr-21641","inst_21607","inst_21609","statearr-21642","statearr-21643","statearr-21644","inst_21621","statearr-21645","inst_21611","statearr-21646","statearr-21647","statearr-21648","e21649","statearr-21650","statearr-21651","statearr-21652","taoensso.sente.interfaces/sch-open?","handshake?","state_21678","state_val_21679","inst_21653","inst_21660","inst_21655","inst_21656","inst_21657","inst_21658","inst_21659","statearr-21680","statearr-21681","statearr-21682","inst_21665","inst_21666","inst_21667","statearr-21683","statearr-21684","statearr-21685","statearr-21686","inst_21676","inst_21669","inst_21670","statearr-21687","statearr-21688","inst_21673","statearr-21689","statearr-21690","e21691","statearr-21692","statearr-21693","statearr-21694","req-ppstr","vec__21695","_status","udt-close","state_21749","state_val_21750","statearr-21751","inst_21698","statearr-21752","statearr-21753","inst_21726","inst_21708","inst_21710","inst_21709","inst_21721","inst_21722","inst_21723","inst_21725","vec__21701","statearr-21757","statearr-21758","statearr-21759","inst_21713","inst_21714","inst_21715","statearr-21760","inst_21735","inst_21736","inst_21737","inst_21738","statearr-21761","inst_21700","inst_21704","inst_21705","inst_21706","inst_21707","inst_21711","statearr-21762","statearr-21763","statearr-21764","inst_21744","statearr-21765","inst_21728","inst_21729","inst_21730","inst_21731","inst_21732","inst_21733","statearr-21766","statearr-21767","statearr-21768","inst_21718","inst_21719","statearr-21769","statearr-21770","statearr-21771","inst_21741","statearr-21772","statearr-21773","inst_21747","statearr-21774","e21775","statearr-21776","statearr-21777","statearr-21778","_?sch","udt-t1","disconnect?","p__21724","vec__21754","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__21779","chunk__21780","count__21781","i__21782","vec__21795","vec__21798","vec__21801","vec__21804","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_21853","state_val_21854","inst_21815","inst_21808","inst_21809","inst_21825","inst_21826","cljs.core/PersistentHashSet","inst_21827","statearr-21858","inst_21807","statearr-21859","statearr-21860","statearr-21861","inst_21846","statearr-21862","inst_21832","inst_21837","inst_21838","inst_21839","inst_21822","statearr-21863","statearr-21864","statearr-21865","inst_21851","inst_21849","statearr-21866","inst_21811","inst_21812","inst_21813","inst_21814","inst_21816","taoensso.truss.impl/non-throwing","inst_21817","statearr-21870","statearr-21871","statearr-21872","statearr-21873","inst_21830","inst_21831","statearr-21874","statearr-21875","statearr-21876","inst_21820","statearr-21877","statearr-21878","inst_21841","inst_21842","statearr-21879","statearr-21880","inst_21834","inst_21835","statearr-21881","statearr-21882","statearr-21883","statearr-21884","e21885","statearr-21886","statearr-21887","statearr-21888","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove","cljs.core.reduce","k","vec__21867","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__21824","vec__21855","sent?","cljs.core.into","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn","x__5350__auto__","m__5351__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn","taoensso.sente/-chsk-disconnect!","taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn","taoensso.sente/-chsk-reconnect!","taoensso$sente$IChSocket$_chsk_send_BANG_$dyn","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__21890","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__21891","old-state","new-state","cljs.core.not_EQ_","output","taoensso.sente/chsk-state->closed","e21894","G__21896","taoensso.truss.impl/set*","e21895","taoensso.sente/cb-chan-as-fn","e21897","vec__21898","cb-ch","reply","cljs.core.keyword","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__21901","chunk__21902","count__21903","i__21904","vec__21911","vec__21914","id","taoensso.sente/handshake?","vec__21917","x1","taoensso.sente/receive-handshake!","chsk-type","G__21922","e21921","e21923","vec__21924","vec__21927","map__21930","?uid","ever-opened?_","first-handshake?","p1__21920#","taoensso.sente/?node-npm-websocket_","make-package-name","prefix","require-fn","js/require","cljs.core/constantly","e21931","G__21932","this__5300__auto__","k__5301__auto__","this__5302__auto__","k21939","else__5303__auto__","G__21943","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__5320__auto__","f__5321__auto__","init__5322__auto__","ret__5323__auto__","p__21944","vec__21945","k__5324__auto__","v__5325__auto__","this__5315__auto__","writer__5316__auto__","opts__5317__auto__","pr-pair__5318__auto__","keyval__5319__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__21938","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5298__auto__","__meta","this__5295__auto__","__hash","this__5304__auto__","this__5296__auto__","h__5111__auto__","coll__5297__auto__","cljs.core/hash-unordered-coll","this21940","other21941","this__5310__auto__","k__5311__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__5307__auto__","G__21948","this__5308__auto__","k__5309__auto__","pred__21949","expr__21950","this__5313__auto__","cljs.core/MapEntry","this__5299__auto__","this__5305__auto__","entry__5306__auto__","cljs.core/-nth","cljs.core/-conj","taoensso.sente/ChWebSocket","this__5346__auto__","cljs.core/List","writer__5347__auto__","G__21942","extmap__5342__auto__","G__22031","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__21933#","map__21952","taoensso.encore.reset_in_BANG_","e21953","timeout-ms","state_21964","state_val_21965","inst_21954","inst_21957","inst_21956","statearr-21966","statearr-21967","statearr-21968","inst_21959","statearr-21969","statearr-21970","inst_21962","statearr-21971","e21972","statearr-21973","statearr-21974","statearr-21975","e21976","cb-fn*","e21977","WebSocket","taoensso.encore.oget","goog/global","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__21934#","?socket","e21978","taoensso.encore/merge-url-with-query-string","G__21979","ws-ev","e21980","cljs.core.js__GT_clj","last-ws-error","p1__21935#","vec__21981","cb-fn","clean?","code","last-ws-close","p1__21936#","p1__21937#","state_22011","state_val_22012","inst_22007","statearr-22013","statearr-22014","inst_21988","inst_21989","statearr-22015","statearr-22016","statearr-22017","statearr-22018","inst_22009","inst_21985","inst_21986","statearr-22019","statearr-22020","inst_21991","inst_21992","statearr-22021","statearr-22022","inst_22003","statearr-22023","statearr-22024","inst_21994","inst_21995","inst_21996","inst_21997","inst_21998","inst_21999","cljs.core/PersistentHashMap","inst_22000","statearr-22025","statearr-22026","e22027","statearr-22028","statearr-22029","statearr-22030","taoensso.sente/new-ChWebSocket","csrf-token","k22039","G__22043","ajax-opts","curr-xhr_","p__22044","vec__22045","G__22038","this22040","other22041","G__22048","pred__22049","expr__22050","taoensso.sente/ChAjaxSocket","G__22042","G__22069","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__22032#","map__22052","G__22053","G__22054","G__22055","p__22056","map__22057","?error","?content","p1__22033#","vec__22058","content","resp-ppstr","p1__22034#","poll-fn","retry-count","p1__22035#","G__22061","G__22062","G__22063","p__22064","map__22065","p1__22036#","vec__22066","p1__22037#","taoensso.sente/new-ChAjaxSocket","k22071","G__22075","ws-chsk-opts","ajax-chsk-opts","impl_","p__22076","vec__22077","G__22070","this22072","other22073","G__22080","pred__22081","expr__22082","taoensso.sente/ChAutoSocket","G__22074","G__22085","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__22084","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__22086","G__22088","e22087","G__22089","G__22090","taoensso.encore.path","taoensso.sente/make-channel-socket-client!","p__22094","vec__22095","map__22098","seq22091","G__22092","G__22093","?csrf-token","port","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","G__22100","e22099","e22101","vec__22102","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","G__22105","clojure.string/replace-first","private-chs","buf","cljs.core.map","common-chsk-opts","auto-chsk-opts","?chsk","G__22106","chsk-state_","internal-ch","cljs.core.partial","ev-ch","cljs.core.async.merge","ev-msg-ch","vec__22107","cljs.core.async.pipe","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__22110","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","execute1","state_22141","state_val_22142","inst_22127","statearr-22143","statearr-22144","statearr-22145","statearr-22146","inst_22119","inst_22122","inst_22121","inst_22120","statearr-22147","statearr-22148","statearr-22149","inst_22125","statearr-22150","inst_22139","inst_22115","inst_22116","inst_22117","cljs.core.async/ioc-alts!","inst_22131","inst_22132","inst_22133","vec__22112","map__22130","inst_22134","statearr-22156","statearr-22157","statearr-22158","inst_22137","statearr-22159","statearr-22160","statearr-22161","e22162","statearr-22163","statearr-22164","statearr-22165","v","p","stop?","event-msg","e22151","G__22153","e22154","e22155","e1","e22152","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__22169","vec__22170","map__22173","seq22166","G__22167","G__22168","taoensso.sente/start-client-chsk-router!","p__22177","vec__22178","map__22181","seq22174","G__22175","G__22176","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__22182","G__22183","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__22184","map__22185","location","pathname"]],"~:used-vars",["^S",["~$taoensso.sente/-chsk-send!","~$taoensso.encore/idx-fn","~$cljs.core/--destructure-map","~$clojure.string/replace-first","~$taoensso.sente/get-chsk-url","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/keyword","~$taoensso.sente.interfaces/pack","~$cljs.core/PersistentHashMap","~$cljs.core.async/sliding-buffer","~$taoensso.encore/merge-url-with-query-string","~$taoensso.encore/read-edn","~$clojure.string/starts-with?","~$taoensso.sente/->EdnPacker","~$taoensso.sente/as-event","~$taoensso.truss.impl/set*","~$taoensso.sente/pack","~$taoensso.sente/chsk-state->closed","~$cljs.core/pr-sequential-writer","~$taoensso.sente/map->ChAjaxSocket","~$taoensso.sente/receive-handshake!","~$cljs.core/vector?","~$taoensso.sente/sente-version","~$clojure.string/blank?","~$cljs.core/=","~$taoensso.sente/server-event-msg?","~$taoensso.sente/chsk-destroy!","~$taoensso.encore/const-str=","~$cljs.core/keys","~$taoensso.sente.interfaces/sch-send!","~$cljs.core/ifn?","~$cljs.core/-assoc","~$taoensso.truss.impl/-invar-violation!","~$taoensso.encore/str-starts-with?","~$cljs.core/partial","~$taoensso.sente/node-target?","~$cljs.core/-write","~$taoensso.sente/ajax-lite","~$taoensso.timbre/-log!","~$cljs.core/IndexedSeq","~$cljs.core.async/ioc-alts!","~$taoensso.sente/make-channel-socket!","~$cljs.core/-iterator","~$taoensso.encore/rsome","~$cljs.core/count","~$taoensso.encore/as-qname","~$cljs.core/deref","~$goog/typeOf","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/compare-and-set!","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$taoensso.encore/pr-edn","~$taoensso.encore/exp-backoff","~$cljs.core/Keyword","~$taoensso.sente/-chsk-disconnect!","~$taoensso.sente/event?","~$taoensso.sente/ChWebSocket","~$cljs.core/rand-int","~$cljs.core/not=","~$taoensso.sente/send-buffered-server-evs>ws-clients!","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$taoensso.encore/get-win-loc","~$taoensso.sente/chsk-send!","~$cljs.core/keyword-identical?","~$cljs.core/Delay","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$taoensso.sente/validate-event","~$cljs.core/-with-meta","~$cljs.core.async/timeout","~$cljs.core/concat","~$taoensso.encore/nat-int?","~$taoensso.sente/-chsk-reconnect!","~$taoensso.sente/ChAjaxSocket","~$taoensso.sente/-chsk-connect!","~$taoensso.sente/pull-unused-cb-fn!","~$cljs.core.async.impl.ioc-helpers/take!","~$js/taoensso.sente","~$taoensso.encore/pos-int?","~$taoensso.sente/put-server-event-msg>ch-recv!","~$taoensso.sente/make-channel-socket-server!","~$taoensso.sente/assert-event","~$cljs.core/js->clj","~$taoensso.truss.impl/-dummy-error","~$cljs.core/set","~$cljs.core/native-satisfies?","~$js/taoensso","~$taoensso.sente.interfaces/unpack","~$taoensso.sente/chsk-connect!","~$cljs.core/empty?","~$js/taoensso.sente.debug-mode?_","~$cljs.core/contains?","~$taoensso.sente.interfaces/IPacker","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$taoensso.encore/ks>=","~$cljs.core/conj","~$goog/global","~$taoensso.timbre/*config*","~$taoensso.encore/nblank-str?","~$cljs.core/-conj","~$cljs.core/namespace","~$taoensso.sente/start-chsk-router!","~$taoensso.sente/default-edn-packer","~$cljs.core.async/merge","~$cljs.core/map","~$cljs.core.async.impl.dispatch/run","~$taoensso.encore/assert-min-encore-version","~$cljs.core.async/pipe","~$taoensso.sente/assert-send-args","~$taoensso.sente/ajax-call","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core/List","~$taoensso.sente/coerce-packer","~$cljs.core/vals","~$cljs.core/swap!","~$cljs.core.async/chan","~$taoensso.encore/swap-in!","~$taoensso.sente/expected","~$taoensso.sente/bad-origin?","~$cljs.core/get","~$taoensso.sente/handshake?","~$taoensso.sente/start-server-chsk-router!","~$cljs.core/constantly","~$taoensso.sente/receive-buffered-evs!","~$taoensso.sente/unpack","~$taoensso.truss.impl/non-throwing","~$taoensso.encore/atom?","~$cljs.core.async.impl.ioc-helpers/USER-START-IDX","~$cljs.core/-nth","~$cljs.core.async/close!","~$cljs.core/remove","~$taoensso.sente/next-idx!","~$taoensso.sente/-start-chsk-router!","~$cljs.core/not-empty","~$taoensso.sente/new-ChAjaxSocket","~$taoensso.encore/ajax-lite","~$taoensso.sente/default-chsk-url-fn","~$taoensso.sente/cb-error?","~$cljs.core/record?","~$taoensso.sente/start-chsk-router-loop!","~$cljs.core/missing-protocol","~$taoensso.encore/ms","~$taoensso.sente/chsk-send->closed!","~$taoensso.sente/EdnPacker","~$taoensso.sente/ChAutoSocket","~$taoensso.sente/->ChAutoSocket","~$cljs.core/-lookup","~$cljs.core/set?","~$cljs.core/nth","~$taoensso.encore/path","~$cljs.core/ex-info","~$cljs.core/PersistentHashSet","~$taoensso.encore/chan?","~$cljs.core/nil-iter","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","~$taoensso.sente/default-client-side-ajax-timeout-ms","~$taoensso.sente/set-logging-level!","~$taoensso.encore/encore-version","~$cljs.core/*target*","~$taoensso.encore/now-udt","~$cljs.core/next","~$taoensso.sente/swap-chsk-state!","~$taoensso.sente/->ChAjaxSocket","~$taoensso.encore/uuid-str","~$cljs.core/RecordIter","~$cljs.core/select-keys","~$taoensso.encore/swapped","~$cljs.core.async.impl.ioc-helpers/return-chan","~$taoensso.sente.interfaces/sch-open?","~$taoensso.sente/event-msg?","~$cljs.core/not","~$cljs.core/complement","~$taoensso.encore/reset-in!","~$cljs.core/disj","~$taoensso.sente/new-ChWebSocket","~$cljs.core/assoc","~$taoensso.sente/chsk-reconnect!","~$taoensso.timbre/set-level!","~$taoensso.sente/client-event-msg?","~$taoensso.truss.impl/some?","~$taoensso.sente/start-client-chsk-router!","~$cljs.core/reduce-kv","~$taoensso.sente.interfaces/IServerChanAdapter","~$cljs.core/hash-unordered-coll","~$js/require","~$cljs.core/first","~$taoensso.sente/new-ChAutoSocket","~$taoensso.sente/make-channel-socket-client!","~$cljs.core/subs","~$cljs.core/merge","~$taoensso.sente.interfaces/sch-close!","~$taoensso.sente/map->ChAutoSocket","~$taoensso.sente/debug-mode?_","~$taoensso.sente/IChSocket","~$js/Error","~$taoensso.sente/chsk-disconnect!","~$taoensso.sente/map->ChWebSocket","~$taoensso.sente/cb-success?","~$taoensso.sente/->ChWebSocket","~$cljs.core/boolean","~$taoensso.sente.interfaces/ring-req->server-ch-resp","~$cljs.core/type","~$cljs.core/inc","~$cljs.core/add-watch","~$taoensso.encore/oget","~$taoensso.sente/cb-chan-as-fn","~$taoensso.sente/?node-npm-websocket_","~$cljs.core/remove-watch","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1Q","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^S",[]],"~:deps-syms",["^15","~$goog.dom.HtmlElement"]]],["^1Q","goog/async/freelist.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","cljs/core/async/impl/ioc_helpers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","~$cljs.core.async.impl.protocols"]]],["^1Q","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1Q","taoensso/sente/interfaces.cljc"],["d54aa873a848f624a282c2c2f7df947c976a77b5","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^J"]]],["^1Q","cljs/core/async.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^79","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","^1Y","^1[","~$goog.array"]]],["^1Q","goog/timer/timer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.Promise","~$goog.events.EventTarget"]]],["^1Q","cljs/tools/reader/impl/utils.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^18","~$goog.string"]]],["^1Q","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.asserts"]]],["^1Q","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7E"]]],["^1Q","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^1Q","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7;","^7<","^7F","^7:","^7=","^7>"]]],["^1Q","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^7:"]]],["^1Q","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F"]]],["^1Q","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^7;","~$goog.reflect","^7:"]]],["^1Q","goog/structs/prioritypool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1Q","goog/async/run.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.async.WorkQueue","~$goog.debug.asyncStackTag","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1Q","taoensso/encore.cljs"],["30c096c80ac45227d869087a80755500fca98346","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^18","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","~$goog.object","^7E","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1Q","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/async/workqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.async.FreeList","^7F"]]],["^1Q","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1Q","goog/promise/resolver.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","cljs/tools/reader/edn.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^7E","^80"]]],["^1Q","goog/structs/priorityqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.structs.Heap"]]],["^1Q","goog/net/xhrio.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.Timer","^7B","^7F","~$goog.collections.maps","^89","^7D","~$goog.json.hybrid","~$goog.log","^86","^85","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^7Z","^7E","~$goog.uri.utils","^7H"]]],["^1Q","goog/promise/thenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","taoensso/sente.cljc"],["d54aa873a848f624a282c2c2f7df947c976a77b5","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^18","^13","^J","^F","^11"]]],["^1Q","goog/collections/iters.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","cljs/tools/reader/impl/inspect.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14"]]],["^1Q","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7;","^7:"]]],["^1Q","cljs/tools/reader.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^8?","^8@","^8A","^8>","^7B","^7E","^80"]]],["^1Q","goog/net/wrapperxmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1Q","goog/events/eventtarget.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.Disposable","^7F","^81","~$goog.events.Event","^8<","^8=","^7Z"]]],["^1Q","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1Q","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F"]]],["^1Q","goog/structs/set.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map"]]],"~:SHADOW-TIMESTAMP",[1727947715000,1727947715000,1715719162000],["^1Q","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","^7P"]]],["^1Q","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.events.ListenableKey"]]],["^1Q","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","~$goog.fs.blob","^7I","~$goog.html.SafeScript","~$goog.html.trustedtypes","^7K","^7L"]]],["^1Q","cljs/core/async/impl/channels.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^79","^1Y","^7@"]]],["^1Q","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","~$goog.events.Listener","^7Z"]]],["^1Q","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","taoensso/truss.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^20"]]],["^1Q","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","cljs/core/async/impl/dispatch.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^7@","^7U"]]],["^1Q","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7K","~$goog.html.SafeUrl","^7L","^7F","^7:"]]],["^1Q","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^8X","~$goog.html.SafeStyle","^8[","^7J","~$goog.html.uncheckedconversions","^7K","^7:"]]],["^1Q","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.dom.TagName","^7F","~$goog.dom.element"]]],["^1Q","taoensso/truss/impl.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^7W"]]],["^1Q","cljs/core/async/impl/protocols.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14"]]],["^1Q","goog/net/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/structs/map.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.collections.iters","~$goog.iter","~$goog.iter.Iterator","~$goog.iter.es6"]]],["^1Q","goog/net/xhriopool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^82","~$goog.structs.PriorityPool"]]],["^1Q","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7K","^8X","^94","~$goog.html.SafeStyleSheet","^8[","^96","^7J","^7L","^7F","^7M","^7B","^7Z","^7:","~$goog.dom.tags","^8Y"]]],["^1Q","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7Z"]]],["^1Q","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/structs/queue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B"]]],["^1Q","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","^7:","^7;"]]],["^1Q","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^18","^J"]]],["^1Q","cljs/reader.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^7Z","^8B","^7Y","^80"]]],["^1Q","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","^7F","^90","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^96","~$goog.dom.safe","^93","^95","~$goog.math.Coordinate","~$goog.math.Size","^7Z","^7E","^7K","~$goog.string.Unicode","^7H"]]],["^1Q","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.debug.Error","^9@"]]],["^1Q","cljs/core/async/impl/buffers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^79"]]],["^1Q","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","^7F","^8E","^7E","^8R","^8J","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Q","goog/net/errorcode.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7<"]]],["^1Q","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/iter/es6.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.iter.Iterable","^9:"]]],["^1Q","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^8;","^7H"]]],["^1Q","goog/debug/asyncstacktag.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F"]]],["^1Q","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/promise/promise.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.Thenable","^7F","^88","~$goog.async.run","^7V","^9E","^7T","^92","~$goog.promise.Resolver"]]],["^1Q","cljs/core/async/impl/timers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^79","^7?","^1Y"]]],["^1Q","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",[]]],["^1Q","goog/json/hybrid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","~$goog.json"]]],["^1Q","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","^7Z"]]],["^1Q","cljs/tools/reader/impl/errors.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^8?","^18","~$cljs.tools.reader.impl.inspect"]]],["^1Q","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^7E","^80"]]],["^1Q","goog/structs/pool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^8M","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1Q","goog/net/httpstatus.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/structs/heap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.structs.Node","^7Z"]]],["^1Q","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F"]]],["^1Q","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^9A","^95","^7K","^7:"]]],["^1Q","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7:","^7>"]]],["^1Q","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","~$goog.debug.errorcontext"]]],["^1Q","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.math"]]],["^1Q","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","cljs/tools/reader/reader_types.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^8@","^7E","^80"]]],["^1Q","goog/iter/iter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7B","^7F","~$goog.debug","^92","^9R"]]],["^1Q","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.flags"]]],["^1Q","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^89","~$goog.dom","^96","^92","^7M","^7N"]]],["^1Q","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^9@","^96"]]],["^1Q","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","^93","^8X","^94","^9=","^8[","^7J","^7K","^7:"]]],["^1Q","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^8M","~$goog.events.EventId"]]],["^1Q","cljs/tools/reader/impl/commons.cljs"],["5900b6ac80d561cd2e71f19dc878aba03fa977ef","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^8>","^8?","^8@"]]],["^1Q","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","~$goog.math.Long","~$goog.math.Integer","^7E","^7Z","^7B","~$goog.Uri","^80"]]],["^1Q","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7K","^7L","^8Y","^7F"]]],["^1Q","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","^9S"]]],["^1Q","goog/async/throwexception.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7K","^94","^7L","^7Z","^7F","^7:"]]],["^1Q","goog/structs/collection.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^9S","^8N","~$goog.events.EventType","^7P","^7H"]]],["^1Q","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7P"]]],["^1Q","goog/structs/node.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7H"]]],["^1Q","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14"]]],["^1Q","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","^7E"]]],["^1Q","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","^7L"]]],["^1Q","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^14","^18","^J","~$taoensso.timbre.appenders.core"]]],["^1Q","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^8P"]]],["^1Q","goog/json/json.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]],["^1Q","goog/net/xmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^8K"]]],["^1Q","goog/net/xmlhttp.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15","^7F","~$goog.net.WrapperXmlHttpFactory","^8L"]]],["^1Q","goog/net/xhrlike.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^74",["^ ","^75",null,"^76",["^S",[]],"^77",["^15"]]]]],"~:clj-info",["^ ","jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/clojure/tools/reader/edn.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1690756440000,"jar:file:/Users/john/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1679776604000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1679776607000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1715719162000,"jar:file:/Users/john/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1679776604000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/clojure/tools/reader/impl/errors.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/macros.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/reader.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1690756439000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1690756440000,"jar:file:/Users/john/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1679776604000,"jar:file:/Users/john/.m2/repository/re-frisk/sente/1.15.0/sente-1.15.0.jar!/taoensso/sente/interfaces.cljc",1679776606000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/ioc_macros.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/concurrent.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/com/taoensso/encore/2.117.0/encore-2.117.0.jar!/taoensso/encore.clj",1693680654000,"jar:file:/Users/john/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1679776607000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1690756439000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/dispatch.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/clojure/tools/reader/reader_types.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1679776604000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/timers.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/clojure/tools/reader/impl/inspect.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1690756439000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/clojure/tools/reader/default_data_readers.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1690756440000,"jar:file:/Users/john/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1679776604000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1690756439000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/reflect.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/buffers.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/exec/threadpool.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm/utils.clj",1690756438000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/channels.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/clojure/tools/reader.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/protocols.clj",1690756440000,"jar:file:/Users/john/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1679776604000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm.clj",1690756438000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/mutex.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/tools.reader/1.4.2/tools.reader-1.4.2.jar!/cljs/tools/reader/reader_types.clj",1715719099000,"jar:file:/Users/john/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/impl/ioc_macros.clj",1690756440000,"jar:file:/Users/john/.m2/repository/re-frisk/sente/1.15.0/sente-1.15.0.jar!/taoensso/sente.cljc",1679776606000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^S",["taoensso$sente$IChSocket$"]],"^B",["^ ","^C","^D","^E","^F","^G","^H","^I","^J","^K","^H","^L","^J","^M","^J","^N","^F","^O","^F","^P","^F","^Q","^F"],"^R",["^S",[]],"^T",["^ "],"^U","^D","^V",["^ "],"^Y",null,"^Z",["^ ","^[","^F","^10","^11","^12","^13","^14","^14","^15","^15","^11","^11","^13","^13","^16","^J","^F","^F","^17","^18","^18","^18","^J","^J"],"^19",["^S",["^1:","^1;"]],"~:shadow/js-access-global",["^S",["require","Error"]],"^1<",["^ ","^1=","^13","^1>","^13","^1?","^13","^1@","^13","^1A","^J","^1B","^J","^1C","^J","^1D","^J"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",892,"^:",11,"^;",892,"^<",29,"~:private",true,"~:arglists",["^1H",["~$quote",["^1H",[["~$state","~$reason"]]]]]],"^;Q",true,"^U","^2G","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1H",[["^;T","^;U"]]],"~:protocol-impl",null,"~:arglists-meta",["^1H",[null,null]],"^:",4,"~:variadic?",false,"^9",892,"~:ret-tag",["^S",[null,"~$clj","~$any"]],"^;",892,"~:max-fixed-arity",2,"~:fn-var",true,"^;R",["^1H",["^;S",["^1H",[["^;T","^;U"]]]]]],"~$assert-send-args",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",851,"^:",11,"^;",851,"^<",27,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^;Q",true,"^U","^4P","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["~$x","^<4","^<5"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",851,"^;Z","~$clj-nil","^;",851,"^<1",3,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x","^<4","^<5"]]]]]],"~$map->ChAjaxSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1203,"^;",1203,"^;R",["^1H",["^;S",["^1H",[["~$G__22042"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^U","^2I","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^<;"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^<8",true,"^;Y",false,"^<9","^<:","^9",1203,"^;Z","^3W","^;",1203,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<;"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",109,"^:",6,"^;",109,"^<",19],"^U","^2L","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",109,"^;",109,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^;P",null,"^5",["^ ","~:protocols",["^S",["^4>"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^<9","~:positional","^9",235,"^;",235,"^;R",["^1H",["^;S",["^1H",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^<@",["^S",["^4>"]],"^U","^2C","^8","taoensso/sente.cljc","^<",19,"^;V",["^1H",[[]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^<9","^<A","^9",235,"^;Z","^5H","^;",235,"^<1",0,"^<2",true,"^;R",["^1H",["^;S",["^1H",[[]]]]],"^<B",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",145,"^:",7,"^;",145,"^<",15,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"^U","^2D","^8","taoensso/sente.cljc","^<",15,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",145,"^;Z",["^S",[null,"^<>"]],"^;",145,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",162,"^:",7,"^;",162,"^<",24,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"^U","^2O","^8","taoensso/sente.cljc","^<",24,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",162,"^;Z","~$boolean","^;",162,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",751,"^:",8,"^;",751,"^<",44,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^;Q",true,"^U","^3G","^8","taoensso/sente.cljc","^<",44,"^;V",["^1H",[["^<G","^<H","^<I","^<J"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",751,"^;Z","^<6","^;",751,"^<1",4,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<G","^<H","^<I","^<J"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^;P",null,"^5",["^ ","^;Q",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^;Y",false,"~:fixed-arity",3,"^<1",3,"^;V",[["~$packer","^;["],["^<N","^;[","~$?cb-uuid"]],"^;R",["^1H",[["^<N","^;["],["^<N","^;[","^<O"]]],"^;X",["^1H",[null,null]]],"^:",8,"^9",219,"^;",219,"^;R",["^1H",["^;S",["^1H",[["^<N","^;["],["^<N","^;[","^<O"]]]]],"^7","clj->prefixed-pstr"],"^;Q",true,"^U","^2F","^8","taoensso/sente.cljc","^<",12,"^<L",["^ ","^;Y",false,"^<M",3,"^<1",3,"^;V",[["^<N","^;["],["^<N","^;[","^<O"]],"^;R",["^1H",[["^<N","^;["],["^<N","^;[","^<O"]]],"^;X",["^1H",[null,null]]],"^;V",[["^<N","^;["],["^<N","^;[","^<O"]],"^;W",null,"^<M",3,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"~:methods",[["^ ","^<M",2,"^;Y",false,"^<=","~$string"],["^ ","^<M",3,"^;Y",false,"^<=","^<Q"]],"^9",219,"^;",219,"^<1",3,"^<2",true,"^;R",["^1H",[["^<N","^;["],["^<N","^;[","^<O"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",835,"^:",10,"^;",835,"^<",20,"^;R",["^1H",["^;S",["^1H",[["~$chsk","~$ev"],["^<S","^<T","^<4","^<5"],["^<S","^<T","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^<L",["^ ","^;Y",false,"^<M",4,"^<1",4,"^;V",[["^<S","^<T"],["^<S","^<T","^<4","^<5"],["^<S","^<T","^<U"]],"^;R",["^1H",[["^<S","^<T"],["^<S","^<T","^<4","^<5"],["^<S","^<T","^<U"]]],"^;X",["^1H",[null,null,null]]]],"^U","^3K","^8","taoensso/sente.cljc","^<",20,"^<L",["^ ","^;Y",false,"^<M",4,"^<1",4,"^;V",[["^<S","^<T"],["^<S","^<T","^<4","^<5"],["^<S","^<T","^<U"]],"^;R",["^1H",[["^<S","^<T"],["^<S","^<T","^<4","^<5"],["^<S","^<T","^<U"]]],"^;X",["^1H",[null,null,null]]],"^;V",[["^<S","^<T"],["^<S","^<T","^<4","^<5"],["^<S","^<T","^<U"]],"^;W",null,"^<M",4,"^;X",["^1H",[null,null,null]],"^:",4,"^;Y",false,"^<P",[["^ ","^<M",2,"^;Y",false,"^<=","^<0"],["^ ","^<M",4,"^;Y",false,"^<=","^<0"],["^ ","^<M",3,"^;Y",false,"^<=","^<0"]],"^9",835,"^;",835,"^<1",4,"^<2",true,"^;R",["^1H",[["^<S","^<T"],["^<S","^<T","^<4","^<5"],["^<S","^<T","^<U"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",123,"^:",7,"^;",123,"^<",21,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^U","^3Q","^8","taoensso/sente.cljc","^<",21,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",123,"^;Z",["^S",["~$cljs.core/IMap","^<6"]],"^;",123,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",144,"^:",7,"^;",144,"^<",13,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^U","^3C","^8","taoensso/sente.cljc","^<",13,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",144,"^;Z","^<E","^;",144,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^U","^66","^8","taoensso/sente.cljc","^9",1659,"^:",1,"^;",1659,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1659,"^:",6,"^;",1659,"^<",16]],"~$make-channel-socket!",["^ ","^U","^33","^8","taoensso/sente.cljc","^9",1661,"^:",1,"^;",1661,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1661,"^:",6,"^;",1661,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$make-channel-socket-server!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",291,"^:",7,"^;",291,"^<",34,"^;R",["^1H",["^;S",["^1H",[["~$web-server-ch-adapter","~$&",[["^ ","~:keys",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$bad-csrf-fn","~$bad-origin-fn","~$csrf-token-fn","~$handshake-data-fn","^<N","~$allowed-origins"],"~:or",["^ ","^=3",["^1H",["~$enc/ms","~:secs",25]],"^=6",30,"^=<","~:all","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["~$fn",["~$ring-req"],["^1H",["~$or",["^1H",["~:anti-forgery-token","^=B"]],["^1H",["~$get-in","^=B",["~:session","~:csrf-token"]]],["^1H",["^=E","^=B",["^=F","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","~:edn","^=5",100,"^=9",["^1H",["^=A",["~$_ring-req"],["^ ","~:status",403,"~:body","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","~:uid"]]]]],"^=2",["^1H",["~$async/sliding-buffer",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^<L",["^ ","^;Y",true,"^<M",1,"^<1",1,"^;V",[["^1H",["^=0",[["^ ","^=1",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^<N","^=<"],"^==",["^ ","^=3",["^1H",["^=>","^=?",25]],"^=6",30,"^=<","^=@","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["^=A",["^=B"],["^1H",["^=C",["^1H",["^=D","^=B"]],["^1H",["^=E","^=B",["^=F","^=G"]]],["^1H",["^=E","^=B",["^=F","^=H"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","^=I","^=5",100,"^=9",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","^=M"]]]]],"^=2",["^1H",["^=N",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]],"^;R",["^1H",[["^=0","~$&",[["^ ","^=1",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^<N","^=<"],"^==",["^ ","^=3",["^1H",["^=>","^=?",25]],"^=6",30,"^=<","^=@","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["^=A",["^=B"],["^1H",["^=C",["^1H",["^=D","^=B"]],["^1H",["^=E","^=B",["^=F","^=G"]]],["^1H",["^=E","^=B",["^=F","^=H"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","^=I","^=5",100,"^=9",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","^=M"]]]]],"^=2",["^1H",["^=N",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]],"^;X",["^1H",[null]]]],"^U","^42","^8","taoensso/sente.cljc","^<",34,"^<L",["^ ","^;Y",true,"^<M",1,"^<1",1,"^;V",[["^1H",["^=0",[["^ ","^=1",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^<N","^=<"],"^==",["^ ","^=3",["^1H",["^=>","^=?",25]],"^=6",30,"^=<","^=@","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["^=A",["^=B"],["^1H",["^=C",["^1H",["^=D","^=B"]],["^1H",["^=E","^=B",["^=F","^=G"]]],["^1H",["^=E","^=B",["^=F","^=H"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","^=I","^=5",100,"^=9",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","^=M"]]]]],"^=2",["^1H",["^=N",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]],"^;R",["^1H",[["^=0","~$&",[["^ ","^=1",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^<N","^=<"],"^==",["^ ","^=3",["^1H",["^=>","^=?",25]],"^=6",30,"^=<","^=@","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["^=A",["^=B"],["^1H",["^=C",["^1H",["^=D","^=B"]],["^1H",["^=E","^=B",["^=F","^=G"]]],["^1H",["^=E","^=B",["^=F","^=H"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","^=I","^=5",100,"^=9",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","^=M"]]]]],"^=2",["^1H",["^=N",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]],"^;X",["^1H",[null]]],"^;V",[["^1H",["^=0",[["^ ","^=1",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^<N","^=<"],"^==",["^ ","^=3",["^1H",["^=>","^=?",25]],"^=6",30,"^=<","^=@","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["^=A",["^=B"],["^1H",["^=C",["^1H",["^=D","^=B"]],["^1H",["^=E","^=B",["^=F","^=G"]]],["^1H",["^=E","^=B",["^=F","^=H"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","^=I","^=5",100,"^=9",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","^=M"]]]]],"^=2",["^1H",["^=N",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]],"^;W",null,"^<M",1,"^;X",["^1H",[null]],"^:",1,"^;Y",true,"^<P",[["^ ","^<M",1,"^;Y",true,"^<=","^<W"]],"^9",291,"^;Z","^<0","^;",291,"^<1",1,"^<2",true,"^;R",["^1H",[["^=0","~$&",[["^ ","^=1",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^<N","^=<"],"^==",["^ ","^=3",["^1H",["^=>","^=?",25]],"^=6",30,"^=<","^=@","^=4",["^1H",["^=>","^=?",20]],"^=:",["^1H",["^=A",["^=B"],["^1H",["^=C",["^1H",["^=D","^=B"]],["^1H",["^=E","^=B",["^=F","^=G"]]],["^1H",["^=E","^=B",["^=F","^=H"]]],["^1H",["^=E","^=B",["^=F","__anti-forgery-token"]]]]]]],"^<N","^=I","^=5",100,"^=9",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Unauthorized origin"]]],"^=;",["^1H",["^=A",["^=B"],null]],"^=7",["^1H",["^=A",["^=B"],["^1H",["^=E","^=B",["^=F","^=M"]]]]],"^=2",["^1H",["^=N",1000]],"^=8",["^1H",["^=A",["^=J"],["^ ","^=K",403,"^=L","Bad CSRF token"]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",112,"^:",25,"^;",112,"^<",37,"^;Q",true],"^;Q",true,"^U","^2Y","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",112,"^;",112,"^<=","^<E"],"~$ajax-lite",["^ ","^U","^2[","^8","taoensso/sente.cljc","^9",818,"^:",10,"^;",818,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",818,"^:",15,"^;",818,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1442,"^:",11,"^;",1442,"^<",23,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$protocol","~$host","~$path","~$type"]]]]]],"^;Q",true,"^U","^2:","^8","taoensso/sente.cljc","^<",23,"^;V",["^1H",[["^=R","^=S","^=T","^=U"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",1442,"^;Z","^<Q","^;",1442,"^<1",4,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^=R","^=S","^=T","^=U"]]]]]],"~$-chsk-send!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",824,"^:",7,"^;",824,"^<",18,"~:protocol","^6N","^7",null,"^;R",["^1H",["^;S",["^1H",[["^<S","^<T","^<U"]]]]]],"^=W","^6N","^U","^26","^8","taoensso/sente.cljc","^<",18,"^;V",["^1H",[["^<S","^<T","^<U"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",820,"^;Z","^<0","^;",824,"^<1",3,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S","^<T","^<U"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",823,"^:",7,"^;",823,"^<",23,"^=W","^6N","^7",null,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]]],"^=W","^6N","^U","^3V","^8","taoensso/sente.cljc","^<",23,"^;V",["^1H",[["^<S"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",820,"^;Z","^<0","^;",823,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]],"^7",null],"~$receive-handshake!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",940,"^:",11,"^;",940,"^<",29,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$chsk-type","^<S","^;["]]]]]],"^;Q",true,"^U","^2J","^8","taoensso/sente.cljc","^<",29,"^;V",["^1H",[["^=Z","^<S","^;["]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",940,"^;Z","^3A","^;",940,"^<1",3,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^=Z","^<S","^;["]]]]]],"~$start-client-chsk-router!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1643,"^:",7,"^;",1643,"^<",32,"^;R",["^1H",["^;S",["^1H",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1J","^<U","^=1",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^<L",["^ ","^;Y",true,"^<M",2,"^<1",2,"^;V",[["^1H",["^>0","^>1",[["^ ","^1J","^<U","^=1",["^>2","^>3"]]]]]],"^;R",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3"]]]]]],"^;X",["^1H",[null]]]],"^U","^6A","^8","taoensso/sente.cljc","^<",32,"^<L",["^ ","^;Y",true,"^<M",2,"^<1",2,"^;V",[["^1H",["^>0","^>1",[["^ ","^1J","^<U","^=1",["^>2","^>3"]]]]]],"^;R",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3"]]]]]],"^;X",["^1H",[null]]],"^;V",[["^1H",["^>0","^>1",[["^ ","^1J","^<U","^=1",["^>2","^>3"]]]]]],"^;W",null,"^<M",2,"^;X",["^1H",[null]],"^:",1,"^;Y",true,"^<P",[["^ ","^<M",2,"^;Y",true,"^<=","~$function"]],"^9",1643,"^;Z","^<0","^;",1643,"^<1",2,"^<2",true,"^;R",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^U","^2P","^8","taoensso/sente.cljc","^9",832,"^:",6,"^;",832,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",832,"^:",11,"^;",832,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^<8",true,"^<9","^<A","^9",1203,"^;",1203,"^;R",["^1H",["^;S",["^1H",[["~$client-id","~$chs","~$params","^<N","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^U","^5[","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^>7","^>8","^>9","^<N","^>:","^>;","^><","^>=","^>>","^>?","^>@"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^<8",true,"^;Y",false,"^<9","^<A","^9",1203,"^;Z","^3W","^;",1203,"^<1",11,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^>7","^>8","^>9","^<N","^>:","^>;","^><","^>=","^>>","^>?","^>@"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",760,"^:",8,"^;",760,"^<",46,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<G","^<H","^<I"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^;Q",true,"^U","^5S","^8","taoensso/sente.cljc","^<",46,"^;V",["^1H",[["^<G","^<H","^<I"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",760,"^;Z",["^S",["^<0","^<6"]],"^;",760,"^<1",3,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<G","^<H","^<I"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1196,"^:",16,"^;",1196,"^<",51,"^;Q",true],"^;Q",true,"^U","^5T","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1196,"^;",1196,"^<=","^<0","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^<@",["^S",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^6N","^<W","~$cljs.core/ILookup"]],"^U","^3W","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^<8",true,"^9",1203,"~:record",true,"^;",1203,"^<=","^>4","^<B",["^S",["^>E","^>F","^>G","^>H","^>I","^>J","^>K","^>L","^>M","^>N","^>O","^>P","^>Q","^<W","^>R"]]],"~$set-logging-level!",["^ ","^U","^5U","^8","taoensso/sente.cljc","^9",1694,"^:",3,"^;",1694,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1694,"^:",8,"^;",1694,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^<8",true,"^<9","^<A","^9",1375,"^;",1375,"^;R",["^1H",["^;S",["^1H",[["~$ws-chsk-opts","~$ajax-chsk-opts","^>;","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^U","^5J","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^>W","^>X","^>;","^>Y"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^<8",true,"^;Y",false,"^<9","^<A","^9",1375,"^;Z","^5I","^;",1375,"^<1",4,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^>W","^>X","^>;","^>Y"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$-chsk-disconnect!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",822,"^:",7,"^;",822,"^<",24,"^=W","^6N","^7",null,"^;R",["^1H",["^;S",["^1H",[["^<S","^;U"]]]]]],"^=W","^6N","^U","^3B","^8","taoensso/sente.cljc","^<",24,"^;V",["^1H",[["^<S","^;U"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",820,"^;Z","^<0","^;",822,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S","^;U"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^U","^4I","^8","taoensso/sente.cljc","^9",1668,"^:",1,"^;",1668,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1668,"^:",6,"^;",1668,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",180,"^:",8,"^;",180,"^<",37,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^>0",["^ ","^1J","~$ev-msg","^=1",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^;Q",true,"^U","^41","^8","taoensso/sente.cljc","^<",37,"^;V",["^1H",[["^>0","~$p__21450"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",180,"^;Z",["^S",["^<E","^<0","^<6"]],"^;",180,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^>0",["^ ","^1J","^?1","^=1",["^?2","^?3"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",242,"^:",8,"^;",242,"^<",21,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"^;Q",true,"^U","^4U","^8","taoensso/sente.cljc","^<",21,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",242,"^;Z",["^S",[null,"^<0","^5H","^<6"]],"^;",242,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",821,"^:",7,"^;",821,"^<",21,"^=W","^6N","^7",null,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]]],"^=W","^6N","^U","^3X","^8","taoensso/sente.cljc","^<",21,"^;V",["^1H",[["^<S"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",820,"^;Z","^<0","^;",821,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",240,"^:",16,"^;",240,"^<",34,"^;Q",true],"^;Q",true,"^U","^4J","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",240,"^;",240,"^<=","^5H"],"~$new-ChAjaxSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1365,"^:",11,"^;",1365,"^<",27,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<U","~$csrf-token"]]]]]],"^;Q",true,"^U","^5?","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^<U","^?9"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",1365,"^;Z","^3W","^;",1365,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<U","^?9"]]]]]],"~$receive-buffered-evs!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",925,"^:",11,"^;",925,"^<",32,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^>8","^;["]]]]]],"^;Q",true,"^U","^54","^8","taoensso/sente.cljc","^<",32,"^;V",["^1H",[["^>8","^;["]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",925,"^;Z","^<6","^;",925,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^>8","^;["]]]]]],"~$chsk-connect!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",828,"^:",12,"^;",828,"^<",25,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]]],"^U","^4:","^8","taoensso/sente.cljc","^<",25,"^;V",["^1H",[["^<S"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",6,"^;Y",false,"^9",828,"^;Z","^<0","^;",828,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]]],"~$-start-chsk-router!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1587,"^:",8,"^;",1587,"^<",27,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$server?","^>0","^>1","^<U"]]]]]],"^;Q",true,"^U","^5=","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^?=","^>0","^>1","^<U"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",1587,"^;Z","^>4","^;",1587,"^<1",4,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^?=","^>0","^>1","^<U"]]]]]],"~$EdnPacker",["^ ","^>D",0,"^<@",["^S",["^4>"]],"^U","^5H","^8","taoensso/sente.cljc","^<",19,"^>S",true,"^:",10,"^9",235,"^>T",false,"^;",235,"^<=","^>4","^<B",null],"~$ChAutoSocket",["^ ","^>D",4,"^<@",["^S",["^>E","^>F","^>G","^>H","^>I","^>J","^>K","^>L","^>M","^>N","^>O","^>P","^>Q","^6N","^<W","^>R"]],"^U","^5I","^8","taoensso/sente.cljc","^<",27,"^>S",true,"^:",15,"^<8",true,"^9",1375,"^>T",true,"^;",1375,"^<=","^>4","^<B",["^S",["^>E","^>F","^>G","^>H","^>I","^>J","^>K","^>L","^>M","^>N","^>O","^>P","^>Q","^<W","^>R"]]],"~$cb-error?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",193,"^:",16,"^;",193,"^<",25,"^;R",["^1H",["^;S",["^1H",[["~$cb-reply-clj"]]]]]],"^U","^5B","^8","taoensso/sente.cljc","^<",25,"^;V",["^1H",[["^?A"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",10,"^;Y",false,"^9",193,"^;Z","^<0","^;",193,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^?A"]]]]]],"~$unpack",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",201,"^:",8,"^;",201,"^<",14,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<N","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^;Q",true,"^U","^55","^8","taoensso/sente.cljc","^<",14,"^;V",["^1H",[["^<N","^?C"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",201,"^;Z","^<>","^;",201,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<N","^?C"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",829,"^:",12,"^;",829,"^<",28,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]]],"^U","^6P","^8","taoensso/sente.cljc","^<",28,"^;V",["^1H",[["^<S"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",6,"^;Y",false,"^9",829,"^;Z","^<0","^;",829,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]]],"~$default-chsk-url-fn",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1698,"^:",11,"^;",1698,"^<",30],"^U","^5A","^8","taoensso/sente.cljc","^<",30,"^;V",["^1H",[["^=T","~$p__22184","~$websocket?"]]],"^;W",null,"^;X",["^1H",[]],"^:",6,"^;Y",false,"^9",1698,"^;Z","^<Q","^;",1698,"^<1",3,"^<2",true,"^;R",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1687,"^:",12,"^;",1687,"^<",35,"^;R",["^1H",["^;S",["^1H",[["~$event-handler","^>0"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^U","^5D","^8","taoensso/sente.cljc","^<",35,"^;V",["^1H",[["^?I","^>0"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",6,"^;Y",false,"^9",1687,"^;Z","^>4","^;",1687,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^?I","^>0"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",845,"^:",11,"^;",845,"^<",29,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$?cb-fn"]]]]]],"^;Q",true,"^U","^5G","^8","taoensso/sente.cljc","^<",29,"^;V",["^1H",[["^?K"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",845,"^;Z","^<E","^;",845,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^?K"]]]]]],"~$new-ChAutoSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1434,"^:",11,"^;",1434,"^<",27,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<U","^?9"]]]]]],"^;Q",true,"^U","^6G","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^<U","^?9"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",1434,"^;Z","^5I","^;",1434,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<U","^?9"]]]]]],"~$bad-origin?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",269,"^:",8,"^;",269,"^<",19,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^=<",["^ ","^1J","^=B","^=1",["~$headers"]]]]]]]],"^;Q",true,"^U","^4[","^8","taoensso/sente.cljc","^<",19,"^;V",["^1H",[["^=<","~$p__21466"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",269,"^;Z","^<E","^;",269,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^=<",["^ ","^1J","^=B","^=1",["^?N"]]]]]]]],"~$swap-chsk-state!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",866,"^:",11,"^;",866,"^<",27,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<S","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^;Q",true,"^U","^5Z","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^<S","~$f"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",866,"^;Z",["^S",["^<>","^<6"]],"^;",866,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",935,"^:",11,"^;",935,"^<",21,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"^;Q",true,"^U","^51","^8","taoensso/sente.cljc","^<",21,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",935,"^;Z","^<E","^;",935,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"~$ajax-call",["^ ","^U","^4Q","^8","taoensso/sente.cljc","^9",1696,"^:",12,"^;",1696,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1696,"^:",17,"^;",1696,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1184,"^:",11,"^;",1184,"^<",26,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<U","^?9"]]]]]],"^;Q",true,"^U","^6;","^8","taoensso/sente.cljc","^<",26,"^;V",["^1H",[["^<U","^?9"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",1184,"^;Z","^3D","^;",1184,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<U","^?9"]]]]]],"~$ChWebSocket",["^ ","^>D",14,"^<@",["^S",["^>E","^>F","^>G","^>H","^>I","^>J","^>K","^>L","^>M","^>N","^>O","^>P","^>Q","^6N","^<W","^>R"]],"^U","^3D","^8","taoensso/sente.cljc","^<",26,"^>S",true,"^:",15,"^<8",true,"^9",998,"^>T",true,"^;",998,"^<=","^>4","^<B",["^S",["^>E","^>F","^>G","^>H","^>I","^>J","^>K","^>L","^>M","^>N","^>O","^>P","^>Q","^<W","^>R"]]],"~$pull-unused-cb-fn!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",860,"^:",11,"^;",860,"^<",29,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["~$cbs-waiting_","^<O"]]]]]],"^;Q",true,"^U","^3Y","^8","taoensso/sente.cljc","^<",29,"^;V",["^1H",[["^?V","^<O"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",860,"^;Z",["^S",["^<0","^<6"]],"^;",860,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^?V","^<O"]]]]]],"~$assert-event",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",137,"^:",7,"^;",137,"^<",19,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^U","^43","^8","taoensso/sente.cljc","^<",19,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",137,"^;Z","^<6","^;",137,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",830,"^:",12,"^;",830,"^<",27,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^U","^6=","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^<S"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",6,"^;Y",false,"^9",830,"^;Z","^<0","^;",830,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<S"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1451,"^:",10,"^;",1451,"^<",37,"^;R",["^1H",["^;S",["^1H",[["^=T","~$?csrf-token","~$&",[["^ ","^=1",["^=U","^=R","^=S","~$port","^>9","^=2","^<N","^=3","^>7","^>?","~$wrap-recv-evs?","^>>"],"^1J","^<U","^==",["^ ","^=U","~:auto","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["~:client-uuid","^<U"]],["^1H",["~$enc/uuid-str"]]]],"^@0",true,"^>>","~$enc/exp-backoff","^=3",["^1H",["^=>","^=?",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^<L",["^ ","^;Y",true,"^<M",2,"^<1",2,"^;V",[["^1H",["^=T","^?Z",[["^ ","^=1",["^=U","^=R","^=S","^?[","^>9","^=2","^<N","^=3","^>7","^>?","^@0","^>>"],"^1J","^<U","^==",["^ ","^=U","^@1","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["^@2","^<U"]],["^1H",["^@3"]]]],"^@0",true,"^>>","^@4","^=3",["^1H",["^=>","^=?",20]]]],"^@5"]]]],"^;R",["^1H",[["^=T","^?Z","~$&",[["^ ","^=1",["^=U","^=R","^=S","^?[","^>9","^=2","^<N","^=3","^>7","^>?","^@0","^>>"],"^1J","^<U","^==",["^ ","^=U","^@1","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["^@2","^<U"]],["^1H",["^@3"]]]],"^@0",true,"^>>","^@4","^=3",["^1H",["^=>","^=?",20]]]],"^@5"]]]],"^;X",["^1H",[null]]]],"^U","^6H","^8","taoensso/sente.cljc","^<",37,"^<L",["^ ","^;Y",true,"^<M",2,"^<1",2,"^;V",[["^1H",["^=T","^?Z",[["^ ","^=1",["^=U","^=R","^=S","^?[","^>9","^=2","^<N","^=3","^>7","^>?","^@0","^>>"],"^1J","^<U","^==",["^ ","^=U","^@1","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["^@2","^<U"]],["^1H",["^@3"]]]],"^@0",true,"^>>","^@4","^=3",["^1H",["^=>","^=?",20]]]],"^@5"]]]],"^;R",["^1H",[["^=T","^?Z","~$&",[["^ ","^=1",["^=U","^=R","^=S","^?[","^>9","^=2","^<N","^=3","^>7","^>?","^@0","^>>"],"^1J","^<U","^==",["^ ","^=U","^@1","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["^@2","^<U"]],["^1H",["^@3"]]]],"^@0",true,"^>>","^@4","^=3",["^1H",["^=>","^=?",20]]]],"^@5"]]]],"^;X",["^1H",[null]]],"^;V",[["^1H",["^=T","^?Z",[["^ ","^=1",["^=U","^=R","^=S","^?[","^>9","^=2","^<N","^=3","^>7","^>?","^@0","^>>"],"^1J","^<U","^==",["^ ","^=U","^@1","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["^@2","^<U"]],["^1H",["^@3"]]]],"^@0",true,"^>>","^@4","^=3",["^1H",["^=>","^=?",20]]]],"^@5"]]]],"^;W",null,"^<M",2,"^;X",["^1H",[null]],"^:",4,"^;Y",true,"^<P",[["^ ","^<M",2,"^;Y",true,"^<=",["^S",["^<W","^<6"]]]],"^9",1451,"^;Z","^<0","^;",1451,"^<1",2,"^<2",true,"^;R",["^1H",[["^=T","^?Z","~$&",[["^ ","^=1",["^=U","^=R","^=S","^?[","^>9","^=2","^<N","^=3","^>7","^>?","^@0","^>>"],"^1J","^<U","^==",["^ ","^=U","^@1","^=2",["^1H",["^=N",2048]],"^<N","^=I","^>7",["^1H",["^=C",["^1H",["^@2","^<U"]],["^1H",["^@3"]]]],"^@0",true,"^>>","^@4","^=3",["^1H",["^=>","^=?",20]]]],"^@5"]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",907,"^:",11,"^;",907,"^<",24,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^<5","^<T"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^;Q",true,"^U","^6Z","^8","taoensso/sente.cljc","^<",24,"^;V",["^1H",[["^<5","^<T"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^;Y",false,"^9",907,"^;Z",["^S",[null,"^>4"]],"^;",907,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^<5","^<T"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^<8",true,"^<9","^<:","^9",1375,"^;",1375,"^;R",["^1H",["^;S",["^1H",[["~$G__22074"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^U","^6L","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^@8"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^<8",true,"^;Y",false,"^<9","^<:","^9",1375,"^;Z","^5I","^;",1375,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^@8"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","~:protocol-symbol",true,"^8","taoensso/sente.cljc","^<",26,"^:",17,"^9",820,"~:protocol-info",["^ ","^<P",["^ ","^?6",[["^<S"]],"^>Z",[["^<S","^;U"]],"^=X",[["^<S"]],"^=V",[["^<S","^<T","^<U"]]]],"^;",820,"~:sigs",["^ ","~:-chsk-connect!",["^ ","^U","^?6","^;R",["^1H",[["^<S"]]],"^7",null],"~:-chsk-disconnect!",["^ ","^U","^>Z","^;R",["^1H",[["^<S","^;U"]]],"^7",null],"~:-chsk-reconnect!",["^ ","^U","^=X","^;R",["^1H",[["^<S"]]],"^7",null],"~:-chsk-send!",["^ ","^U","^=V","^;R",["^1H",[["^<S","^<T","^<U"]]],"^7",null]],"~:jsdoc",["^1H",["@interface"]]],"^@:",true,"^U","^6N","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",820,"^@;",["^ ","^<P",["^ ","^?6",[["^<S"]],"^>Z",[["^<S","^;U"]],"^=X",[["^<S"]],"^=V",[["^<S","^<T","^<U"]]]],"~:info",null,"^;",820,"^<=","^<0","^@<",["^ ","^@=",["^ ","^U","^?6","^;R",["^1H",[["^<S"]]],"^7",null],"^@>",["^ ","^U","^>Z","^;R",["^1H",[["^<S","^;U"]]],"^7",null],"^@?",["^ ","^U","^=X","^;R",["^1H",[["^<S"]]],"^7",null],"^@@",["^ ","^U","^=V","^;R",["^1H",[["^<S","^<T","^<U"]]],"^7",null]],"~:impls",["^S",["^3D","^3W","^5I"]],"^@A",["^1H",["@interface"]]],"~$debug-mode?_",["^ ","^U","^6M","^8","taoensso/sente.cljc","^9",115,"^:",1,"^;",115,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",115,"^:",10,"^;",115,"^<",22],"^<=","~$cljs.core/Atom"],"~$cb-success?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",194,"^:",16,"^;",194,"^<",27,"^;R",["^1H",["^;S",["^1H",[["^?A"]]]]]],"^U","^6R","^8","taoensso/sente.cljc","^<",27,"^;V",["^1H",[["^?A"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",10,"^;Y",false,"^9",194,"^;Z","^<E","^;",194,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^?A"]]]]]],"~$->ChWebSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^<8",true,"^<9","^<A","^9",998,"^;",998,"^;R",["^1H",["^;S",["^1H",[["^>7","^>8","^>9","^<N","^>:","^=3","^>;","^><","~$retry-count_","^>=","^>>","^?V","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^U","^6S","^8","taoensso/sente.cljc","^<",26,"^;V",["^1H",[["^>7","^>8","^>9","^<N","^>:","^=3","^>;","^><","^@H","^>=","^>>","^?V","^@I","^@J"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^<8",true,"^;Y",false,"^<9","^<A","^9",998,"^;Z","^3D","^;",998,"^<1",14,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^>7","^>8","^>9","^<N","^>:","^=3","^>;","^><","^@H","^>=","^>>","^?V","^@I","^@J"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",122,"^:",8,"^;",122,"^<",16,"^;Q",true,"^;R",["^1H",["^;S",["^1H",[["^@K","~$x"]]]]]],"^;Q",true,"^U","^4Z","^8","taoensso/sente.cljc","^<",16,"^;V",["^1H",[["^@K","~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",122,"^;Z","^<W","^;",122,"^<1",2,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^@K","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",975,"^:",19,"^;",975,"^<",39,"^;Q",true],"^;Q",true,"^U","^6[","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",975,"^;",975,"^<=","^3M","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1626,"^:",7,"^;",1626,"^<",32,"^;R",["^1H",["^;S",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^<L",["^ ","^;Y",true,"^<M",2,"^<1",2,"^;V",[["^1H",["^>0","^>1",[["^ ","^1J","^<U","^=1",["^>2","^>3","^@N"]]]]]],"^;R",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3","^@N"]]]]]],"^;X",["^1H",[null]]]],"^U","^52","^8","taoensso/sente.cljc","^<",32,"^<L",["^ ","^;Y",true,"^<M",2,"^<1",2,"^;V",[["^1H",["^>0","^>1",[["^ ","^1J","^<U","^=1",["^>2","^>3","^@N"]]]]]],"^;R",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3","^@N"]]]]]],"^;X",["^1H",[null]]],"^;V",[["^1H",["^>0","^>1",[["^ ","^1J","^<U","^=1",["^>2","^>3","^@N"]]]]]],"^;W",null,"^<M",2,"^;X",["^1H",[null]],"^:",1,"^;Y",true,"^<P",[["^ ","^<M",2,"^;Y",true,"^<=","^>4"]],"^9",1626,"^;Z","^<0","^;",1626,"^<1",2,"^<2",true,"^;R",["^1H",[["^>0","^>1","~$&",[["^ ","^1J","^<U","^=1",["^>2","^>3","^@N"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",151,"^:",7,"^;",151,"^<",24,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"^U","^6?","^8","taoensso/sente.cljc","^<",24,"^;V",["^1H",[["~$x"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",1,"^;Y",false,"^9",151,"^;Z","^<E","^;",151,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^;P",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^<8",true,"^<9","^<:","^9",998,"^;",998,"^;R",["^1H",["^;S",["^1H",[["~$G__21942"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^U","^6Q","^8","taoensso/sente.cljc","^<",26,"^;V",["^1H",[["^@Q"]]],"^;W",null,"^;X",["^1H",[null,null]],"^:",4,"^<8",true,"^;Y",false,"^<9","^<:","^9",998,"^;Z","^3D","^;",998,"^<1",1,"^<2",true,"^;R",["^1H",["^;S",["^1H",[["^@Q"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",262,"^:",16,"^;",262,"^<",25,"^;Q",true],"^;Q",true,"^U","^5<","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",262,"^;",262,"^<=","^<0"]],"^1;",["^ ","^H","^H","^[","^F","^12","^13","^14","^14","^13","^13","^D","^D","^16","^J","^F","^F","^1E","^H","^J","^J","^1F","^D"],"~:cljs.analyzer/constants",["^ ","^19",["^S",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^>?","^?V","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","~:allowed-origins","^@2","~:handshake","~:ch-recv","~:client-id","~:ev","^>;","~:X-CSRF-Token","^>X","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^=W","~:wrong-id-type","~:newly-connected","~:connected-uids","^=3","^>@","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^>=","^=M","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^>Y","^>7","^=?","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^>S","~:chsk/state","~:unnamespaced-id","~:debug","~:debug/timeout","~:state","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:port","~:vector","^=@","^>W","~:udt","^<N","^>8","~:chsk/bad-package","~:no-op","~:ajax-get-or-ws-handshake-fn","~:bad-origin-fn","~:headers","~:internal","^@J","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^>9","~:event","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","^=K","~:socket_","^@H","~:ever-opened?","~:ppstr","~:id","~:open?","~:expected","^=I","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^=G","~:f","~:bad-csrf-fn","~:error","~:unexpected","~:send-fn","~:wrong-length","^=D","~:on-error","~:timeout","~:resp-type","^>>","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","^=L","~:init?","^@I","^=H","~:last-ws-close","^@1","~:on-open","^>:","~:timeout-ms","~:chsk/handshake","^><","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^=F","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^C0","^CK","^>S","^AY","^BS","^BA","^CC","^AG","^AJ","^BV","^B8","^D0","^A7","^A2","^B?","^A@","^B;","^BQ","^BZ","^C;","^CB","^@V","^AA","^AL","^=M","^C6","^AT","~:f","^@1","^@U","^BM","^C7","^B9","^BC","^CU","^AW","^=I","^BG","^=@","^@W","^=?","^A3","^A>","^A;","^AD","^=D","^=F","^=G","^=H","^AR","^B=","^BF","^=K","^=L","^BN","^BT","^BU","^C?","^A6","^A5","^A8","^B<","^CV","^CL","^BB","^B0","^AK","^CS","^A0","^AI","^B5","^B6","^B3","^@X","^BE","^CN","^BY","^CW","^CP","^C@","^@[","^AH","^CD","^A[","^AV","^B2","^B1","^C1","^A<","^@Z","^CO","^A1","^CT","^A4","^B[","^B4","^AS","^B7","^BJ","^CA","^CH","^CG","^BO","^CX","^@Y","^BX","^BK","^BH","^C9","^BD","^C3","^C=","^B>","^BR","^CJ","^BW","^AX","^CQ","^AB","^AZ","^A?","^AF","^C[","^C4","^CM","^>7","^>8","^>9","^<N","^>:","^=3","^>;","^><","^@H","^>=","^>>","^?V","^@I","^@J","^CI","^@T","^AM","^CF","^C<","^CZ","^AC","^CR","^AE","^CE","^A:","^B:","^>?","^>@","^AP","^CY","^A9","^BL","^>W","^>X","^>Y","^@2","^=W","^B@","^BP","^C:","^C5","^AO","^C2","^C8","^A=","^C>","^AQ","^BI","^AN","^AU"]],"^1M",["^ ","^1:",["^S",[]],"^1;",["^S",[]]],"^1N",[],"^1O",["^15","^14","^18","^13","^J","^F","^11"]],"^X","^D","~:ns-specs",["^ "],"~:ns-spec-vars",["^S",[]],"~:compiler-options",["^73",[["^D4","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^D4","~:shadow-tweaks"],null,["^D4","~:source-map-inline"],null,["^D4","~:shadow-optimize-constants"],null,["^D4","~:elide-asserts"],false,["^D4","~:optimize-constants"],null,["^D4","^1T"],null,["^D4","~:external-config"],null,["^D4","~:tooling-config"],null,["^D4","~:emit-constants"],null,["^D4","~:load-tests"],null,["^D4","~:form-size-threshold"],null,["^D4","~:global-goog-object&array"],null,["^D4","~:data-readers"],null,["^D4","~:infer-externs"],"^@1",["^D4","^1V"],null,["^D6","~:js-provider"],"^1:",["~:mode"],"~:dev",["^D4","~:fn-invoke-direct"],null,["^D4","~:source-map"],"/dev/null"]]]