["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null, re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__14137 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__14138 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__14138);\n\ntry{try{var seq__14139 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__14140 = null;\nvar count__14141 = (0);\nvar i__14142 = (0);\nwhile(true){\nif((i__14142 < count__14141)){\nvar vec__14173 = chunk__14140.cljs$core$IIndexed$_nth$arity$2(null, i__14142);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14173,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14173,(1),null);\nvar temp__5802__auto___14276 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___14276)){\nvar effect_fn_14277 = temp__5802__auto___14276;\n(effect_fn_14277.cljs$core$IFn$_invoke$arity$1 ? effect_fn_14277.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_14277.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__14278 = seq__14139;\nvar G__14279 = chunk__14140;\nvar G__14280 = count__14141;\nvar G__14281 = (i__14142 + (1));\nseq__14139 = G__14278;\nchunk__14140 = G__14279;\ncount__14141 = G__14280;\ni__14142 = G__14281;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__14139);\nif(temp__5804__auto__){\nvar seq__14139__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14139__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__14139__$1);\nvar G__14282 = cljs.core.chunk_rest(seq__14139__$1);\nvar G__14283 = c__5525__auto__;\nvar G__14284 = cljs.core.count(c__5525__auto__);\nvar G__14285 = (0);\nseq__14139 = G__14282;\nchunk__14140 = G__14283;\ncount__14141 = G__14284;\ni__14142 = G__14285;\ncontinue;\n} else {\nvar vec__14198 = cljs.core.first(seq__14139__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14198,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14198,(1),null);\nvar temp__5802__auto___14287 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___14287)){\nvar effect_fn_14288 = temp__5802__auto___14287;\n(effect_fn_14288.cljs$core$IFn$_invoke$arity$1 ? effect_fn_14288.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_14288.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__14289 = cljs.core.next(seq__14139__$1);\nvar G__14290 = null;\nvar G__14291 = (0);\nvar G__14292 = (0);\nseq__14139 = G__14289;\nchunk__14140 = G__14290;\ncount__14141 = G__14291;\ni__14142 = G__14292;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__13669__auto___14293 = re_frame.interop.now();\nvar duration__13670__auto___14294 = (end__13669__auto___14293 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__13670__auto___14294,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__13669__auto___14293);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__14137);\n}} else {\nvar seq__14208 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__14209 = null;\nvar count__14210 = (0);\nvar i__14211 = (0);\nwhile(true){\nif((i__14211 < count__14210)){\nvar vec__14233 = chunk__14209.cljs$core$IIndexed$_nth$arity$2(null, i__14211);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14233,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14233,(1),null);\nvar temp__5802__auto___14296 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___14296)){\nvar effect_fn_14298 = temp__5802__auto___14296;\n(effect_fn_14298.cljs$core$IFn$_invoke$arity$1 ? effect_fn_14298.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_14298.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__14299 = seq__14208;\nvar G__14300 = chunk__14209;\nvar G__14301 = count__14210;\nvar G__14302 = (i__14211 + (1));\nseq__14208 = G__14299;\nchunk__14209 = G__14300;\ncount__14210 = G__14301;\ni__14211 = G__14302;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__14208);\nif(temp__5804__auto__){\nvar seq__14208__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14208__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__14208__$1);\nvar G__14308 = cljs.core.chunk_rest(seq__14208__$1);\nvar G__14309 = c__5525__auto__;\nvar G__14310 = cljs.core.count(c__5525__auto__);\nvar G__14311 = (0);\nseq__14208 = G__14308;\nchunk__14209 = G__14309;\ncount__14210 = G__14310;\ni__14211 = G__14311;\ncontinue;\n} else {\nvar vec__14238 = cljs.core.first(seq__14208__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14238,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14238,(1),null);\nvar temp__5802__auto___14317 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___14317)){\nvar effect_fn_14318 = temp__5802__auto___14317;\n(effect_fn_14318.cljs$core$IFn$_invoke$arity$1 ? effect_fn_14318.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_14318.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__14323 = cljs.core.next(seq__14208__$1);\nvar G__14324 = null;\nvar G__14325 = (0);\nvar G__14326 = (0);\nseq__14208 = G__14323;\nchunk__14209 = G__14324;\ncount__14210 = G__14325;\ni__14211 = G__14326;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__14244 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__14245 = null;\nvar count__14246 = (0);\nvar i__14247 = (0);\nwhile(true){\nif((i__14247 < count__14246)){\nvar map__14253 = chunk__14245.cljs$core$IIndexed$_nth$arity$2(null, i__14247);\nvar map__14253__$1 = cljs.core.__destructure_map(map__14253);\nvar effect = map__14253__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14253__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14253__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__14244,chunk__14245,count__14246,i__14247,map__14253,map__14253__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__14244,chunk__14245,count__14246,i__14247,map__14253,map__14253__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__14327 = seq__14244;\nvar G__14328 = chunk__14245;\nvar G__14329 = count__14246;\nvar G__14330 = (i__14247 + (1));\nseq__14244 = G__14327;\nchunk__14245 = G__14328;\ncount__14246 = G__14329;\ni__14247 = G__14330;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__14244);\nif(temp__5804__auto__){\nvar seq__14244__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14244__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__14244__$1);\nvar G__14331 = cljs.core.chunk_rest(seq__14244__$1);\nvar G__14332 = c__5525__auto__;\nvar G__14333 = cljs.core.count(c__5525__auto__);\nvar G__14334 = (0);\nseq__14244 = G__14331;\nchunk__14245 = G__14332;\ncount__14246 = G__14333;\ni__14247 = G__14334;\ncontinue;\n} else {\nvar map__14257 = cljs.core.first(seq__14244__$1);\nvar map__14257__$1 = cljs.core.__destructure_map(map__14257);\nvar effect = map__14257__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14257__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14257__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__14244,chunk__14245,count__14246,i__14247,map__14257,map__14257__$1,effect,ms,dispatch,seq__14244__$1,temp__5804__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__14244,chunk__14245,count__14246,i__14247,map__14257,map__14257__$1,effect,ms,dispatch,seq__14244__$1,temp__5804__auto__))\n,ms);\n}\n\n\nvar G__14335 = cljs.core.next(seq__14244__$1);\nvar G__14336 = null;\nvar G__14337 = (0);\nvar G__14338 = (0);\nseq__14244 = G__14335;\nchunk__14245 = G__14336;\ncount__14246 = G__14337;\ni__14247 = G__14338;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__14260 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__14261 = null;\nvar count__14262 = (0);\nvar i__14263 = (0);\nwhile(true){\nif((i__14263 < count__14262)){\nvar event = chunk__14261.cljs$core$IIndexed$_nth$arity$2(null, i__14263);\nre_frame.router.dispatch(event);\n\n\nvar G__14340 = seq__14260;\nvar G__14341 = chunk__14261;\nvar G__14342 = count__14262;\nvar G__14343 = (i__14263 + (1));\nseq__14260 = G__14340;\nchunk__14261 = G__14341;\ncount__14262 = G__14342;\ni__14263 = G__14343;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__14260);\nif(temp__5804__auto__){\nvar seq__14260__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14260__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__14260__$1);\nvar G__14344 = cljs.core.chunk_rest(seq__14260__$1);\nvar G__14345 = c__5525__auto__;\nvar G__14346 = cljs.core.count(c__5525__auto__);\nvar G__14347 = (0);\nseq__14260 = G__14344;\nchunk__14261 = G__14345;\ncount__14262 = G__14346;\ni__14263 = G__14347;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__14260__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__14348 = cljs.core.next(seq__14260__$1);\nvar G__14349 = null;\nvar G__14350 = (0);\nvar G__14351 = (0);\nseq__14260 = G__14348;\nchunk__14261 = G__14349;\ncount__14262 = G__14350;\ni__14263 = G__14351;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__14269 = cljs.core.seq(value);\nvar chunk__14270 = null;\nvar count__14271 = (0);\nvar i__14272 = (0);\nwhile(true){\nif((i__14272 < count__14271)){\nvar event = chunk__14270.cljs$core$IIndexed$_nth$arity$2(null, i__14272);\nclear_event(event);\n\n\nvar G__14352 = seq__14269;\nvar G__14353 = chunk__14270;\nvar G__14354 = count__14271;\nvar G__14355 = (i__14272 + (1));\nseq__14269 = G__14352;\nchunk__14270 = G__14353;\ncount__14271 = G__14354;\ni__14272 = G__14355;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__14269);\nif(temp__5804__auto__){\nvar seq__14269__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14269__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__14269__$1);\nvar G__14356 = cljs.core.chunk_rest(seq__14269__$1);\nvar G__14357 = c__5525__auto__;\nvar G__14358 = cljs.core.count(c__5525__auto__);\nvar G__14359 = (0);\nseq__14269 = G__14356;\nchunk__14270 = G__14357;\ncount__14271 = G__14358;\ni__14272 = G__14359;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__14269__$1);\nclear_event(event);\n\n\nvar G__14360 = cljs.core.next(seq__14269__$1);\nvar G__14361 = null;\nvar G__14362 = (0);\nvar G__14363 = (0);\nseq__14269 = G__14360;\nchunk__14270 = G__14361;\ncount__14271 = G__14362;\ni__14272 = G__14363;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$shadow.js.shim.module$react","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^N","~$re-frame.interceptor","^O","~$re-frame.events","^P","~$re-frame.trace","^Q","~$re-frame.registrar","^R","~$cljs.core","^S","~$goog","^T","~$router","~$re-frame.router","^V","^V","~$trace","^Q","~$events","^P","~$re-frame.loggers","^Y","~$re-frame.db","^Z"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^Z","~$->interceptor","^O","~$set-timeout!","^N","~$get-handler","^R","~$clear-handlers","^R","~$register-handler","^R","~$console","^Y"],"~:require-macros",["^ ","^Q","^Q","^W","^Q","^S","^S"],"~:form",["~#list",["~$ns","^H",["^1;",["^10",["^V","~:as","^U"],["^Z","~:refer",["^12"]],["^O","^1>",["^13"]],["^N","^1>",["^14"]],["^P","^1=","^X"],["^R","^1>",["^15","^16","^17"]],["^Y","^1>",["^18"]],["^Q","^1=","^W","~:include-macros",true]]]]],"~:flags",["^ ","^10",["^F",[]]],"~:js-deps",[],"~:deps",["^T","^S","^V","^Z","^O","^N","^P","^R","^Y","^Q"]],"^K","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1729212668163,"^I",["^ ","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^V","^V","^V","^W","^Q","^X","^P","^Y","^Y","^Z","^Z"],"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:used-var-namespaces",["^F",["^N","^O","^P","^Q","^H","^R","^S","~$js","^V","^Y","^Z"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__14137","re-frame.trace/*current-trace*","*current-trace*-temp-val__14138","re-frame.trace/start-trace","end__13669__auto__","re-frame.interop/now","duration__13670__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","seq__14139","cljs.core/seq","chunk__14140","count__14141","i__14142","vec__14173","cljs.core.nth","temp__5804__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__14198","cljs.core/first","cljs.core/next","seq__14208","chunk__14209","count__14210","i__14211","vec__14233","vec__14238","effect-key","effect-value","temp__5802__auto__","effect-fn","re_frame.registrar.get_handler","re_frame.loggers.console","value","seq__14244","chunk__14245","count__14246","i__14247","map__14253","cljs.core/--destructure-map","cljs.core.get","map__14257","ms","dispatch","effect","cljs.core.remove","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__14260","chunk__14261","count__14262","i__14263","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__14269","chunk__14270","count__14271","i__14272","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.registrar/get-handler","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$re-frame.trace/traces","~$cljs.core/partial","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/seq","~$cljs.core/chunk-first","~$re-frame.events/kind","~$re-frame.trace/start-trace","~$re-frame.registrar/clear-handlers","~$re-frame.registrar/kinds","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/remove","~$cljs.core/nil?","~$cljs.core/nth","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$cljs.core/first","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1D","reagent/impl/batching.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^T","^S","~$reagent.debug","~$reagent.impl.util"]]],["^1D","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.dom.HtmlElement"]]],["^1D","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1D","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.asserts"]]],["^1D","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^2[","^30","^33","^2Z","^31","^32"]]],["^1D","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2Z"]]],["^1D","re_frame/loggers.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","~$clojure.set"]]],["^1D","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33"]]],["^1D","reagent/impl/util.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","~$clojure.string","~$clojure.walk","~$goog.object","^2W"]]],["^1D","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2[","~$goog.reflect","^2Z"]]],["^1D","re_frame/router.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^P","^N","^Y","^Q"]]],["^1D","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","re_frame/registrar.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^N","^Y"]]],["^1D","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^2[","^2Z"]]],["^1D","reagent/ratom.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^2X","^2W","~$reagent.impl.batching","^38","^3;"]]],["^1D","re_frame/interop.cljs"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1D","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","shadow/js.js"],["505d916eecca9f8a8ef28f23451dc136c90b1029","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","reagent/impl/template.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^?","^39","^2X","~$reagent.impl.component","~$reagent.impl.input","~$reagent.impl.protocols","^3C","^2W","^3;"]]],["^1D","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33"]]],"~:SHADOW-TIMESTAMP",[1729212655000,1729212655000,1715719162000],["^1D","re_frame/events.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^Z","~$re-frame.utils","^N","^R","^Y","^O","^Q"]]],["^1D","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","^3?"]]],["^1D","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","~$goog.fs.blob","^34","~$goog.html.SafeScript","~$goog.html.trustedtypes","^36","^37"]]],["^1D","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^36","~$goog.html.SafeUrl","^37","^33","^2Z"]]],["^1D","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3J","~$goog.html.SafeStyle","^3L","^35","~$goog.html.uncheckedconversions","^36","^2Z"]]],["^1D","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.dom.TagName","^33","~$goog.dom.element"]]],["^1D","reagent/impl/component.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^3;","^?","^2X","^3@","^3F","^3C","^2W"]]],["^1D","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S"]]],["^1D","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^36","^3J","^3Q","~$goog.html.SafeStyleSheet","^3L","^3S","^35","^37","^33","^3<","~$goog.array","^3;","^2Z","~$goog.dom.tags","^3K"]]],["^1D","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3;"]]],["^1D","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3V","^2Z","^2["]]],["^1D","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3V","^33","^3M","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3S","~$goog.dom.safe","^3P","^3R","~$goog.math.Coordinate","~$goog.math.Size","^3;","~$goog.string","^36","~$goog.string.Unicode","~$goog.userAgent"]]],["^1D","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.debug.Error","^3Y"]]],["^1D","reagent/impl/protocols.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S"]]],["^1D","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3V","^33","~$goog.collections.maps","^41","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1D","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^30"]]],["^1D","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","re_frame/db.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^N"]]],["^1D","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",[]]],["^1D","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3V","^3;"]]],["^1D","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^41","~$goog.string.StringBuffer"]]],["~:shadow.build.js-support/require","react"],["^?","shadow.js.shim.module$react.js","require","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$shadow.js"]]],["^1D","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33"]]],["^1D","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3Z","^3R","^36","^2Z"]]],["^1D","re_frame/interceptor.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^Y","^N","^Q","^38"]]],["^1D","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^2Z","^32"]]],["^1D","reagent/core.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^?","~$reagent.impl.template","^3D","^2X","^3@","^3F","^3C","^2W"]]],["^1D","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.math"]]],["^1D","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.flags"]]],["^1D","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.debug.entryPointRegistry","~$goog.dom","^3S","^3O","^3<","^3="]]],["^1D","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3Y","^3S"]]],["^1D","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","^3P","^3J","^3Q","^3U","^3L","^35","^36","^2Z"]]],["^1D","re_frame/utils.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^Y"]]],["^1D","re_frame/fx.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^V","^Z","^O","^N","^P","^R","^Y","^Q"]]],["^1D","reagent/impl/input.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^3D","^3@","^3F"]]],["^1D","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T"]]],["^1D","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","~$goog.math.Long","~$goog.math.Integer","^41","^3;","^3V","~$goog.Uri","^4:"]]],["^1D","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^36","^37","^3K","^33"]]],["^1D","reagent/debug.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S"]]],["^1D","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^36","^3Q","^37","^3;","^33","^2Z"]]],["^1D","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^3?"]]],["^1D","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^43"]]],["^1D","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S"]]],["^1D","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","^41"]]],["^1D","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^33","^37"]]],["^1D","re_frame/trace.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^T","^S","^N","^Y","^3O"]]]]],"~:clj-info",["^ ","jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1690756440000,"jar:file:/Users/john/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1690756440000,"jar:file:/Users/john/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/core.clj",1685651089000,"jar:file:/Users/john/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1715719162000,"jar:file:/Users/john/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/ratom.clj",1685651089000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/debug.clj",1685651089000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1715719162000,"jar:file:/Users/john/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/interop.clj",1685651089000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1715719162000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^I",["^ "],"^L",null,"^M",["^ ","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^V","^V","^V","^W","^Q","^X","^P","^Y","^Y","^Z","^Z"],"^[",["^F",["^10"]],"~:shadow/js-access-global",["^F",["Error"]],"^11",["^ ","^12","^Z","^13","^O","^14","^N","^15","^R","^16","^R","^17","^R","^18","^Y"],"~:defs",["^ ","~$kind",["^ ","^G","^1S","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1;",["~$quote",["^1;",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^G","^1U","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1;",[["^5H","^5I"]]],"~:protocol-impl",null,"~:arglists-meta",["^1;",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5F",["^1;",["^5G",["^1;",[["^5H","^5I"]]]]],"^5J","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^G","^1X","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^5B","~$cljs.core/IMap","^5J","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^19",["^ ","^Q","^Q","^W","^Q","^S","^S"],"~:cljs.analyzer/constants",["^ ","^[",["^F",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^68","^63","^5W","^61","^69","^62","^5X","^5Z","^66","^64","^65","^6:","^67","^60","^5Y","^5[","^5V"]],"^1@",["^ ","^10",["^F",[]]],"^1A",[],"^1B",["^T","^S","^V","^Z","^O","^N","^P","^R","^Y","^Q"]],"^K","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2R",[["^6>","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^6>","~:shadow-tweaks"],null,["^6>","~:source-map-inline"],null,["^6>","~:shadow-optimize-constants"],null,["^6>","~:elide-asserts"],false,["^6>","~:optimize-constants"],null,["^6>","^1G"],null,["^6>","~:external-config"],null,["^6>","~:tooling-config"],null,["^6>","~:emit-constants"],null,["^6>","~:load-tests"],null,["^6>","~:form-size-threshold"],null,["^6>","~:global-goog-object&array"],null,["^6>","~:data-readers"],null,["^6>","~:infer-externs"],"~:auto",["^6>","^1I"],null,["^6@","~:js-provider"],"^10",["~:mode"],"~:dev",["^6>","~:fn-invoke-direct"],null,["^6>","~:source-map"],"/dev/null"]]]